<?xml version="1.0" encoding="UTF-8" ?>
<funcs>

	<func id="3000" name="hourlyOrderState" des="整点对订单状态进行判断" private="true" cron="0 10 * * * *">
		<!-- 查询所有已经发货的订单，如果物流信息显示已签收，则将状态设置为已签收 -->
		<job result="noSigns">select orders.id,dicti.des,orders.waybill from orders,dicti where orders.state = 4 and dicti.dictid = 8 and orders.wayname = dicti.`value`;</job>
		<job>JAeachCall(${noSigns},304)</job>

		<!-- 查找所有已收货的订单， 如果时间大于十天，则将状态设置为已完成，并自动分成 -->
		<job result="orders1">select id from orders where state = 5 and datediff(now(), time) > 10</job>
		<job>JAeachCall(${orders1},3001)</job>

		<!-- 查询所有退款中的订单，如果微信退款状态显示为退款成功，成更新状态为已退款 -->
		<job result="orders2">select id,cast(refundno as char) refundno from orders where state = 6</job>
		<job>JAeachCall(${orders2},1006)</job>
	</func>

	<func id="3001" name="autoRecode" des="将已收货的订单进行分成" private="true">
		<int name="id" must="true" />

		<job>update orders set orders.state = 8 where id = ${id}</job>
		<job>update recode set recode.state = 1 where recode.orderid = ${id}</job>
		<job result="recodes">select userid,score from recode where recode.orderid = ${id}</job>
		<job>JAeachCall(${recodes},3002)</job>
	</func>

	<func id="3002" name="autoRecodeUser" des="单个用户进行订单分成" private="true">
		<int name="userid" must="true" />
		<int name="score" must="true" />

		<job>update `user` set `user`.score = `user`.score + ${score} where `user`.id = ${userid}</job>
	</func>

</funcs>
