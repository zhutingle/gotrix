package server
func init() {
	StaticResource[".DS_Store"] = "AAAAAUJ1ZDEAABAAAAAIAAAAEAAAAAIJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAgAAAABAAAQAG9jYmxvYggAAAADAGMAcwBzSWxvY2Jsb2IAAAAQAAAAOwAAACj///////8AAAAAAAsAZgBhAHYAaQBjAG8AbgAuAGkAYwBvSWxvY2Jsb2IAAAAQAAAAqQAAACj///////8AAAAAAAMAaQBtAGdJbG9jYmxvYgAAABAAAAEXAAAAKP///////wAAAAAAAgBqAHNJbG9jYmxvYgAAABAAAAGFAAAAKP///////wAAAAAAAgBqAHNid3NwYmxvYgAAAMhicGxpc3QwMNcBAgMEBQYHCAkJCAkNCF1TaG93U3RhdHVzQmFyW1Nob3dTaWRlYmFyW1Nob3dUb29sYmFyW1Nob3dUYWJWaWV3XxAUQ29udGFpbmVyU2hvd1NpZGViYXJcV2luZG93Qm91bmRzW1Nob3dQYXRoYmFyCAkJCAlfEBd7ezY5LCA2NX0sIHsxMDM5LCA4MTJ9fQgIFyUxPUlgbXl6e3x9fpgAAAAAAAABAQAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAmQAAAAIAagBzdlNybmxvbmcAAAABAAAAAgBzAHBJbG9jYmxvYgAAABAAAAHzAAAAKP///////wAAAAAACQB0AGUAcwB0AC4AaAB0AG0AbElsb2NibG9iAAAAEAAAAmEAAAAogsAAABFAAACCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBERTREIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAIAAAAGAAAAAAAAAAAQAAAIAAAAABAAABAAAAAAAAAAABAAAEAAAAAAIAAAgAAAAYAAAAAAAAAAABAAAgAAAAAAEAAEAAAAAAAQAAgAAAAAABAAEAAAAAAAEAAgAAAAAAAQAEAAAAAAABAAgAAAAAAAEAEAAAAAAAAQAgAAAAAAABAEAAAAAAAAEAgAAAAAAAAQEAAAAAAAABAgAAAAAAAAEEAAAAAAAAAQgAAAAAAAABEAAAAAAAAAEg
	StaticResource["css/animations.css"] = ""
	StaticResource["css/reset.css"] = "77u/KiB7bWFyZ2luOiAwO3BhZGRpbmc6IDA7Ym94LXNpemluZzogY29udGVudC1ib3g7b3V0bGluZTogbm9uZTtiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtsaXN0LXN0eWxlOiBub25lO30NCio6bm90KGlucHV0LHRleHRhcmVhKSB7LXdlYmtpdC10b3VjaC1jYWxsb3V0OiBpbmhlcml0Oy13ZWJraXQtdXNlci1zZWxlY3Q6IGF1dG87fQ0KYm9keSB7d2lkdGg6IDEwMCU7Zm9udC1mYW1pbHk6ICLlvq7ova/pm4Xpu5EiLCLlh6/kvZMiLEhpcmFnaW5vIFNhbnMgR0IsQXJpYWwsSGVsdmV0aWNhLHNhbnMtc2VyaWY7Y29sb3I6ICM4Nzg3ODc7LXdlYmtpdC10b3VjaC1jYWxsb3V0OiBpbmhlcml0IDstd2Via2l0LXVzZXItc2VsZWN0OiBhdXRvIDtiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDt9DQphIHtjb2xvcjogIzg3ODc4Nzt0ZXh0LWRlY29yYXRpb246IG5vbmU7LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO30NCmJ1dHRvbixpbnB1dCxzZWxlY3QsdGV4dGFyZWEge3Jlc2l6ZTogbm9uZTtvdXRsaW5lOiBub25lO30NCg0KLmxlZnQge2Zsb2F0OmxlZnQ7fQ0KLnJpZ2h0IHtmbG9hdDpyaWdodDt9DQouaGlkZSB7ZGlzcGxheTpub25lO30NCi5jbGVhciB7Y2xlYXI6Ym90aDt9"
	StaticResource["favicon.ico"] = "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"
	StaticResource["js/.DS_Store"] = "AAAAAUJ1ZDEAABAAAAAIAAAAEAAAAAQKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAsAAAABAAAQAAB5AHAAdElsb2NibwAAAAcAZQBuAGMAcgB5AHAAdElsb2NibG9iAAAAEAAAADsAAAAo////////AAAAAAAHAGUAbgBjAHIAeQBwAHRid3NwYmxvYgAAAMhicGxpc3QwMNcBAgMEBQYHCAkJCAkNCF1TaG93U3RhdHVzQmFyW1Nob3dTaWRlYmFyW1Nob3dUb29sYmFyW1Nob3dUYWJWaWV3XxAUQ29udGFpbmVyU2hvd1NpZGViYXJcV2luZG93Qm91bmRzW1Nob3dQYXRoYmFyCAkJCAlfEBd7ezY5LCA2NX0sIHsxMDM5LCA4MTJ9fQgIFyUxPUlgbXl6e3x9fpgAAAAAAAABAQAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAmQAAAAcAZQBuAGMAcgB5AHAAdHZTcm5sb25nAAAAAQAAAA8AZwBvAHQAcgBpAHgALgBjAGEAYwBoAGUALgBqAHNJbG9jYmxvYgAAABAAAACpAAAAKP///////wAAAAAADwBnAG8AdAByAGkAeAAuAHQAbwBvAGwAcwAuAGoAc0lsb2NibG9iAAAAEAAAARcAAAAo////////AAAAAAACAGoAcUlsb2NibG9iAAAAEAAAAYUAAAAo////////AAAAAAADAG0AdQBpSWxvY2Jsb2IAAAAQAAAB8wAAACj///////8AAAAAAAQAcABsAHUAc0lsb2NibG9iAAAAEAAAAmEAAAAo////////AAAAAAAKAHAAcgBvAGoAZQBjAHQALgBqAHNJbG9jYmxvYgAAABAAAALPAAAAKP///////wAAAAAADQBxAHIAYwBvAGQAZQAuAG0AaQBuAC4AagBzSWxvY2Jsb2IAAAAQAAAAOwAAAKb///////8AAAAAAAUAegBlAHAAdABvSWxvY2Jsb2IAAAAQAAAAqQAAAKb///////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAgsAAABFAAAECggAAAAYAAAAAAAAAAABAAAgAAAAAAEAAEAAAAAAAQAAgAAAAAABAAEAAAAAAAEAAgAAAAAAAQAEAAAAAAABAAgAAAAAAAEAEAAAAAAAAQAgAAAAAAABAEAAAAAAAAEAgAAAAAAAAQEAAAAAAAABAgAAAAAAAAEEAAAAAAAAAQgAAAAAAAABEAAAAAAAAAEg
	StaticResource["js/encrypt/aes.js"] = ""
	StaticResource["js/encrypt/all.js"] = ""
	StaticResource["js/encrypt/bcrypt.js"] = ""
	StaticResource["js/encrypt/ec.js"] = ""
	StaticResource["js/encrypt/jsbn.js"] = ""
	StaticResource["js/encrypt/jsbn2.js"] = ""
	StaticResource["js/encrypt/login.js"] = ""
	StaticResource["js/encrypt/prng4.js"] = "Ly8gcHJuZzQuanMgLSB1c2VzIEFyY2ZvdXIgYXMgYSBQUk5HDQoNCmZ1bmN0aW9uIEFyY2ZvdXIoKSB7DQogIHRoaXMuaSA9IDA7DQogIHRoaXMuaiA9IDA7DQogIHRoaXMuUyA9IG5ldyBBcnJheSgpOw0KfQ0KDQovLyBJbml0aWFsaXplIGFyY2ZvdXIgY29udGV4dCBmcm9tIGtleSwgYW4gYXJyYXkgb2YgaW50cywgZWFjaCBmcm9tIFswLi4yNTVdDQpmdW5jdGlvbiBBUkM0aW5pdChrZXkpIHsNCiAgdmFyIGksIGosIHQ7DQogIGZvcihpID0gMDsgaSA8IDI1NjsgKytpKQ0KICAgIHRoaXMuU1tpXSA9IGk7DQogIGogPSAwOw0KICBmb3IoaSA9IDA7IGkgPCAyNTY7ICsraSkgew0KICAgIGogPSAoaiArIHRoaXMuU1tpXSArIGtleVtpICUga2V5Lmxlbmd0aF0pICYgMjU1Ow0KICAgIHQgPSB0aGlzLlNbaV07DQogICAgdGhpcy5TW2ldID0gdGhpcy5TW2pdOw0KICAgIHRoaXMuU1tqXSA9IHQ7DQogIH0NCiAgdGhpcy5pID0gMDsNCiAgdGhpcy5qID0gMDsNCn0NCg0KZnVuY3Rpb24gQVJDNG5leHQoKSB7DQogIHZhciB0Ow0KICB0aGlzLmkgPSAodGhpcy5pICsgMSkgJiAyNTU7DQogIHRoaXMuaiA9ICh0aGlzLmogKyB0aGlzLlNbdGhpcy5pXSkgJiAyNTU7DQogIHQgPSB0aGlzLlNbdGhpcy5pXTsNCiAgdGhpcy5TW3RoaXMuaV0gPSB0aGlzLlNbdGhpcy5qXTsNCiAgdGhpcy5TW3RoaXMual0gPSB0Ow0KICByZXR1cm4gdGhpcy5TWyh0ICsgdGhpcy5TW3RoaXMuaV0pICYgMjU1XTsNCn0NCg0KQXJjZm91ci5wcm90b3R5cGUuaW5pdCA9IEFSQzRpbml0Ow0KQXJjZm91ci5wcm90b3R5cGUubmV4dCA9IEFSQzRuZXh0Ow0KDQovLyBQbHVnIGluIHlvdXIgUk5HIGNvbnN0cnVjdG9yIGhlcmUNCmZ1bmN0aW9uIHBybmdfbmV3c3RhdGUoKSB7DQogIHJldHVybiBuZXcgQXJjZm91cigpOw0KfQ0KDQovLyBQb29sIHNpemUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDQgYW5kIGdyZWF0ZXIgdGhhbiAzMi4NCi8vIEFuIGFycmF5IG9mIGJ5dGVzIHRoZSBzaXplIG9mIHRoZSBwb29sIHdpbGwgYmUgcGFzc2VkIHRvIGluaXQoKQ0KdmFyIHJuZ19wc2l6ZSA9IDI1NjsNCg=="
	StaticResource["js/encrypt/rng.js"] = "Ly8gUmFuZG9tIG51bWJlciBnZW5lcmF0b3IgLSByZXF1aXJlcyBhIFBSTkcgYmFja2VuZCwgZS5nLiBwcm5nNC5qcw0KDQovLyBGb3IgYmVzdCByZXN1bHRzLCBwdXQgY29kZSBsaWtlDQovLyA8Ym9keSBvbkNsaWNrPSdybmdfc2VlZF90aW1lKCk7JyBvbktleVByZXNzPSdybmdfc2VlZF90aW1lKCk7Jz4NCi8vIGluIHlvdXIgbWFpbiBIVE1MIGRvY3VtZW50Lg0KDQp2YXIgcm5nX3N0YXRlOw0KdmFyIHJuZ19wb29sOw0KdmFyIHJuZ19wcHRyOw0KDQovLyBNaXggaW4gYSAzMi1iaXQgaW50ZWdlciBpbnRvIHRoZSBwb29sDQpmdW5jdGlvbiBybmdfc2VlZF9pbnQoeCkgew0KICBybmdfcG9vbFtybmdfcHB0cisrXSBePSB4ICYgMjU1Ow0KICBybmdfcG9vbFtybmdfcHB0cisrXSBePSAoeCA+PiA4KSAmIDI1NTsNCiAgcm5nX3Bvb2xbcm5nX3BwdHIrK10gXj0gKHggPj4gMTYpICYgMjU1Ow0KICBybmdfcG9vbFtybmdfcHB0cisrXSBePSAoeCA+PiAyNCkgJiAyNTU7DQogIGlmKHJuZ19wcHRyID49IHJuZ19wc2l6ZSkgcm5nX3BwdHIgLT0gcm5nX3BzaXplOw0KfQ0KDQovLyBNaXggaW4gdGhlIGN1cnJlbnQgdGltZSAody9taWxsaXNlY29uZHMpIGludG8gdGhlIHBvb2wNCmZ1bmN0aW9uIHJuZ19zZWVkX3RpbWUoKSB7DQogIHJuZ19zZWVkX2ludChuZXcgRGF0ZSgpLmdldFRpbWUoKSk7DQp9DQoNCi8vIEluaXRpYWxpemUgdGhlIHBvb2wgd2l0aCBqdW5rIGlmIG5lZWRlZC4NCmlmKHJuZ19wb29sID09IG51bGwpIHsNCiAgcm5nX3Bvb2wgPSBuZXcgQXJyYXkoKTsNCiAgcm5nX3BwdHIgPSAwOw0KICB2YXIgdDsNCiAgaWYod2luZG93LmNyeXB0byAmJiB3aW5kb3cuY3J5cHRvLmdldFJhbmRvbVZhbHVlcykgew0KICAgIC8vIFVzZSB3ZWJjcnlwdG8gaWYgYXZhaWxhYmxlDQogICAgdmFyIHVhID0gbmV3IFVpbnQ4QXJyYXkoMzIpOw0KICAgIHdpbmRvdy5jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKHVhKTsNCiAgICBmb3IodCA9IDA7IHQgPCAzMjsgKyt0KQ0KICAgICAgcm5nX3Bvb2xbcm5nX3BwdHIrK10gPSB1YVt0XTsNCiAgfQ0KICBpZihuYXZpZ2F0b3IuYXBwTmFtZSA9PSAiTmV0c2NhcGUiICYmIG5hdmlnYXRvci5hcHBWZXJzaW9uIDwgIjUiICYmIHdpbmRvdy5jcnlwdG8pIHsNCiAgICAvLyBFeHRyYWN0IGVudHJvcHkgKDI1NiBiaXRzKSBmcm9tIE5TNCBSTkcgaWYgYXZhaWxhYmxlDQogICAgdmFyIHogPSB3aW5kb3cuY3J5cHRvLnJhbmRvbSgzMik7DQogICAgZm9yKHQgPSAwOyB0IDwgei5sZW5ndGg7ICsrdCkNCiAgICAgIHJuZ19wb29sW3JuZ19wcHRyKytdID0gei5jaGFyQ29kZUF0KHQpICYgMjU1Ow0KICB9ICANCiAgd2hpbGUocm5nX3BwdHIgPCBybmdfcHNpemUpIHsgIC8vIGV4dHJhY3Qgc29tZSByYW5kb21uZXNzIGZyb20gTWF0aC5yYW5kb20oKQ0KICAgIHQgPSBNYXRoLmZsb29yKDY1NTM2ICogTWF0aC5yYW5kb20oKSk7DQogICAgcm5nX3Bvb2xbcm5nX3BwdHIrK10gPSB0ID4+PiA4Ow0KICAgIHJuZ19wb29sW3JuZ19wcHRyKytdID0gdCAmIDI1NTsNCiAgfQ0KICBybmdfcHB0ciA9IDA7DQogIHJuZ19zZWVkX3RpbWUoKTsNCiAgLy9ybmdfc2VlZF9pbnQod2luZG93LnNjcmVlblgpOw0KICAvL3JuZ19zZWVkX2ludCh3aW5kb3cuc2NyZWVuWSk7DQp9DQoNCmZ1bmN0aW9uIHJuZ19nZXRfYnl0ZSgpIHsNCiAgaWYocm5nX3N0YXRlID09IG51bGwpIHsNCiAgICBybmdfc2VlZF90aW1lKCk7DQogICAgcm5nX3N0YXRlID0gcHJuZ19uZXdzdGF0ZSgpOw0KICAgIHJuZ19zdGF0ZS5pbml0KHJuZ19wb29sKTsNCiAgICBmb3Iocm5nX3BwdHIgPSAwOyBybmdfcHB0ciA8IHJuZ19wb29sLmxlbmd0aDsgKytybmdfcHB0cikNCiAgICAgIHJuZ19wb29sW3JuZ19wcHRyXSA9IDA7DQogICAgcm5nX3BwdHIgPSAwOw0KICAgIC8vcm5nX3Bvb2wgPSBudWxsOw0KICB9DQogIC8vIFRPRE86IGFsbG93IHJlc2VlZGluZyBhZnRlciBmaXJzdCByZXF1ZXN0DQogIHJldHVybiBybmdfc3RhdGUubmV4dCgpOw0KfQ0KDQpmdW5jdGlvbiBybmdfZ2V0X2J5dGVzKGJhKSB7DQogIHZhciBpOw0KICBmb3IoaSA9IDA7IGkgPCBiYS5sZW5ndGg7ICsraSkgYmFbaV0gPSBybmdfZ2V0X2J5dGUoKTsNCn0NCg0KZnVuY3Rpb24gU2VjdXJlUmFuZG9tKCkge30NCg0KU2VjdXJlUmFuZG9tLnByb3RvdHlwZS5uZXh0Qnl0ZXMgPSBybmdfZ2V0X2J5dGVzOw0K"
	StaticResource["js/encrypt/sec.js"] = "Ly8gTmFtZWQgRUMgY3VydmVzDQoNCi8vIFJlcXVpcmVzIGVjLmpzLCBqc2JuLmpzLCBhbmQganNibjIuanMNCg0KLy8gLS0tLS0tLS0tLS0tLS0tLQ0KLy8gWDlFQ1BhcmFtZXRlcnMNCg0KLy8gY29uc3RydWN0b3INCmZ1bmN0aW9uIFg5RUNQYXJhbWV0ZXJzKGN1cnZlLGcsbixoKSB7DQogICAgdGhpcy5jdXJ2ZSA9IGN1cnZlOw0KICAgIHRoaXMuZyA9IGc7DQogICAgdGhpcy5uID0gbjsNCiAgICB0aGlzLmggPSBoOw0KfQ0KDQpmdW5jdGlvbiB4OWdldEN1cnZlKCkgew0KICAgIHJldHVybiB0aGlzLmN1cnZlOw0KfQ0KDQpmdW5jdGlvbiB4OWdldEcoKSB7DQogICAgcmV0dXJuIHRoaXMuZzsNCn0NCg0KZnVuY3Rpb24geDlnZXROKCkgew0KICAgIHJldHVybiB0aGlzLm47DQp9DQoNCmZ1bmN0aW9uIHg5Z2V0SCgpIHsNCiAgICByZXR1cm4gdGhpcy5oOw0KfQ0KDQpYOUVDUGFyYW1ldGVycy5wcm90b3R5cGUuZ2V0Q3VydmUgPSB4OWdldEN1cnZlOw0KWDlFQ1BhcmFtZXRlcnMucHJvdG90eXBlLmdldEcgPSB4OWdldEc7DQpYOUVDUGFyYW1ldGVycy5wcm90b3R5cGUuZ2V0TiA9IHg5Z2V0TjsNClg5RUNQYXJhbWV0ZXJzLnByb3RvdHlwZS5nZXRIID0geDlnZXRIOw0KDQovLyAtLS0tLS0tLS0tLS0tLS0tDQovLyBTRUNOYW1lZEN1cnZlcw0KDQpmdW5jdGlvbiBmcm9tSGV4KHMpIHsgcmV0dXJuIG5ldyBCaWdJbnRlZ2VyKHMsIDE2KTsgfQ0KDQpmdW5jdGlvbiBzZWNwMTI4cjEoKSB7DQogICAgLy8gcCA9IDJeMTI4IC0gMl45NyAtIDENCiAgICB2YXIgcCA9IGZyb21IZXgoIkZGRkZGRkZERkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGIik7DQogICAgdmFyIGEgPSBmcm9tSGV4KCJGRkZGRkZGREZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGQyIpOw0KICAgIHZhciBiID0gZnJvbUhleCgiRTg3NTc5QzExMDc5RjQzREQ4MjQ5OTNDMkNFRTVFRDMiKTsNCiAgICAvL2J5dGVbXSBTID0gSGV4LmRlY29kZSgiMDAwRTBENEQ2OTZFNjc2ODc1NjE1MTc1MENDMDNBNDQ3M0QwMzY3OSIpOw0KICAgIHZhciBuID0gZnJvbUhleCgiRkZGRkZGRkUwMDAwMDAwMDc1QTMwRDFCOTAzOEExMTUiKTsNCiAgICB2YXIgaCA9IEJpZ0ludGVnZXIuT05FOw0KICAgIHZhciBjdXJ2ZSA9IG5ldyBFQ0N1cnZlRnAocCwgYSwgYik7DQogICAgdmFyIEcgPSBjdXJ2ZS5kZWNvZGVQb2ludEhleCgiMDQiDQogICAgICAgICAgICAgICAgKyAiMTYxRkY3NTI4Qjg5OUIyRDBDMjg2MDdDQTUyQzVCODYiDQoJCSsgIkNGNUFDODM5NUJBRkVCMTNDMDJEQTI5MkRERUQ3QTgzIik7DQogICAgcmV0dXJuIG5ldyBYOUVDUGFyYW1ldGVycyhjdXJ2ZSwgRywgbiwgaCk7DQp9DQoNCmZ1bmN0aW9uIHNlY3AxNjBrMSgpIHsNCiAgICAvLyBwID0gMl4xNjAgLSAyXjMyIC0gMl4xNCAtIDJeMTIgLSAyXjkgLSAyXjggLSAyXjcgLSAyXjMgLSAyXjIgLSAxDQogICAgdmFyIHAgPSBmcm9tSGV4KCJGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRUZGRkZBQzczIik7DQogICAgdmFyIGEgPSBCaWdJbnRlZ2VyLlpFUk87DQogICAgdmFyIGIgPSBmcm9tSGV4KCI3Iik7DQogICAgLy9ieXRlW10gUyA9IG51bGw7DQogICAgdmFyIG4gPSBmcm9tSGV4KCIwMTAwMDAwMDAwMDAwMDAwMDAwMDAxQjhGQTE2REZBQjlBQ0ExNkI2QjMiKTsNCiAgICB2YXIgaCA9IEJpZ0ludGVnZXIuT05FOw0KICAgIHZhciBjdXJ2ZSA9IG5ldyBFQ0N1cnZlRnAocCwgYSwgYik7DQogICAgdmFyIEcgPSBjdXJ2ZS5kZWNvZGVQb2ludEhleCgiMDQiDQogICAgICAgICAgICAgICAgKyAiM0I0QzM4MkNFMzdBQTE5MkE0MDE5RTc2MzAzNkY0RjVERDREN0VCQiINCiAgICAgICAgICAgICAgICArICI5MzhDRjkzNTMxOEZEQ0VENkJDMjgyODY1MzE3MzNDM0YwM0M0RkVFIik7DQogICAgcmV0dXJuIG5ldyBYOUVDUGFyYW1ldGVycyhjdXJ2ZSwgRywgbiwgaCk7DQp9DQoNCmZ1bmN0aW9uIHNlY3AxNjByMSgpIHsNCiAgICAvLyBwID0gMl4xNjAgLSAyXjMxIC0gMQ0KICAgIHZhciBwID0gZnJvbUhleCgiRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkY3RkZGRkZGRiIpOw0KICAgIHZhciBhID0gZnJvbUhleCgiRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkY3RkZGRkZGQyIpOw0KICAgIHZhciBiID0gZnJvbUhleCgiMUM5N0JFRkM1NEJEN0E4QjY1QUNGODlGODFENEQ0QURDNTY1RkE0NSIpOw0KICAgIC8vYnl0ZVtdIFMgPSBIZXguZGVjb2RlKCIxMDUzQ0RFNDJDMTRENjk2RTY3Njg3NTYxNTE3NTMzQkYzRjgzMzQ1Iik7DQogICAgdmFyIG4gPSBmcm9tSGV4KCIwMTAwMDAwMDAwMDAwMDAwMDAwMDAxRjRDOEY5MjdBRUQzQ0E3NTIyNTciKTsNCiAgICB2YXIgaCA9IEJpZ0ludGVnZXIuT05FOw0KICAgIHZhciBjdXJ2ZSA9IG5ldyBFQ0N1cnZlRnAocCwgYSwgYik7DQogICAgdmFyIEcgPSBjdXJ2ZS5kZWNvZGVQb2ludEhleCgiMDQiDQoJCSsgIjRBOTZCNTY4OEVGNTczMjg0NjY0Njk4OTY4QzM4QkI5MTNDQkZDODIiDQoJCSsgIjIzQTYyODU1MzE2ODk0N0Q1OURDQzkxMjA0MjM1MTM3N0FDNUZCMzIiKTsNCiAgICByZXR1cm4gbmV3IFg5RUNQYXJhbWV0ZXJzKGN1cnZlLCBHLCBuLCBoKTsNCn0NCg0KZnVuY3Rpb24gc2VjcDE5MmsxKCkgew0KICAgIC8vIHAgPSAyXjE5MiAtIDJeMzIgLSAyXjEyIC0gMl44IC0gMl43IC0gMl42IC0gMl4zIC0gMQ0KICAgIHZhciBwID0gZnJvbUhleCgiRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRUZGRkZFRTM3Iik7DQogICAgdmFyIGEgPSBCaWdJbnRlZ2VyLlpFUk87DQogICAgdmFyIGIgPSBmcm9tSGV4KCIzIik7DQogICAgLy9ieXRlW10gUyA9IG51bGw7DQogICAgdmFyIG4gPSBmcm9tSGV4KCJGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkUyNkYyRkMxNzBGNjk0NjZBNzRERUZEOEQiKTsNCiAgICB2YXIgaCA9IEJpZ0ludGVnZXIuT05FOw0KICAgIHZhciBjdXJ2ZSA9IG5ldyBFQ0N1cnZlRnAocCwgYSwgYik7DQogICAgdmFyIEcgPSBjdXJ2ZS5kZWNvZGVQb2ludEhleCgiMDQiDQogICAgICAgICAgICAgICAgKyAiREI0RkYxMEVDMDU3RTlBRTI2QjA3RDAyODBCN0Y0MzQxREE1RDFCMUVBRTA2QzdEIg0KICAgICAgICAgICAgICAgICsgIjlCMkYyRjZEOUM1NjI4QTc4NDQxNjNEMDE1QkU4NjM0NDA4MkFBODhEOTVFMkY5RCIpOw0KICAgIHJldHVybiBuZXcgWDlFQ1BhcmFtZXRlcnMoY3VydmUsIEcsIG4sIGgpOw0KfQ0KDQpmdW5jdGlvbiBzZWNwMTkycjEoKSB7DQogICAgLy8gcCA9IDJeMTkyIC0gMl42NCAtIDENCiAgICB2YXIgcCA9IGZyb21IZXgoIkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZFRkZGRkZGRkZGRkZGRkZGRiIpOw0KICAgIHZhciBhID0gZnJvbUhleCgiRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkVGRkZGRkZGRkZGRkZGRkZDIik7DQogICAgdmFyIGIgPSBmcm9tSGV4KCI2NDIxMDUxOUU1OUM4MEU3MEZBN0U5QUI3MjI0MzA0OUZFQjhERUVDQzE0NkI5QjEiKTsNCiAgICAvL2J5dGVbXSBTID0gSGV4LmRlY29kZSgiMzA0NUFFNkZDODQyMkY2NEVENTc5NTI4RDM4MTIwRUFFMTIxOTZENSIpOw0KICAgIHZhciBuID0gZnJvbUhleCgiRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGOTlERUY4MzYxNDZCQzlCMUI0RDIyODMxIik7DQogICAgdmFyIGggPSBCaWdJbnRlZ2VyLk9ORTsNCiAgICB2YXIgY3VydmUgPSBuZXcgRUNDdXJ2ZUZwKHAsIGEsIGIpOw0KICAgIHZhciBHID0gY3VydmUuZGVjb2RlUG9pbnRIZXgoIjA0Ig0KICAgICAgICAgICAgICAgICsgIjE4OERBODBFQjAzMDkwRjY3Q0JGMjBFQjQzQTE4ODAwRjRGRjBBRkQ4MkZGMTAxMiINCiAgICAgICAgICAgICAgICArICIwNzE5MkI5NUZGQzhEQTc4NjMxMDExRUQ2QjI0Q0RENTczRjk3N0ExMUU3OTQ4MTEiKTsNCiAgICByZXR1cm4gbmV3IFg5RUNQYXJhbWV0ZXJzKGN1cnZlLCBHLCBuLCBoKTsNCn0NCg0KZnVuY3Rpb24gc2VjcDIyNHIxKCkgew0KICAgIC8vIHAgPSAyXjIyNCAtIDJeOTYgKyAxDQogICAgdmFyIHAgPSBmcm9tSGV4KCJGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIpOw0KICAgIHZhciBhID0gZnJvbUhleCgiRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkVGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkUiKTsNCiAgICB2YXIgYiA9IGZyb21IZXgoIkI0MDUwQTg1MEMwNEIzQUJGNTQxMzI1NjUwNDRCMEI3RDdCRkQ4QkEyNzBCMzk0MzIzNTVGRkI0Iik7DQogICAgLy9ieXRlW10gUyA9IEhleC5kZWNvZGUoIkJENzEzNDQ3OTlENUM3RkNEQzQ1QjU5RkEzQjlBQjhGNkE5NDhCQzUiKTsNCiAgICB2YXIgbiA9IGZyb21IZXgoIkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkYxNkEyRTBCOEYwM0UxM0REMjk0NTVDNUMyQTNEIik7DQogICAgdmFyIGggPSBCaWdJbnRlZ2VyLk9ORTsNCiAgICB2YXIgY3VydmUgPSBuZXcgRUNDdXJ2ZUZwKHAsIGEsIGIpOw0KICAgIHZhciBHID0gY3VydmUuZGVjb2RlUG9pbnRIZXgoIjA0Ig0KICAgICAgICAgICAgICAgICsgIkI3MEUwQ0JENkJCNEJGN0YzMjEzOTBCOTRBMDNDMUQzNTZDMjExMjIzNDMyODBENjExNUMxRDIxIg0KICAgICAgICAgICAgICAgICsgIkJEMzc2Mzg4QjVGNzIzRkI0QzIyREZFNkNENDM3NUEwNUEwNzQ3NjQ0NEQ1ODE5OTg1MDA3RTM0Iik7DQogICAgcmV0dXJuIG5ldyBYOUVDUGFyYW1ldGVycyhjdXJ2ZSwgRywgbiwgaCk7DQp9DQoNCmZ1bmN0aW9uIHNlY3AyNTZyMSgpIHsNCiAgICAvLyBwID0gMl4yMjQgKDJeMzIgLSAxKSArIDJeMTkyICsgMl45NiAtIDENCiAgICB2YXIgcCA9IGZyb21IZXgoIkZGRkZGRkZGMDAwMDAwMDEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkYiKTsNCiAgICB2YXIgYSA9IGZyb21IZXgoIkZGRkZGRkZGMDAwMDAwMDEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkMiKTsNCiAgICB2YXIgYiA9IGZyb21IZXgoIjVBQzYzNUQ4QUEzQTkzRTdCM0VCQkQ1NTc2OTg4NkJDNjUxRDA2QjBDQzUzQjBGNjNCQ0UzQzNFMjdEMjYwNEIiKTsNCiAgICAvL2J5dGVbXSBTID0gSGV4LmRlY29kZSgiQzQ5RDM2MDg4NkU3MDQ5MzZBNjY3OEUxMTM5RDI2Qjc4MTlGN0U5MCIpOw0KICAgIHZhciBuID0gZnJvbUhleCgiRkZGRkZGRkYwMDAwMDAwMEZGRkZGRkZGRkZGRkZGRkZCQ0U2RkFBREE3MTc5RTg0RjNCOUNBQzJGQzYzMjU1MSIpOw0KICAgIHZhciBoID0gQmlnSW50ZWdlci5PTkU7DQogICAgdmFyIGN1cnZlID0gbmV3IEVDQ3VydmVGcChwLCBhLCBiKTsNCiAgICB2YXIgRyA9IGN1cnZlLmRlY29kZVBvaW50SGV4KCIwNCINCiAgICAgICAgICAgICAgICArICI2QjE3RDFGMkUxMkM0MjQ3RjhCQ0U2RTU2M0E0NDBGMjc3MDM3RDgxMkRFQjMzQTBGNEExMzk0NUQ4OThDMjk2Ig0KCQkrICI0RkUzNDJFMkZFMUE3RjlCOEVFN0VCNEE3QzBGOUUxNjJCQ0UzMzU3NkIzMTVFQ0VDQkI2NDA2ODM3QkY1MUY1Iik7DQogICAgcmV0dXJuIG5ldyBYOUVDUGFyYW1ldGVycyhjdXJ2ZSwgRywgbiwgaCk7DQp9DQoNCi8vIFRPRE86IG1ha2UgdGhpcyBpbnRvIGEgcHJvcGVyIGhhc2h0YWJsZQ0KZnVuY3Rpb24gZ2V0U0VDQ3VydmVCeU5hbWUobmFtZSkgew0KICAgIGlmKG5hbWUgPT0gInNlY3AxMjhyMSIpIHJldHVybiBzZWNwMTI4cjEoKTsNCiAgICBpZihuYW1lID09ICJzZWNwMTYwazEiKSByZXR1cm4gc2VjcDE2MGsxKCk7DQogICAgaWYobmFtZSA9PSAic2VjcDE2MHIxIikgcmV0dXJuIHNlY3AxNjByMSgpOw0KICAgIGlmKG5hbWUgPT0gInNlY3AxOTJrMSIpIHJldHVybiBzZWNwMTkyazEoKTsNCiAgICBpZihuYW1lID09ICJzZWNwMTkycjEiKSByZXR1cm4gc2VjcDE5MnIxKCk7DQogICAgaWYobmFtZSA9PSAic2VjcDIyNHIxIikgcmV0dXJuIHNlY3AyMjRyMSgpOw0KICAgIGlmKG5hbWUgPT0gInNlY3AyNTZyMSIpIHJldHVybiBzZWNwMjU2cjEoKTsNCiAgICByZXR1cm4gbnVsbDsNCn0NCg=="
	StaticResource["js/encrypt/sha512.js"] = ""
	StaticResource["js/encrypt/webtoolkit.md5.js"] = ""
	StaticResource["js/gotrix.cache.js"] = ""
	StaticResource["js/gotrix.tools.js"] = "Ow0KKGZ1bmN0aW9uICh3KSB7DQoNCiAgICB2YXIgUCA9IHcuUCB8fCAody5QID0ge30pOw0KDQogICAgLyoqDQogICAgICog5omp5bGVIFN0cmluZyDnmoQgZnJvbSDmlrnms5XjgIINCiAgICAgKi8NCiAgICBTdHJpbmcucHJvdG90eXBlLmZyb20gPSBmdW5jdGlvbiAob2JqLCBmaWx0ZXIpIHsNCiAgICAgICAgdmFyIGdfcmVnID0gL1wqXHsoW1x3XC5dKSo/KCNbXlx9XSopP1x9L2c7DQogICAgICAgIHZhciByZWcxID0gL1wqXHsoXHcqPykoIyhbXlx9XSopKT9cfS87DQogICAgICAgIHZhciByZWcyID0gL1wqXHsoW1x3XC5dKj8pKCMoW15cfV0qKSk/XH0vOw0KICAgICAgICBvYmogPSBvYmogfHwgW107DQogICAgICAgIGlmIChvYmouY29uc3RydWN0b3IgPT0gQXJyYXkpIHsNCiAgICAgICAgICAgIHZhciBzdHJzID0gW10sIGQsIHByb3BlcnRpZXMsIHJlc3VsdFN0ciwgZXhzLCByZXBsYWNlOw0KICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvYmoubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgICAgICBkID0gb2JqW2ldIHx8IHt9Ow0KICAgICAgICAgICAgICAgIGlmIChmaWx0ZXIgJiYgZmlsdGVyKGksIGQpID09PSBmYWxzZSkgew0KICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgc3Rycy5wdXNoKHRoaXMucmVwbGFjZShnX3JlZywgZnVuY3Rpb24gKHMpIHsNCiAgICAgICAgICAgICAgICAgICAgZXhzID0gcmVnMS5leGVjKHMpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoZXhzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXBsYWNlID0gZFtleHNbMV1dOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChyZXBsYWNlID09PSB1bmRlZmluZWQgfHwgcmVwbGFjZSA9PT0gbnVsbCkgPyAoZXhzWzNdIHx8ICcnKSA6IHJlcGxhY2U7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgZXhzID0gcmVnMi5leGVjKHMpOw0KICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzID0gZXhzWzFdLnNwbGl0KCcuJyk7DQogICAgICAgICAgICAgICAgICAgIHJlc3VsdFN0ciA9IGQ7DQogICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcGVydGllcy5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0U3RyID0gcmVzdWx0U3RyW3Byb3BlcnRpZXNbaV1dOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFyZXN1bHRTdHIpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZXhzWzNdIHx8ICcnOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHRTdHI7DQogICAgICAgICAgICAgICAgfSkpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIHN0cnMuam9pbignJyk7DQogICAgICAgIH0gZWxzZSBpZiAob2JqLmNvbnN0cnVjdG9yID09IE9iamVjdCkgew0KICAgICAgICAgICAgcmV0dXJuIHRoaXMuZnJvbShbb2JqXSwgZmlsdGVyKTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOWRqOacn+aJp+ihjOS6i+S7tg0KICAgICAqLw0KICAgIHcucmVxdWVzdEFuaW1GcmFtZSA9IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHwgd2luZG93Lm1velJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8IHdpbmRvdy5tc1JlcXVlc3RBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cub1JlcXVlc3RBbmltYXRpb25GcmFtZSB8fCBmdW5jdGlvbiAoY2FsbGJhY2spIHsNCiAgICAgICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGNhbGxiYWNrLCAxMDAwIC8gNjApOw0KICAgICAgICB9Ow0KDQogICAgLyoqDQogICAgICog5ZGo5pyf5omn6KGM5LqL5Lu2DQogICAgICovDQogICAgdy5jYW5jZWxBbmltRnJhbWUgPSB3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWUgfHwgd2luZG93LndlYmtpdENhbmNlbEFuaW1hdGlvbkZyYW1lIHx8IHdpbmRvdy53ZWJraXRDYW5jZWxSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHwgd2luZG93Lm1vekNhbmNlbFJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cub0NhbmNlbFJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cubXNDYW5jZWxSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHwgY2xlYXJUaW1lb3V0Ow0KDQogICAgLyoqDQogICAgICog5LuOIHVybCDkuK3ojrflj5blh7rmiYDmnInnmoTlj4LmlbANCiAgICAgKi8NCiAgICBQLmdldFBhcmFtID0gZnVuY3Rpb24gKG5hbWUpIHsNCiAgICAgICAgdmFyIHBhcmFtID0ge307DQogICAgICAgIHZhciByZWcgPSAvKD86XD98JikoXHcqPyk9KFteJlw9XSo/KSg/PSZ8JCkvZzsNCiAgICAgICAgdmFyIGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZjsNCiAgICAgICAgdmFyIHN0cnMgPSByZWcuZXhlYyhocmVmKTsNCiAgICAgICAgd2hpbGUgKHN0cnMpIHsNCiAgICAgICAgICAgIHBhcmFtW3N0cnNbMV1dID0gc3Ryc1syXTsNCiAgICAgICAgICAgIHN0cnMgPSByZWcuZXhlYyhocmVmKTsNCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gbmFtZSA/IHBhcmFtW25hbWVdIDogcGFyYW07DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5Yik5pat5LiA5Liq5YWD57Sg5piv5ZCm5Zyo6L+Z5Liq5pWw57uE5LitDQogICAgICovDQogICAgUC5pbkFycmF5ID0gZnVuY3Rpb24gKGQsIGFycikgew0KICAgICAgICBpZiAodHlwZW9mIGFyciA9PSAnb2JqZWN0JyAmJiBhcnIuY29uc3RydWN0b3IgPT0gQXJyYXkpIHsNCiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBhcnIubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsNCiAgICAgICAgICAgICAgICBpZiAoYXJyW2ldID09IGQpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDojrflj5blvZPliY3ml7bpl7TvvIzmiJbmn5DkuKrml7bpl7TnmoTor6bnu4bkv6Hmga/jgIINCiAgICAgKi8NCiAgICBQLmdldERhdGUgPSBmdW5jdGlvbiAoZGF0ZSkgew0KICAgICAgICBkYXRlID0gZGF0ZSB8fCBuZXcgRGF0ZSgpOw0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgeWVhcjogZGF0ZS5nZXRGdWxsWWVhcigpLA0KICAgICAgICAgICAgbW9udGg6IGRhdGUuZ2V0TW9udGgoKSArIDEsDQogICAgICAgICAgICBkYXRlOiBkYXRlLmdldERhdGUoKSwNCiAgICAgICAgICAgIGRheTogZGF0ZS5nZXREYXkoKSwNCiAgICAgICAgICAgIGRheU9mV2VlazogWyfml6UnLCAn5LiAJywgJ+S6jCcsICfkuIknLCAn5ZubJywgJ+S6lCcsICflha0nXVtkYXRlLmdldERheSgpXSwNCiAgICAgICAgICAgIGhvdXI6IGRhdGUuZ2V0SG91cnMoKSwNCiAgICAgICAgICAgIG1pbnV0ZTogZGF0ZS5nZXRNaW51dGVzKCksDQogICAgICAgICAgICBzZWNvbmQ6IGRhdGUuZ2V0U2Vjb25kcygpLA0KICAgICAgICAgICAgbWlsbGlzZWNvbmQ6IGRhdGUuZ2V0TWlsbGlzZWNvbmRzKCkNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOiOt+WPluW9k+WJjeaXpeacnw0KICAgICAqLw0KICAgIFAuZ2V0Q3VyRGF0ZSA9IGZ1bmN0aW9uIChkYXRlLCBqb2luKSB7DQogICAgICAgIHZhciBkID0gUC5nZXREYXRlKGRhdGUpOw0KICAgICAgICBqb2luID0gam9pbiB8fCAnJzsNCiAgICAgICAgcmV0dXJuIGQueWVhciArIGpvaW4gKyBkLm1vbnRoICsgam9pbiArIGQuZGF0ZTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDlm77niYfkv67lpI0NCiAgICAgKi8NCiAgICB3LmltZ1NpemVyID0gew0KICAgICAgICBDb25maWc6IHsNCiAgICAgICAgICAgIGltZ0NhY2hlOiBbXSwNCiAgICAgICAgICAgIHNwYWNlcjogIi9wYXRoL3RvL3lvdXIvc3BhY2VyLmdpZiINCiAgICAgICAgfSwNCiAgICAgICAgY29sbGF0ZTogZnVuY3Rpb24gKGFTY29wZSkgew0KICAgICAgICAgICAgdmFyIGlzT2xkSUUgPSAoZG9jdW1lbnQuYWxsICYmICF3aW5kb3cub3BlcmEgJiYgIXdpbmRvdy5YRG9tYWluUmVxdWVzdCkgPyAxIDogMDsNCiAgICAgICAgICAgIGlmIChpc09sZElFICYmIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKSB7DQogICAgICAgICAgICAgICAgdmFyIGMgPSBpbWdTaXplcjsNCiAgICAgICAgICAgICAgICB2YXIgaW1nQ2FjaGUgPSBjLkNvbmZpZy5pbWdDYWNoZTsNCg0KICAgICAgICAgICAgICAgIHZhciBpbWFnZXMgPSAoYVNjb3BlICYmIGFTY29wZS5sZW5ndGgpID8gYVNjb3BlIDogZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImltZyIpOw0KICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaW1hZ2VzLmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgICAgICAgICAgIGltYWdlc1tpXS5vcmlnV2lkdGggPSBpbWFnZXNbaV0ub2Zmc2V0V2lkdGg7DQogICAgICAgICAgICAgICAgICAgIGltYWdlc1tpXS5vcmlnSGVpZ2h0ID0gaW1hZ2VzW2ldLm9mZnNldEhlaWdodDsNCg0KICAgICAgICAgICAgICAgICAgICBpbWdDYWNoZS5wdXNoKGltYWdlc1tpXSk7DQogICAgICAgICAgICAgICAgICAgIGMuaWVBbHBoYShpbWFnZXNbaV0pOw0KICAgICAgICAgICAgICAgICAgICBpbWFnZXNbaV0uc3R5bGUud2lkdGggPSAiMTAwJSI7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGltZ0NhY2hlLmxlbmd0aCkgew0KICAgICAgICAgICAgICAgICAgICBjLnJlc2l6ZShmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGltZ0NhY2hlLmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJhdGlvID0gKGltZ0NhY2hlW2ldLm9mZnNldFdpZHRoIC8gaW1nQ2FjaGVbaV0ub3JpZ1dpZHRoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWdDYWNoZVtpXS5zdHlsZS5oZWlnaHQgPSAoaW1nQ2FjaGVbaV0ub3JpZ0hlaWdodCAqIHJhdGlvKSArICJweCI7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgaWVBbHBoYTogZnVuY3Rpb24gKGltZykgew0KICAgICAgICAgICAgdmFyIGMgPSBpbWdTaXplcjsNCiAgICAgICAgICAgIGlmIChpbWcub2xkU3JjKSB7DQogICAgICAgICAgICAgICAgaW1nLnNyYyA9IGltZy5vbGRTcmM7DQogICAgICAgICAgICB9DQogICAgICAgICAgICB2YXIgc3JjID0gaW1nLnNyYzsNCiAgICAgICAgICAgIGltZy5zdHlsZS53aWR0aCA9IGltZy5vZmZzZXRXaWR0aCArICJweCI7DQogICAgICAgICAgICBpbWcuc3R5bGUuaGVpZ2h0ID0gaW1nLm9mZnNldEhlaWdodCArICJweCI7DQogICAgICAgICAgICBpbWcuc3R5bGUuZmlsdGVyID0gInByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5BbHBoYUltYWdlTG9hZGVyKHNyYz0nIiArIHNyYyArICInLCBzaXppbmdNZXRob2Q9J3NjYWxlJykiDQogICAgICAgICAgICBpbWcub2xkU3JjID0gc3JjOw0KICAgICAgICAgICAgaW1nLnNyYyA9IGMuQ29uZmlnLnNwYWNlcjsNCiAgICAgICAgfSwNCiAgICAgICAgcmVzaXplOiBmdW5jdGlvbiAoZnVuYykgew0KICAgICAgICAgICAgdmFyIG9sZG9ucmVzaXplID0gd2luZG93Lm9ucmVzaXplOw0KICAgICAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cub25yZXNpemUgIT0gJ2Z1bmN0aW9uJykgew0KICAgICAgICAgICAgICAgIHdpbmRvdy5vbnJlc2l6ZSA9IGZ1bmM7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHdpbmRvdy5vbnJlc2l6ZSA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKG9sZG9ucmVzaXplKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBvbGRvbnJlc2l6ZSgpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIGZ1bmMoKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCn0pKHdpbmRvdyk7"
	StaticResource["js/jq/jquery-1.11.3.min.js"] = ""
	StaticResource["js/jq/jquery-chart.js"] = ""
	StaticResource["js/jq/jquery-common.js"] = ""
	StaticResource["js/jq/jquery-progress.js"] = "Ow0KKGZ1bmN0aW9uKCkgew0KDQoJdmFyIHBsdWdpbiA9ICdwcm9ncmVzcyc7DQoNCgkkLmZuW3BsdWdpbl0gPSBmdW5jdGlvbihwYXJhbSwgZXh0MSwgZXh0Mikgew0KCQlpZiAodHlwZW9mIHBhcmFtID09ICdzdHJpbmcnKSB7DQoJCQl2YXIgcmV0dXJuVmFsdWU7DQoJCQl0aGlzLmVhY2goZnVuY3Rpb24oKSB7DQoJCQkJdmFyIGRhdGEgPSAkKHRoaXMpLmRhdGEocGx1Z2luKTsNCgkJCQlpZiAoZGF0YSAmJiBkYXRhW3BhcmFtXSAmJiAocmV0dXJuVmFsdWUgPSBkYXRhW3BhcmFtXShleHQxLCBleHQyKSkgIT09IHVuZGVmaW5lZCkgew0KCQkJCQlyZXR1cm4gZmFsc2U7DQoJCQkJfQ0KCQkJfSk7DQoJCQlyZXR1cm4gcmV0dXJuVmFsdWUgPT09IHVuZGVmaW5lZCA/IHRoaXMgOiByZXR1cm5WYWx1ZTsNCgkJfSBlbHNlIHsNCgkJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7DQoJCQkJJCh0aGlzKS5kYXRhKHBsdWdpbiwgaW5pdC5pbml0KHRoaXMsICQuZXh0ZW5kKHt9LCBkZWZhdWx0UGFyYW0sIHBhcmFtKSkpOw0KCQkJCXJlbmRlci5yZW5kZXIodGhpcyk7DQoJCQl9KTsNCgkJfQ0KCX0NCg0KCXZhciBkZWZhdWx0UGFyYW0gPSB7DQoJCXR5cGUgOiAnY2lyY2xlJywNCgkJdmFsdWUgOiAyNSwNCgkJdG90YWwgOiAxMDAsDQoNCgkJYmFja2dyb3VuZCA6ICcjMTI0MTVGJywNCgkJZnJvbnRDb2xvciA6ICcjRkZGNjFEJywNCgkJZGFya0NvbG9yIDogJyMxRjRFNkMnLA0KDQoJCW9uU3VjY2VzcyA6IGZ1bmN0aW9uKHBhcmFtKSB7DQoNCgkJfQ0KDQoJfQ0KDQoJdmFyIHB1YmxpY0Z1bmMgPSB7fQ0KDQoJdmFyIGluaXQgPSB7DQoJCWluaXQgOiBmdW5jdGlvbihkb20sIHBhcmFtKSB7DQoJCQlwYXJhbS4kdGhpcyA9ICQoZG9tKTsNCgkJCXBhcmFtLncgPSAkKGRvbSkud2lkdGgoKTsNCgkJCXBhcmFtLmggPSAkKGRvbSkuaGVpZ2h0KCk7DQoJCQlyZXR1cm4gcGFyYW07DQoJCX0NCgl9DQoNCgl2YXIgcmVuZGVyID0gew0KCQlyZW5kZXIgOiBmdW5jdGlvbihkb20pIHsNCgkJCXZhciBwYXJhbSA9ICQoZG9tKS5kYXRhKCdwcm9ncmVzcycpOw0KCQkJcmVuZGVyW3BhcmFtLnR5cGVdICYmIHJlbmRlcltwYXJhbS50eXBlXShwYXJhbSk7DQoJCX0sDQoJCWNpcmNsZSA6IGZ1bmN0aW9uKHBhcmFtKSB7DQoJCQl2YXIgJHRoaXMgPSBwYXJhbS4kdGhpcywgdyA9IHBhcmFtLncsIGggPSBwYXJhbS5oLCBiYWNrZ3JvdW5kID0gcGFyYW0uYmFja2dyb3VuZCwgZnJvbnRDb2xvciA9IHBhcmFtLmZyb250Q29sb3IsIGRhcmtDb2xvciA9IHBhcmFtLmRhcmtDb2xvcjsNCgkJCXZhciBsID0gTWF0aC5taW4odywgaCk7DQoJCQkkdGhpcy5jc3MoJ3Bvc2l0aW9uJywgJ3JlbGF0aXZlJyk7DQoJCQl2YXIgbWFya1N0ciA9ICc8ZGl2IHN0eWxlPSJwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDonICsgKGwgLSA4KSArICdweDtoZWlnaHQ6JyArIChsIC0gOCkgKyAncHg7bWFyZ2luOjRweCAwIDAgNHB4O2JhY2tncm91bmQ6JyArIGJhY2tncm91bmQgKyAnO2JvcmRlci1yYWRpdXM6MjAwMHB4OyI+PC9kaXY+JzsNCgkJCXZhciBzdHJzID0gW107DQoJCQlzdHJzLnB1c2goJzxkaXYgY2xhc3M9ImJhY2siIHN0eWxlPSJwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDonICsgbCArICdweDtoZWlnaHQ6JyArIGwgKyAncHg7YmFja2dyb3VuZDonICsgZGFya0NvbG9yICsgJztib3gtc2hhZG93OjBweCAwcHggMHB4IDFweCAnICsgZGFya0NvbG9yICsgJztib3JkZXItcmFkaXVzOjIwMDBweDsiPicgKyBtYXJrU3RyICsgJzwvZGl2PicpOw0KCQkJc3Rycy5wdXNoKCc8ZGl2IGNsYXNzPSJyaWdodCIgc3R5bGU9InBvc2l0aW9uOmFic29sdXRlO3dpZHRoOicgKyBsICsgJ3B4O2hlaWdodDonICsgbCArICdweDtiYWNrZ3JvdW5kOicgKyBmcm9udENvbG9yICsgJztib3gtc2hhZG93OjBweCAwcHggMHB4IDFweCAnICsgZGFya0NvbG9yICsgJztib3JkZXItcmFkaXVzOjIwMDBweDtjbGlwOnJlY3QoMCwnICsgbCArICdweCwnICsgbCArICdweCwnICsgKGwgLyAyKSArICdweCk7Ij4nICsgbWFya1N0ciArICc8L2Rpdj4nKTsNCgkJCXN0cnMucHVzaCgnPGRpdiBjbGFzcz0ibGVmdCIgc3R5bGU9InBvc2l0aW9uOmFic29sdXRlO3dpZHRoOicgKyBsICsgJ3B4O2hlaWdodDonICsgbCArICdweDtiYWNrZ3JvdW5kOicgKyBmcm9udENvbG9yICsgJztib3gtc2hhZG93OjBweCAwcHggMHB4IDFweCAnICsgZGFya0NvbG9yICsgJztib3JkZXItcmFkaXVzOjIwMDBweDtjbGlwOnJlY3QoMCwnICsgKGwgLyAyKSArICdweCwnICsgbCArICdweCwwcHgpOyI+JyArIG1hcmtTdHIgKyAnPC9kaXY+Jyk7DQoJCQkkdGhpcy5odG1sKHN0cnMuam9pbignJykpOw0KCQkJcmVuZGVyLmNpcmNsZVNldChwYXJhbSk7DQoJCX0sDQoJCWNpcmNsZVNldCA6IGZ1bmN0aW9uKHBhcmFtKSB7DQoJCQl2YXIgcmF0aW8gPSBwYXJhbS52YWx1ZSAvIHBhcmFtLnRvdGFsLCAkdGhpcyA9IHBhcmFtLiR0aGlzOw0KCQkJaWYgKHJhdGlvID4gMC41KSB7DQoJCQkJJHRoaXMuZmluZCgnLmxlZnQnKS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBwYXJhbS5mcm9udENvbG9yKS5jc3MoJ3RyYW5zZm9ybScsICdyb3RhdGUoJyArICgzNjAgKiAocmF0aW8gLSAxKSkgKyAnZGVnKScpOw0KCQkJfSBlbHNlIHsNCgkJCQkkdGhpcy5maW5kKCcubGVmdCcpLmNzcygnYmFja2dyb3VuZC1jb2xvcicsIHBhcmFtLmRhcmtDb2xvcikucHJldigpLmNzcygndHJhbnNmb3JtJywgJ3JvdGF0ZSgnICsgKDM2MCAqIChyYXRpbyAtIDAuNSkpICsgJ2RlZyknKTsNCgkJCX0NCgkJfSwNCgkJbGluZSA6IGZ1bmN0aW9uKHBhcmFtKSB7DQoJCQl2YXIgJHRoaXMgPSBwYXJhbS4kdGhpcywgdyA9IHBhcmFtLncsIGggPSBwYXJhbS5oLCBiYWNrZ3JvdW5kID0gcGFyYW0uYmFja2dyb3VuZCwgbGluZUNvbG9yID0gcGFyYW0uZnJvbnRDb2xvcjsNCgkJCSR0aGlzLmNzcygncG9zaXRpb24nLCAncmVsYXRpdmUnKS5jc3MoJ2JhY2tncm91bmQnLCBiYWNrZ3JvdW5kKTsNCgkJCXZhciBzdHJzID0gW107DQoJCQlzdHJzLnB1c2goJzxkaXYgc3R5bGU9InBvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7dG9wOjA7bGVmdDowO2JhY2tncm91bmQ6JyArIGxpbmVDb2xvciArICc7Ij48L2Rpdj4nKTsNCgkJCSR0aGlzLmh0bWwoc3Rycy5qb2luKCcnKSk7DQoJCQlyZW5kZXIubGluZVNldChwYXJhbSk7DQoJCX0sDQoJCWxpbmVTZXQgOiBmdW5jdGlvbihwYXJhbSkgew0KCQkJdmFyIHJhdGlvID0gMTAwICogcGFyYW0udmFsdWUgLyBwYXJhbS50b3RhbCwgJHRoaXMgPSBwYXJhbS4kdGhpczsNCgkJCSR0aGlzLmZpbmQoJ2RpdicpLmNzcygnd2lkdGgnLCByYXRpbyArICclJyk7DQoJCX0NCgl9DQoNCn0pKHdpbmRvdy5qUXVlcnkgfHwgd2luZG93LlplcHRvKTs="
	StaticResource["js/jq/jquery-qrcode-0.14.0.min.js"] = "LyohIGpxdWVyeS1xcmNvZGUgdjAuMTQuMCAtIGh0dHBzOi8vbGFyc2p1bmcuZGUvanF1ZXJ5LXFyY29kZS8gKi8KIWZ1bmN0aW9uKHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiB0KHQsZSxuLG8pe2Z1bmN0aW9uIGEocix0KXtyZXR1cm4gci09byx0LT1vLDA+cnx8cj49Y3x8MD50fHx0Pj1jPyExOmYuaXNEYXJrKHIsdCl9ZnVuY3Rpb24gaShyLHQsZSxuKXt2YXIgbz11LmlzRGFyayxhPTEvbDt1LmlzRGFyaz1mdW5jdGlvbihpLHUpe3ZhciBmPXUqYSxjPWkqYSxsPWYrYSxnPWMrYTtyZXR1cm4gbyhpLHUpJiYocj5sfHxmPmV8fHQ+Z3x8Yz5uKX19dmFyIHU9e30sZj1yKG4sZSk7Zi5hZGREYXRhKHQpLGYubWFrZSgpLG89b3x8MDt2YXIgYz1mLmdldE1vZHVsZUNvdW50KCksbD1mLmdldE1vZHVsZUNvdW50KCkrMipvO3JldHVybiB1LnRleHQ9dCx1LmxldmVsPWUsdS52ZXJzaW9uPW4sdS5tb2R1bGVDb3VudD1sLHUuaXNEYXJrPWEsdS5hZGRCbGFuaz1pLHV9ZnVuY3Rpb24gZShyLGUsbixvLGEpe249TWF0aC5tYXgoMSxufHwxKSxvPU1hdGgubWluKDQwLG98fDQwKTtmb3IodmFyIGk9bjtvPj1pO2krPTEpdHJ5e3JldHVybiB0KHIsZSxpLGEpfWNhdGNoKHUpe319ZnVuY3Rpb24gbihyLHQsZSl7dmFyIG49ZS5zaXplLG89ImJvbGQgIitlLm1TaXplKm4rInB4ICIrZS5mb250bmFtZSxhPXcoIjxjYW52YXMvPiIpWzBdLmdldENvbnRleHQoIjJkIik7YS5mb250PW87dmFyIGk9YS5tZWFzdXJlVGV4dChlLmxhYmVsKS53aWR0aCx1PWUubVNpemUsZj1pL24sYz0oMS1mKSplLm1Qb3NYLGw9KDEtdSkqZS5tUG9zWSxnPWMrZixzPWwrdSx2PS4wMTsxPT09ZS5tb2RlP3IuYWRkQmxhbmsoMCxsLXYsbixzK3YpOnIuYWRkQmxhbmsoYy12LGwtdixnK3Yscyt2KSx0LmZpbGxTdHlsZT1lLmZvbnRjb2xvcix0LmZvbnQ9byx0LmZpbGxUZXh0KGUubGFiZWwsYypuLGwqbisuNzUqZS5tU2l6ZSpuKX1mdW5jdGlvbiBvKHIsdCxlKXt2YXIgbj1lLnNpemUsbz1lLmltYWdlLm5hdHVyYWxXaWR0aHx8MSxhPWUuaW1hZ2UubmF0dXJhbEhlaWdodHx8MSxpPWUubVNpemUsdT1pKm8vYSxmPSgxLXUpKmUubVBvc1gsYz0oMS1pKSplLm1Qb3NZLGw9Zit1LGc9YytpLHM9LjAxOzM9PT1lLm1vZGU/ci5hZGRCbGFuaygwLGMtcyxuLGcrcyk6ci5hZGRCbGFuayhmLXMsYy1zLGwrcyxnK3MpLHQuZHJhd0ltYWdlKGUuaW1hZ2UsZipuLGMqbix1Km4saSpuKX1mdW5jdGlvbiBhKHIsdCxlKXt3KGUuYmFja2dyb3VuZCkuaXMoImltZyIpP3QuZHJhd0ltYWdlKGUuYmFja2dyb3VuZCwwLDAsZS5zaXplLGUuc2l6ZSk6ZS5iYWNrZ3JvdW5kJiYodC5maWxsU3R5bGU9ZS5iYWNrZ3JvdW5kLHQuZmlsbFJlY3QoZS5sZWZ0LGUudG9wLGUuc2l6ZSxlLnNpemUpKTt2YXIgYT1lLm1vZGU7MT09PWF8fDI9PT1hP24ocix0LGUpOigzPT09YXx8ND09PWEpJiZvKHIsdCxlKX1mdW5jdGlvbiBpKHIsdCxlLG4sbyxhLGksdSl7ci5pc0RhcmsoaSx1KSYmdC5yZWN0KG4sbyxhLGEpfWZ1bmN0aW9uIHUocix0LGUsbixvLGEsaSx1LGYsYyl7aT9yLm1vdmVUbyh0K2EsZSk6ci5tb3ZlVG8odCxlKSx1PyhyLmxpbmVUbyhuLWEsZSksci5hcmNUbyhuLGUsbixvLGEpKTpyLmxpbmVUbyhuLGUpLGY/KHIubGluZVRvKG4sby1hKSxyLmFyY1RvKG4sbyx0LG8sYSkpOnIubGluZVRvKG4sbyksYz8oci5saW5lVG8odCthLG8pLHIuYXJjVG8odCxvLHQsZSxhKSk6ci5saW5lVG8odCxvKSxpPyhyLmxpbmVUbyh0LGUrYSksci5hcmNUbyh0LGUsbixlLGEpKTpyLmxpbmVUbyh0LGUpfWZ1bmN0aW9uIGYocix0LGUsbixvLGEsaSx1LGYsYyl7aSYmKHIubW92ZVRvKHQrYSxlKSxyLmxpbmVUbyh0LGUpLHIubGluZVRvKHQsZSthKSxyLmFyY1RvKHQsZSx0K2EsZSxhKSksdSYmKHIubW92ZVRvKG4tYSxlKSxyLmxpbmVUbyhuLGUpLHIubGluZVRvKG4sZSthKSxyLmFyY1RvKG4sZSxuLWEsZSxhKSksZiYmKHIubW92ZVRvKG4tYSxvKSxyLmxpbmVUbyhuLG8pLHIubGluZVRvKG4sby1hKSxyLmFyY1RvKG4sbyxuLWEsbyxhKSksYyYmKHIubW92ZVRvKHQrYSxvKSxyLmxpbmVUbyh0LG8pLHIubGluZVRvKHQsby1hKSxyLmFyY1RvKHQsbyx0K2EsbyxhKSl9ZnVuY3Rpb24gYyhyLHQsZSxuLG8sYSxpLGMpe3ZhciBsPXIuaXNEYXJrLGc9bithLHM9bythLHY9ZS5yYWRpdXMqYSxoPWktMSxkPWkrMSx3PWMtMSxtPWMrMSx5PWwoaSxjKSxUPWwoaCx3KSxwPWwoaCxjKSxCPWwoaCxtKSxBPWwoaSxtKSxFPWwoZCxtKSxrPWwoZCxjKSxNPWwoZCx3KSxDPWwoaSx3KTt5P3UodCxuLG8sZyxzLHYsIXAmJiFDLCFwJiYhQSwhayYmIUEsIWsmJiFDKTpmKHQsbixvLGcscyx2LHAmJkMmJlQscCYmQSYmQixrJiZBJiZFLGsmJkMmJk0pfWZ1bmN0aW9uIGwocix0LGUpe3ZhciBuLG8sYT1yLm1vZHVsZUNvdW50LHU9ZS5zaXplL2EsZj1pO2ZvcihlLnJhZGl1cz4wJiZlLnJhZGl1czw9LjUmJihmPWMpLHQuYmVnaW5QYXRoKCksbj0wO2E+bjtuKz0xKWZvcihvPTA7YT5vO28rPTEpe3ZhciBsPWUubGVmdCtvKnUsZz1lLnRvcCtuKnUscz11O2Yocix0LGUsbCxnLHMsbixvKX1pZih3KGUuZmlsbCkuaXMoImltZyIpKXt0LnN0cm9rZVN0eWxlPSJyZ2JhKDAsMCwwLDAuNSkiLHQubGluZVdpZHRoPTIsdC5zdHJva2UoKTt2YXIgdj10Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbjt0Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbj0iZGVzdGluYXRpb24tb3V0Iix0LmZpbGwoKSx0Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbj12LHQuY2xpcCgpLHQuZHJhd0ltYWdlKGUuZmlsbCwwLDAsZS5zaXplLGUuc2l6ZSksdC5yZXN0b3JlKCl9ZWxzZSB0LmZpbGxTdHlsZT1lLmZpbGwsdC5maWxsKCl9ZnVuY3Rpb24gZyhyLHQpe3ZhciBuPWUodC50ZXh0LHQuZWNMZXZlbCx0Lm1pblZlcnNpb24sdC5tYXhWZXJzaW9uLHQucXVpZXQpO2lmKCFuKXJldHVybiBudWxsO3ZhciBvPXcocikuZGF0YSgicXJjb2RlIixuKSxpPW9bMF0uZ2V0Q29udGV4dCgiMmQiKTtyZXR1cm4gYShuLGksdCksbChuLGksdCksb31mdW5jdGlvbiBzKHIpe3ZhciB0PXcoIjxjYW52YXMvPiIpLmF0dHIoIndpZHRoIixyLnNpemUpLmF0dHIoImhlaWdodCIsci5zaXplKTtyZXR1cm4gZyh0LHIpfWZ1bmN0aW9uIHYocil7cmV0dXJuIHcoIjxpbWcvPiIpLmF0dHIoInNyYyIscyhyKVswXS50b0RhdGFVUkwoImltYWdlL3BuZyIpKX1mdW5jdGlvbiBoKHIpe3ZhciB0PWUoci50ZXh0LHIuZWNMZXZlbCxyLm1pblZlcnNpb24sci5tYXhWZXJzaW9uLHIucXVpZXQpO2lmKCF0KXJldHVybiBudWxsO3ZhciBuLG8sYT1yLnNpemUsaT1yLmJhY2tncm91bmQsdT1NYXRoLmZsb29yLGY9dC5tb2R1bGVDb3VudCxjPXUoYS9mKSxsPXUoLjUqKGEtYypmKSksZz17cG9zaXRpb246InJlbGF0aXZlIixsZWZ0OjAsdG9wOjAscGFkZGluZzowLG1hcmdpbjowLHdpZHRoOmEsaGVpZ2h0OmF9LHM9e3Bvc2l0aW9uOiJhYnNvbHV0ZSIscGFkZGluZzowLG1hcmdpbjowLHdpZHRoOmMsaGVpZ2h0OmMsImJhY2tncm91bmQtY29sb3IiOnIuZmlsbH0sdj13KCI8ZGl2Lz4iKS5kYXRhKCJxcmNvZGUiLHQpLmNzcyhnKTtmb3IoaSYmdi5jc3MoImJhY2tncm91bmQtY29sb3IiLGkpLG49MDtmPm47bis9MSlmb3Iobz0wO2Y+bztvKz0xKXQuaXNEYXJrKG4sbykmJncoIjxkaXYvPiIpLmNzcyhzKS5jc3Moe2xlZnQ6bCtvKmMsdG9wOmwrbipjfSkuYXBwZW5kVG8odik7cmV0dXJuIHZ9ZnVuY3Rpb24gZChyKXtyZXR1cm4gbSYmImNhbnZhcyI9PT1yLnJlbmRlcj9zKHIpOm0mJiJpbWFnZSI9PT1yLnJlbmRlcj92KHIpOmgocil9dmFyIHc9d2luZG93LmpRdWVyeSxtPWZ1bmN0aW9uKCl7dmFyIHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIik7cmV0dXJuISghci5nZXRDb250ZXh0fHwhci5nZXRDb250ZXh0KCIyZCIpKX0oKSx5PXtyZW5kZXI6ImNhbnZhcyIsbWluVmVyc2lvbjoxLG1heFZlcnNpb246NDAsZWNMZXZlbDoiTCIsbGVmdDowLHRvcDowLHNpemU6MjAwLGZpbGw6IiMwMDAiLGJhY2tncm91bmQ6bnVsbCx0ZXh0OiJubyB0ZXh0IixyYWRpdXM6MCxxdWlldDowLG1vZGU6MCxtU2l6ZTouMSxtUG9zWDouNSxtUG9zWTouNSxsYWJlbDoibm8gbGFiZWwiLGZvbnRuYW1lOiJzYW5zIixmb250Y29sb3I6IiMwMDAiLGltYWdlOm51bGx9O3cuZm4ucXJjb2RlPWZ1bmN0aW9uKHIpe3ZhciB0PXcuZXh0ZW5kKHt9LHkscik7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihyLGUpeyJjYW52YXMiPT09ZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP2coZSx0KTp3KGUpLmFwcGVuZChkKHQpKX0pfX0oZnVuY3Rpb24oKXt2YXIgcj1mdW5jdGlvbigpe2Z1bmN0aW9uIHIodCxlKXtpZigidW5kZWZpbmVkIj09dHlwZW9mIHQubGVuZ3RoKXRocm93IG5ldyBFcnJvcih0Lmxlbmd0aCsiLyIrZSk7dmFyIG49ZnVuY3Rpb24oKXtmb3IodmFyIHI9MDtyPHQubGVuZ3RoJiYwPT10W3JdOylyKz0xO2Zvcih2YXIgbj1uZXcgQXJyYXkodC5sZW5ndGgtcitlKSxvPTA7bzx0Lmxlbmd0aC1yO28rPTEpbltvXT10W28rcl07cmV0dXJuIG59KCksbz17fTtyZXR1cm4gby5nZXRBdD1mdW5jdGlvbihyKXtyZXR1cm4gbltyXX0sby5nZXRMZW5ndGg9ZnVuY3Rpb24oKXtyZXR1cm4gbi5sZW5ndGh9LG8ubXVsdGlwbHk9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPW5ldyBBcnJheShvLmdldExlbmd0aCgpK3QuZ2V0TGVuZ3RoKCktMSksbj0wO248by5nZXRMZW5ndGgoKTtuKz0xKWZvcih2YXIgYT0wO2E8dC5nZXRMZW5ndGgoKTthKz0xKWVbbithXV49aS5nZXhwKGkuZ2xvZyhvLmdldEF0KG4pKStpLmdsb2codC5nZXRBdChhKSkpO3JldHVybiByKGUsMCl9LG8ubW9kPWZ1bmN0aW9uKHQpe2lmKG8uZ2V0TGVuZ3RoKCktdC5nZXRMZW5ndGgoKTwwKXJldHVybiBvO2Zvcih2YXIgZT1pLmdsb2coby5nZXRBdCgwKSktaS5nbG9nKHQuZ2V0QXQoMCkpLG49bmV3IEFycmF5KG8uZ2V0TGVuZ3RoKCkpLGE9MDthPG8uZ2V0TGVuZ3RoKCk7YSs9MSluW2FdPW8uZ2V0QXQoYSk7Zm9yKHZhciBhPTA7YTx0LmdldExlbmd0aCgpO2ErPTEpblthXV49aS5nZXhwKGkuZ2xvZyh0LmdldEF0KGEpKStlKTtyZXR1cm4gcihuLDApLm1vZCh0KX0sb312YXIgdD1mdW5jdGlvbih0LGUpe3ZhciBvPTIzNixpPTE3LGw9dCxnPW5bZV0scz1udWxsLHY9MCxkPW51bGwsdz1uZXcgQXJyYXksbT17fSx5PWZ1bmN0aW9uKHIsdCl7dj00KmwrMTcscz1mdW5jdGlvbihyKXtmb3IodmFyIHQ9bmV3IEFycmF5KHIpLGU9MDtyPmU7ZSs9MSl7dFtlXT1uZXcgQXJyYXkocik7Zm9yKHZhciBuPTA7cj5uO24rPTEpdFtlXVtuXT1udWxsfXJldHVybiB0fSh2KSxUKDAsMCksVCh2LTcsMCksVCgwLHYtNyksQSgpLEIoKSxrKHIsdCksbD49NyYmRShyKSxudWxsPT1kJiYoZD1EKGwsZyx3KSksTShkLHQpfSxUPWZ1bmN0aW9uKHIsdCl7Zm9yKHZhciBlPS0xOzc+PWU7ZSs9MSlpZighKC0xPj1yK2V8fHIrZT49dikpZm9yKHZhciBuPS0xOzc+PW47bis9MSktMT49dCtufHx0K24+PXZ8fChlPj0wJiY2Pj1lJiYoMD09bnx8Nj09bil8fG4+PTAmJjY+PW4mJigwPT1lfHw2PT1lKXx8ZT49MiYmND49ZSYmbj49MiYmND49bj9zW3IrZV1bdCtuXT0hMDpzW3IrZV1bdCtuXT0hMSl9LHA9ZnVuY3Rpb24oKXtmb3IodmFyIHI9MCx0PTAsZT0wOzg+ZTtlKz0xKXt5KCEwLGUpO3ZhciBuPWEuZ2V0TG9zdFBvaW50KG0pOygwPT1lfHxyPm4pJiYocj1uLHQ9ZSl9cmV0dXJuIHR9LEI9ZnVuY3Rpb24oKXtmb3IodmFyIHI9ODt2LTg+cjtyKz0xKW51bGw9PXNbcl1bNl0mJihzW3JdWzZdPXIlMj09MCk7Zm9yKHZhciB0PTg7di04PnQ7dCs9MSludWxsPT1zWzZdW3RdJiYoc1s2XVt0XT10JTI9PTApfSxBPWZ1bmN0aW9uKCl7Zm9yKHZhciByPWEuZ2V0UGF0dGVyblBvc2l0aW9uKGwpLHQ9MDt0PHIubGVuZ3RoO3QrPTEpZm9yKHZhciBlPTA7ZTxyLmxlbmd0aDtlKz0xKXt2YXIgbj1yW3RdLG89cltlXTtpZihudWxsPT1zW25dW29dKWZvcih2YXIgaT0tMjsyPj1pO2krPTEpZm9yKHZhciB1PS0yOzI+PXU7dSs9MSktMj09aXx8Mj09aXx8LTI9PXV8fDI9PXV8fDA9PWkmJjA9PXU/c1tuK2ldW28rdV09ITA6c1tuK2ldW28rdV09ITF9fSxFPWZ1bmN0aW9uKHIpe2Zvcih2YXIgdD1hLmdldEJDSFR5cGVOdW1iZXIobCksZT0wOzE4PmU7ZSs9MSl7dmFyIG49IXImJjE9PSh0Pj5lJjEpO3NbTWF0aC5mbG9vcihlLzMpXVtlJTMrdi04LTNdPW59Zm9yKHZhciBlPTA7MTg+ZTtlKz0xKXt2YXIgbj0hciYmMT09KHQ+PmUmMSk7c1tlJTMrdi04LTNdW01hdGguZmxvb3IoZS8zKV09bn19LGs9ZnVuY3Rpb24ocix0KXtmb3IodmFyIGU9Zzw8M3x0LG49YS5nZXRCQ0hUeXBlSW5mbyhlKSxvPTA7MTU+bztvKz0xKXt2YXIgaT0hciYmMT09KG4+Pm8mMSk7Nj5vP3Nbb11bOF09aTo4Pm8/c1tvKzFdWzhdPWk6c1t2LTE1K29dWzhdPWl9Zm9yKHZhciBvPTA7MTU+bztvKz0xKXt2YXIgaT0hciYmMT09KG4+Pm8mMSk7OD5vP3NbOF1bdi1vLTFdPWk6OT5vP3NbOF1bMTUtby0xKzFdPWk6c1s4XVsxNS1vLTFdPWl9c1t2LThdWzhdPSFyfSxNPWZ1bmN0aW9uKHIsdCl7Zm9yKHZhciBlPS0xLG49di0xLG89NyxpPTAsdT1hLmdldE1hc2tGdW5jdGlvbih0KSxmPXYtMTtmPjA7Zi09Milmb3IoNj09ZiYmKGYtPTEpOzspe2Zvcih2YXIgYz0wOzI+YztjKz0xKWlmKG51bGw9PXNbbl1bZi1jXSl7dmFyIGw9ITE7aTxyLmxlbmd0aCYmKGw9MT09KHJbaV0+Pj5vJjEpKTt2YXIgZz11KG4sZi1jKTtnJiYobD0hbCksc1tuXVtmLWNdPWwsby09MSwtMT09byYmKGkrPTEsbz03KX1pZihuKz1lLDA+bnx8bj49dil7bi09ZSxlPS1lO2JyZWFrfX19LEM9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49MCxvPTAsaT0wLHU9bmV3IEFycmF5KGUubGVuZ3RoKSxmPW5ldyBBcnJheShlLmxlbmd0aCksYz0wO2M8ZS5sZW5ndGg7Yys9MSl7dmFyIGw9ZVtjXS5kYXRhQ291bnQsZz1lW2NdLnRvdGFsQ291bnQtbDtvPU1hdGgubWF4KG8sbCksaT1NYXRoLm1heChpLGcpLHVbY109bmV3IEFycmF5KGwpO2Zvcih2YXIgcz0wO3M8dVtjXS5sZW5ndGg7cys9MSl1W2NdW3NdPTI1NSZ0LmdldEJ1ZmZlcigpW3Mrbl07bis9bDt2YXIgdj1hLmdldEVycm9yQ29ycmVjdFBvbHlub21pYWwoZyksaD1yKHVbY10sdi5nZXRMZW5ndGgoKS0xKSxkPWgubW9kKHYpO2ZbY109bmV3IEFycmF5KHYuZ2V0TGVuZ3RoKCktMSk7Zm9yKHZhciBzPTA7czxmW2NdLmxlbmd0aDtzKz0xKXt2YXIgdz1zK2QuZ2V0TGVuZ3RoKCktZltjXS5sZW5ndGg7ZltjXVtzXT13Pj0wP2QuZ2V0QXQodyk6MH19Zm9yKHZhciBtPTAscz0wO3M8ZS5sZW5ndGg7cys9MSltKz1lW3NdLnRvdGFsQ291bnQ7Zm9yKHZhciB5PW5ldyBBcnJheShtKSxUPTAscz0wO28+cztzKz0xKWZvcih2YXIgYz0wO2M8ZS5sZW5ndGg7Yys9MSlzPHVbY10ubGVuZ3RoJiYoeVtUXT11W2NdW3NdLFQrPTEpO2Zvcih2YXIgcz0wO2k+cztzKz0xKWZvcih2YXIgYz0wO2M8ZS5sZW5ndGg7Yys9MSlzPGZbY10ubGVuZ3RoJiYoeVtUXT1mW2NdW3NdLFQrPTEpO3JldHVybiB5fSxEPWZ1bmN0aW9uKHIsdCxlKXtmb3IodmFyIG49dS5nZXRSU0Jsb2NrcyhyLHQpLGM9ZigpLGw9MDtsPGUubGVuZ3RoO2wrPTEpe3ZhciBnPWVbbF07Yy5wdXQoZy5nZXRNb2RlKCksNCksYy5wdXQoZy5nZXRMZW5ndGgoKSxhLmdldExlbmd0aEluQml0cyhnLmdldE1vZGUoKSxyKSksZy53cml0ZShjKX1mb3IodmFyIHM9MCxsPTA7bDxuLmxlbmd0aDtsKz0xKXMrPW5bbF0uZGF0YUNvdW50O2lmKGMuZ2V0TGVuZ3RoSW5CaXRzKCk+OCpzKXRocm93IG5ldyBFcnJvcigiY29kZSBsZW5ndGggb3ZlcmZsb3cuICgiK2MuZ2V0TGVuZ3RoSW5CaXRzKCkrIj4iKzgqcysiKSIpO2ZvcihjLmdldExlbmd0aEluQml0cygpKzQ8PTgqcyYmYy5wdXQoMCw0KTtjLmdldExlbmd0aEluQml0cygpJTghPTA7KWMucHV0Qml0KCExKTtmb3IoOzspe2lmKGMuZ2V0TGVuZ3RoSW5CaXRzKCk+PTgqcylicmVhaztpZihjLnB1dChvLDgpLGMuZ2V0TGVuZ3RoSW5CaXRzKCk+PTgqcylicmVhaztjLnB1dChpLDgpfXJldHVybiBDKGMsbil9O3JldHVybiBtLmFkZERhdGE9ZnVuY3Rpb24ocil7dmFyIHQ9YyhyKTt3LnB1c2godCksZD1udWxsfSxtLmlzRGFyaz1mdW5jdGlvbihyLHQpe2lmKDA+cnx8cj49dnx8MD50fHx0Pj12KXRocm93IG5ldyBFcnJvcihyKyIsIit0KTtyZXR1cm4gc1tyXVt0XX0sbS5nZXRNb2R1bGVDb3VudD1mdW5jdGlvbigpe3JldHVybiB2fSxtLm1ha2U9ZnVuY3Rpb24oKXt5KCExLHAoKSl9LG0uY3JlYXRlVGFibGVUYWc9ZnVuY3Rpb24ocix0KXtyPXJ8fDIsdD0idW5kZWZpbmVkIj09dHlwZW9mIHQ/NCpyOnQ7dmFyIGU9IiI7ZSs9Jzx0YWJsZSBzdHlsZT0iJyxlKz0iIGJvcmRlci13aWR0aDogMHB4OyBib3JkZXItc3R5bGU6IG5vbmU7IixlKz0iIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IixlKz0iIHBhZGRpbmc6IDBweDsgbWFyZ2luOiAiK3QrInB4OyIsZSs9JyI+JyxlKz0iPHRib2R5PiI7Zm9yKHZhciBuPTA7bjxtLmdldE1vZHVsZUNvdW50KCk7bis9MSl7ZSs9Ijx0cj4iO2Zvcih2YXIgbz0wO288bS5nZXRNb2R1bGVDb3VudCgpO28rPTEpZSs9Jzx0ZCBzdHlsZT0iJyxlKz0iIGJvcmRlci13aWR0aDogMHB4OyBib3JkZXItc3R5bGU6IG5vbmU7IixlKz0iIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IixlKz0iIHBhZGRpbmc6IDBweDsgbWFyZ2luOiAwcHg7IixlKz0iIHdpZHRoOiAiK3IrInB4OyIsZSs9IiBoZWlnaHQ6ICIrcisicHg7IixlKz0iIGJhY2tncm91bmQtY29sb3I6ICIsZSs9bS5pc0RhcmsobixvKT8iIzAwMDAwMCI6IiNmZmZmZmYiLGUrPSI7IixlKz0nIi8+JztlKz0iPC90cj4ifXJldHVybiBlKz0iPC90Ym9keT4iLGUrPSI8L3RhYmxlPiJ9LG0uY3JlYXRlSW1nVGFnPWZ1bmN0aW9uKHIsdCl7cj1yfHwyLHQ9InVuZGVmaW5lZCI9PXR5cGVvZiB0PzQqcjp0O3ZhciBlPW0uZ2V0TW9kdWxlQ291bnQoKSpyKzIqdCxuPXQsbz1lLXQ7cmV0dXJuIGgoZSxlLGZ1bmN0aW9uKHQsZSl7aWYodD49biYmbz50JiZlPj1uJiZvPmUpe3ZhciBhPU1hdGguZmxvb3IoKHQtbikvciksaT1NYXRoLmZsb29yKChlLW4pL3IpO3JldHVybiBtLmlzRGFyayhpLGEpPzA6MX1yZXR1cm4gMX0pfSxtfTt0LnN0cmluZ1RvQnl0ZXM9ZnVuY3Rpb24ocil7Zm9yKHZhciB0PW5ldyBBcnJheSxlPTA7ZTxyLmxlbmd0aDtlKz0xKXt2YXIgbj1yLmNoYXJDb2RlQXQoZSk7dC5wdXNoKDI1NSZuKX1yZXR1cm4gdH0sdC5jcmVhdGVTdHJpbmdUb0J5dGVzPWZ1bmN0aW9uKHIsdCl7dmFyIGU9ZnVuY3Rpb24oKXtmb3IodmFyIGU9cyhyKSxuPWZ1bmN0aW9uKCl7dmFyIHI9ZS5yZWFkKCk7aWYoLTE9PXIpdGhyb3cgbmV3IEVycm9yO3JldHVybiByfSxvPTAsYT17fTs7KXt2YXIgaT1lLnJlYWQoKTtpZigtMT09aSlicmVhazt2YXIgdT1uKCksZj1uKCksYz1uKCksbD1TdHJpbmcuZnJvbUNoYXJDb2RlKGk8PDh8dSksZz1mPDw4fGM7YVtsXT1nLG8rPTF9aWYobyE9dCl0aHJvdyBuZXcgRXJyb3IobysiICE9ICIrdCk7cmV0dXJuIGF9KCksbj0iPyIuY2hhckNvZGVBdCgwKTtyZXR1cm4gZnVuY3Rpb24ocil7Zm9yKHZhciB0PW5ldyBBcnJheSxvPTA7bzxyLmxlbmd0aDtvKz0xKXt2YXIgYT1yLmNoYXJDb2RlQXQobyk7aWYoMTI4PmEpdC5wdXNoKGEpO2Vsc2V7dmFyIGk9ZVtyLmNoYXJBdChvKV07Im51bWJlciI9PXR5cGVvZiBpPygyNTUmaSk9PWk/dC5wdXNoKGkpOih0LnB1c2goaT4+PjgpLHQucHVzaCgyNTUmaSkpOnQucHVzaChuKX19cmV0dXJuIHR9fTt2YXIgZT17TU9ERV9OVU1CRVI6MSxNT0RFX0FMUEhBX05VTToyLE1PREVfOEJJVF9CWVRFOjQsTU9ERV9LQU5KSTo4fSxuPXtMOjEsTTowLFE6MyxIOjJ9LG89e1BBVFRFUk4wMDA6MCxQQVRURVJOMDAxOjEsUEFUVEVSTjAxMDoyLFBBVFRFUk4wMTE6MyxQQVRURVJOMTAwOjQsUEFUVEVSTjEwMTo1LFBBVFRFUk4xMTA6NixQQVRURVJOMTExOjd9LGE9ZnVuY3Rpb24oKXt2YXIgdD1bW10sWzYsMThdLFs2LDIyXSxbNiwyNl0sWzYsMzBdLFs2LDM0XSxbNiwyMiwzOF0sWzYsMjQsNDJdLFs2LDI2LDQ2XSxbNiwyOCw1MF0sWzYsMzAsNTRdLFs2LDMyLDU4XSxbNiwzNCw2Ml0sWzYsMjYsNDYsNjZdLFs2LDI2LDQ4LDcwXSxbNiwyNiw1MCw3NF0sWzYsMzAsNTQsNzhdLFs2LDMwLDU2LDgyXSxbNiwzMCw1OCw4Nl0sWzYsMzQsNjIsOTBdLFs2LDI4LDUwLDcyLDk0XSxbNiwyNiw1MCw3NCw5OF0sWzYsMzAsNTQsNzgsMTAyXSxbNiwyOCw1NCw4MCwxMDZdLFs2LDMyLDU4LDg0LDExMF0sWzYsMzAsNTgsODYsMTE0XSxbNiwzNCw2Miw5MCwxMThdLFs2LDI2LDUwLDc0LDk4LDEyMl0sWzYsMzAsNTQsNzgsMTAyLDEyNl0sWzYsMjYsNTIsNzgsMTA0LDEzMF0sWzYsMzAsNTYsODIsMTA4LDEzNF0sWzYsMzQsNjAsODYsMTEyLDEzOF0sWzYsMzAsNTgsODYsMTE0LDE0Ml0sWzYsMzQsNjIsOTAsMTE4LDE0Nl0sWzYsMzAsNTQsNzgsMTAyLDEyNiwxNTBdLFs2LDI0LDUwLDc2LDEwMiwxMjgsMTU0XSxbNiwyOCw1NCw4MCwxMDYsMTMyLDE1OF0sWzYsMzIsNTgsODQsMTEwLDEzNiwxNjJdLFs2LDI2LDU0LDgyLDExMCwxMzgsMTY2XSxbNiwzMCw1OCw4NiwxMTQsMTQyLDE3MF1dLG49MTMzNSxhPTc5NzMsdT0yMTUyMixmPXt9LGM9ZnVuY3Rpb24ocil7Zm9yKHZhciB0PTA7MCE9cjspdCs9MSxyPj4+PTE7cmV0dXJuIHR9O3JldHVybiBmLmdldEJDSFR5cGVJbmZvPWZ1bmN0aW9uKHIpe2Zvcih2YXIgdD1yPDwxMDtjKHQpLWMobik+PTA7KXRePW48PGModCktYyhuKTtyZXR1cm4ocjw8MTB8dCledX0sZi5nZXRCQ0hUeXBlTnVtYmVyPWZ1bmN0aW9uKHIpe2Zvcih2YXIgdD1yPDwxMjtjKHQpLWMoYSk+PTA7KXRePWE8PGModCktYyhhKTtyZXR1cm4gcjw8MTJ8dH0sZi5nZXRQYXR0ZXJuUG9zaXRpb249ZnVuY3Rpb24ocil7cmV0dXJuIHRbci0xXX0sZi5nZXRNYXNrRnVuY3Rpb249ZnVuY3Rpb24ocil7c3dpdGNoKHIpe2Nhc2Ugby5QQVRURVJOMDAwOnJldHVybiBmdW5jdGlvbihyLHQpe3JldHVybihyK3QpJTI9PTB9O2Nhc2Ugby5QQVRURVJOMDAxOnJldHVybiBmdW5jdGlvbihyLHQpe3JldHVybiByJTI9PTB9O2Nhc2Ugby5QQVRURVJOMDEwOnJldHVybiBmdW5jdGlvbihyLHQpe3JldHVybiB0JTM9PTB9O2Nhc2Ugby5QQVRURVJOMDExOnJldHVybiBmdW5jdGlvbihyLHQpe3JldHVybihyK3QpJTM9PTB9O2Nhc2Ugby5QQVRURVJOMTAwOnJldHVybiBmdW5jdGlvbihyLHQpe3JldHVybihNYXRoLmZsb29yKHIvMikrTWF0aC5mbG9vcih0LzMpKSUyPT0wfTtjYXNlIG8uUEFUVEVSTjEwMTpyZXR1cm4gZnVuY3Rpb24ocix0KXtyZXR1cm4gcip0JTIrcip0JTM9PTB9O2Nhc2Ugby5QQVRURVJOMTEwOnJldHVybiBmdW5jdGlvbihyLHQpe3JldHVybihyKnQlMityKnQlMyklMj09MH07Y2FzZSBvLlBBVFRFUk4xMTE6cmV0dXJuIGZ1bmN0aW9uKHIsdCl7cmV0dXJuKHIqdCUzKyhyK3QpJTIpJTI9PTB9O2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKCJiYWQgbWFza1BhdHRlcm46IityKX19LGYuZ2V0RXJyb3JDb3JyZWN0UG9seW5vbWlhbD1mdW5jdGlvbih0KXtmb3IodmFyIGU9cihbMV0sMCksbj0wO3Q+bjtuKz0xKWU9ZS5tdWx0aXBseShyKFsxLGkuZ2V4cChuKV0sMCkpO3JldHVybiBlfSxmLmdldExlbmd0aEluQml0cz1mdW5jdGlvbihyLHQpe2lmKHQ+PTEmJjEwPnQpc3dpdGNoKHIpe2Nhc2UgZS5NT0RFX05VTUJFUjpyZXR1cm4gMTA7Y2FzZSBlLk1PREVfQUxQSEFfTlVNOnJldHVybiA5O2Nhc2UgZS5NT0RFXzhCSVRfQllURTpyZXR1cm4gODtjYXNlIGUuTU9ERV9LQU5KSTpyZXR1cm4gODtkZWZhdWx0OnRocm93IG5ldyBFcnJvcigibW9kZToiK3IpfWVsc2UgaWYoMjc+dClzd2l0Y2gocil7Y2FzZSBlLk1PREVfTlVNQkVSOnJldHVybiAxMjtjYXNlIGUuTU9ERV9BTFBIQV9OVU06cmV0dXJuIDExO2Nhc2UgZS5NT0RFXzhCSVRfQllURTpyZXR1cm4gMTY7Y2FzZSBlLk1PREVfS0FOSkk6cmV0dXJuIDEwO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKCJtb2RlOiIrcil9ZWxzZXtpZighKDQxPnQpKXRocm93IG5ldyBFcnJvcigidHlwZToiK3QpO3N3aXRjaChyKXtjYXNlIGUuTU9ERV9OVU1CRVI6cmV0dXJuIDE0O2Nhc2UgZS5NT0RFX0FMUEhBX05VTTpyZXR1cm4gMTM7Y2FzZSBlLk1PREVfOEJJVF9CWVRFOnJldHVybiAxNjtjYXNlIGUuTU9ERV9LQU5KSTpyZXR1cm4gMTI7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoIm1vZGU6IityKX19fSxmLmdldExvc3RQb2ludD1mdW5jdGlvbihyKXtmb3IodmFyIHQ9ci5nZXRNb2R1bGVDb3VudCgpLGU9MCxuPTA7dD5uO24rPTEpZm9yKHZhciBvPTA7dD5vO28rPTEpe2Zvcih2YXIgYT0wLGk9ci5pc0RhcmsobixvKSx1PS0xOzE+PXU7dSs9MSlpZighKDA+bit1fHxuK3U+PXQpKWZvcih2YXIgZj0tMTsxPj1mO2YrPTEpMD5vK2Z8fG8rZj49dHx8KDAhPXV8fDAhPWYpJiZpPT1yLmlzRGFyayhuK3UsbytmKSYmKGErPTEpO2E+NSYmKGUrPTMrYS01KX1mb3IodmFyIG49MDt0LTE+bjtuKz0xKWZvcih2YXIgbz0wO3QtMT5vO28rPTEpe3ZhciBjPTA7ci5pc0RhcmsobixvKSYmKGMrPTEpLHIuaXNEYXJrKG4rMSxvKSYmKGMrPTEpLHIuaXNEYXJrKG4sbysxKSYmKGMrPTEpLHIuaXNEYXJrKG4rMSxvKzEpJiYoYys9MSksKDA9PWN8fDQ9PWMpJiYoZSs9Myl9Zm9yKHZhciBuPTA7dD5uO24rPTEpZm9yKHZhciBvPTA7dC02Pm87bys9MSlyLmlzRGFyayhuLG8pJiYhci5pc0RhcmsobixvKzEpJiZyLmlzRGFyayhuLG8rMikmJnIuaXNEYXJrKG4sbyszKSYmci5pc0RhcmsobixvKzQpJiYhci5pc0RhcmsobixvKzUpJiZyLmlzRGFyayhuLG8rNikmJihlKz00MCk7Zm9yKHZhciBvPTA7dD5vO28rPTEpZm9yKHZhciBuPTA7dC02Pm47bis9MSlyLmlzRGFyayhuLG8pJiYhci5pc0RhcmsobisxLG8pJiZyLmlzRGFyayhuKzIsbykmJnIuaXNEYXJrKG4rMyxvKSYmci5pc0Rhcmsobis0LG8pJiYhci5pc0Rhcmsobis1LG8pJiZyLmlzRGFyayhuKzYsbykmJihlKz00MCk7Zm9yKHZhciBsPTAsbz0wO3Q+bztvKz0xKWZvcih2YXIgbj0wO3Q+bjtuKz0xKXIuaXNEYXJrKG4sbykmJihsKz0xKTt2YXIgZz1NYXRoLmFicygxMDAqbC90L3QtNTApLzU7cmV0dXJuIGUrPTEwKmd9LGZ9KCksaT1mdW5jdGlvbigpe2Zvcih2YXIgcj1uZXcgQXJyYXkoMjU2KSx0PW5ldyBBcnJheSgyNTYpLGU9MDs4PmU7ZSs9MSlyW2VdPTE8PGU7Zm9yKHZhciBlPTg7MjU2PmU7ZSs9MSlyW2VdPXJbZS00XV5yW2UtNV1ecltlLTZdXnJbZS04XTtmb3IodmFyIGU9MDsyNTU+ZTtlKz0xKXRbcltlXV09ZTt2YXIgbj17fTtyZXR1cm4gbi5nbG9nPWZ1bmN0aW9uKHIpe2lmKDE+cil0aHJvdyBuZXcgRXJyb3IoImdsb2coIityKyIpIik7cmV0dXJuIHRbcl19LG4uZ2V4cD1mdW5jdGlvbih0KXtmb3IoOzA+dDspdCs9MjU1O2Zvcig7dD49MjU2Oyl0LT0yNTU7cmV0dXJuIHJbdF19LG59KCksdT1mdW5jdGlvbigpe3ZhciByPVtbMSwyNiwxOV0sWzEsMjYsMTZdLFsxLDI2LDEzXSxbMSwyNiw5XSxbMSw0NCwzNF0sWzEsNDQsMjhdLFsxLDQ0LDIyXSxbMSw0NCwxNl0sWzEsNzAsNTVdLFsxLDcwLDQ0XSxbMiwzNSwxN10sWzIsMzUsMTNdLFsxLDEwMCw4MF0sWzIsNTAsMzJdLFsyLDUwLDI0XSxbNCwyNSw5XSxbMSwxMzQsMTA4XSxbMiw2Nyw0M10sWzIsMzMsMTUsMiwzNCwxNl0sWzIsMzMsMTEsMiwzNCwxMl0sWzIsODYsNjhdLFs0LDQzLDI3XSxbNCw0MywxOV0sWzQsNDMsMTVdLFsyLDk4LDc4XSxbNCw0OSwzMV0sWzIsMzIsMTQsNCwzMywxNV0sWzQsMzksMTMsMSw0MCwxNF0sWzIsMTIxLDk3XSxbMiw2MCwzOCwyLDYxLDM5XSxbNCw0MCwxOCwyLDQxLDE5XSxbNCw0MCwxNCwyLDQxLDE1XSxbMiwxNDYsMTE2XSxbMyw1OCwzNiwyLDU5LDM3XSxbNCwzNiwxNiw0LDM3LDE3XSxbNCwzNiwxMiw0LDM3LDEzXSxbMiw4Niw2OCwyLDg3LDY5XSxbNCw2OSw0MywxLDcwLDQ0XSxbNiw0MywxOSwyLDQ0LDIwXSxbNiw0MywxNSwyLDQ0LDE2XSxbNCwxMDEsODFdLFsxLDgwLDUwLDQsODEsNTFdLFs0LDUwLDIyLDQsNTEsMjNdLFszLDM2LDEyLDgsMzcsMTNdLFsyLDExNiw5MiwyLDExNyw5M10sWzYsNTgsMzYsMiw1OSwzN10sWzQsNDYsMjAsNiw0NywyMV0sWzcsNDIsMTQsNCw0MywxNV0sWzQsMTMzLDEwN10sWzgsNTksMzcsMSw2MCwzOF0sWzgsNDQsMjAsNCw0NSwyMV0sWzEyLDMzLDExLDQsMzQsMTJdLFszLDE0NSwxMTUsMSwxNDYsMTE2XSxbNCw2NCw0MCw1LDY1LDQxXSxbMTEsMzYsMTYsNSwzNywxN10sWzExLDM2LDEyLDUsMzcsMTNdLFs1LDEwOSw4NywxLDExMCw4OF0sWzUsNjUsNDEsNSw2Niw0Ml0sWzUsNTQsMjQsNyw1NSwyNV0sWzExLDM2LDEyLDcsMzcsMTNdLFs1LDEyMiw5OCwxLDEyMyw5OV0sWzcsNzMsNDUsMyw3NCw0Nl0sWzE1LDQzLDE5LDIsNDQsMjBdLFszLDQ1LDE1LDEzLDQ2LDE2XSxbMSwxMzUsMTA3LDUsMTM2LDEwOF0sWzEwLDc0LDQ2LDEsNzUsNDddLFsxLDUwLDIyLDE1LDUxLDIzXSxbMiw0MiwxNCwxNyw0MywxNV0sWzUsMTUwLDEyMCwxLDE1MSwxMjFdLFs5LDY5LDQzLDQsNzAsNDRdLFsxNyw1MCwyMiwxLDUxLDIzXSxbMiw0MiwxNCwxOSw0MywxNV0sWzMsMTQxLDExMyw0LDE0MiwxMTRdLFszLDcwLDQ0LDExLDcxLDQ1XSxbMTcsNDcsMjEsNCw0OCwyMl0sWzksMzksMTMsMTYsNDAsMTRdLFszLDEzNSwxMDcsNSwxMzYsMTA4XSxbMyw2Nyw0MSwxMyw2OCw0Ml0sWzE1LDU0LDI0LDUsNTUsMjVdLFsxNSw0MywxNSwxMCw0NCwxNl0sWzQsMTQ0LDExNiw0LDE0NSwxMTddLFsxNyw2OCw0Ml0sWzE3LDUwLDIyLDYsNTEsMjNdLFsxOSw0NiwxNiw2LDQ3LDE3XSxbMiwxMzksMTExLDcsMTQwLDExMl0sWzE3LDc0LDQ2XSxbNyw1NCwyNCwxNiw1NSwyNV0sWzM0LDM3LDEzXSxbNCwxNTEsMTIxLDUsMTUyLDEyMl0sWzQsNzUsNDcsMTQsNzYsNDhdLFsxMSw1NCwyNCwxNCw1NSwyNV0sWzE2LDQ1LDE1LDE0LDQ2LDE2XSxbNiwxNDcsMTE3LDQsMTQ4LDExOF0sWzYsNzMsNDUsMTQsNzQsNDZdLFsxMSw1NCwyNCwxNiw1NSwyNV0sWzMwLDQ2LDE2LDIsNDcsMTddLFs4LDEzMiwxMDYsNCwxMzMsMTA3XSxbOCw3NSw0NywxMyw3Niw0OF0sWzcsNTQsMjQsMjIsNTUsMjVdLFsyMiw0NSwxNSwxMyw0NiwxNl0sWzEwLDE0MiwxMTQsMiwxNDMsMTE1XSxbMTksNzQsNDYsNCw3NSw0N10sWzI4LDUwLDIyLDYsNTEsMjNdLFszMyw0NiwxNiw0LDQ3LDE3XSxbOCwxNTIsMTIyLDQsMTUzLDEyM10sWzIyLDczLDQ1LDMsNzQsNDZdLFs4LDUzLDIzLDI2LDU0LDI0XSxbMTIsNDUsMTUsMjgsNDYsMTZdLFszLDE0NywxMTcsMTAsMTQ4LDExOF0sWzMsNzMsNDUsMjMsNzQsNDZdLFs0LDU0LDI0LDMxLDU1LDI1XSxbMTEsNDUsMTUsMzEsNDYsMTZdLFs3LDE0NiwxMTYsNywxNDcsMTE3XSxbMjEsNzMsNDUsNyw3NCw0Nl0sWzEsNTMsMjMsMzcsNTQsMjRdLFsxOSw0NSwxNSwyNiw0NiwxNl0sWzUsMTQ1LDExNSwxMCwxNDYsMTE2XSxbMTksNzUsNDcsMTAsNzYsNDhdLFsxNSw1NCwyNCwyNSw1NSwyNV0sWzIzLDQ1LDE1LDI1LDQ2LDE2XSxbMTMsMTQ1LDExNSwzLDE0NiwxMTZdLFsyLDc0LDQ2LDI5LDc1LDQ3XSxbNDIsNTQsMjQsMSw1NSwyNV0sWzIzLDQ1LDE1LDI4LDQ2LDE2XSxbMTcsMTQ1LDExNV0sWzEwLDc0LDQ2LDIzLDc1LDQ3XSxbMTAsNTQsMjQsMzUsNTUsMjVdLFsxOSw0NSwxNSwzNSw0NiwxNl0sWzE3LDE0NSwxMTUsMSwxNDYsMTE2XSxbMTQsNzQsNDYsMjEsNzUsNDddLFsyOSw1NCwyNCwxOSw1NSwyNV0sWzExLDQ1LDE1LDQ2LDQ2LDE2XSxbMTMsMTQ1LDExNSw2LDE0NiwxMTZdLFsxNCw3NCw0NiwyMyw3NSw0N10sWzQ0LDU0LDI0LDcsNTUsMjVdLFs1OSw0NiwxNiwxLDQ3LDE3XSxbMTIsMTUxLDEyMSw3LDE1MiwxMjJdLFsxMiw3NSw0NywyNiw3Niw0OF0sWzM5LDU0LDI0LDE0LDU1LDI1XSxbMjIsNDUsMTUsNDEsNDYsMTZdLFs2LDE1MSwxMjEsMTQsMTUyLDEyMl0sWzYsNzUsNDcsMzQsNzYsNDhdLFs0Niw1NCwyNCwxMCw1NSwyNV0sWzIsNDUsMTUsNjQsNDYsMTZdLFsxNywxNTIsMTIyLDQsMTUzLDEyM10sWzI5LDc0LDQ2LDE0LDc1LDQ3XSxbNDksNTQsMjQsMTAsNTUsMjVdLFsyNCw0NSwxNSw0Niw0NiwxNl0sWzQsMTUyLDEyMiwxOCwxNTMsMTIzXSxbMTMsNzQsNDYsMzIsNzUsNDddLFs0OCw1NCwyNCwxNCw1NSwyNV0sWzQyLDQ1LDE1LDMyLDQ2LDE2XSxbMjAsMTQ3LDExNyw0LDE0OCwxMThdLFs0MCw3NSw0Nyw3LDc2LDQ4XSxbNDMsNTQsMjQsMjIsNTUsMjVdLFsxMCw0NSwxNSw2Nyw0NiwxNl0sWzE5LDE0OCwxMTgsNiwxNDksMTE5XSxbMTgsNzUsNDcsMzEsNzYsNDhdLFszNCw1NCwyNCwzNCw1NSwyNV0sWzIwLDQ1LDE1LDYxLDQ2LDE2XV0sdD1mdW5jdGlvbihyLHQpe3ZhciBlPXt9O3JldHVybiBlLnRvdGFsQ291bnQ9cixlLmRhdGFDb3VudD10LGV9LGU9e30sbz1mdW5jdGlvbih0LGUpe3N3aXRjaChlKXtjYXNlIG4uTDpyZXR1cm4gcls0Kih0LTEpKzBdO2Nhc2Ugbi5NOnJldHVybiByWzQqKHQtMSkrMV07Y2FzZSBuLlE6cmV0dXJuIHJbNCoodC0xKSsyXTtjYXNlIG4uSDpyZXR1cm4gcls0Kih0LTEpKzNdO2RlZmF1bHQ6cmV0dXJufX07cmV0dXJuIGUuZ2V0UlNCbG9ja3M9ZnVuY3Rpb24ocixlKXt2YXIgbj1vKHIsZSk7aWYoInVuZGVmaW5lZCI9PXR5cGVvZiBuKXRocm93IG5ldyBFcnJvcigiYmFkIHJzIGJsb2NrIEAgdHlwZU51bWJlcjoiK3IrIi9lcnJvckNvcnJlY3RMZXZlbDoiK2UpO2Zvcih2YXIgYT1uLmxlbmd0aC8zLGk9bmV3IEFycmF5LHU9MDthPnU7dSs9MSlmb3IodmFyIGY9blszKnUrMF0sYz1uWzMqdSsxXSxsPW5bMyp1KzJdLGc9MDtmPmc7Zys9MSlpLnB1c2godChjLGwpKTtyZXR1cm4gaX0sZX0oKSxmPWZ1bmN0aW9uKCl7dmFyIHI9bmV3IEFycmF5LHQ9MCxlPXt9O3JldHVybiBlLmdldEJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiByfSxlLmdldEF0PWZ1bmN0aW9uKHQpe3ZhciBlPU1hdGguZmxvb3IodC84KTtyZXR1cm4gMT09KHJbZV0+Pj43LXQlOCYxKX0sZS5wdXQ9ZnVuY3Rpb24ocix0KXtmb3IodmFyIG49MDt0Pm47bis9MSllLnB1dEJpdCgxPT0ocj4+PnQtbi0xJjEpKX0sZS5nZXRMZW5ndGhJbkJpdHM9ZnVuY3Rpb24oKXtyZXR1cm4gdH0sZS5wdXRCaXQ9ZnVuY3Rpb24oZSl7dmFyIG49TWF0aC5mbG9vcih0LzgpO3IubGVuZ3RoPD1uJiZyLnB1c2goMCksZSYmKHJbbl18PTEyOD4+PnQlOCksdCs9MX0sZX0sYz1mdW5jdGlvbihyKXt2YXIgbj1lLk1PREVfOEJJVF9CWVRFLG89dC5zdHJpbmdUb0J5dGVzKHIpLGE9e307cmV0dXJuIGEuZ2V0TW9kZT1mdW5jdGlvbigpe3JldHVybiBufSxhLmdldExlbmd0aD1mdW5jdGlvbihyKXtyZXR1cm4gby5sZW5ndGh9LGEud3JpdGU9ZnVuY3Rpb24ocil7Zm9yKHZhciB0PTA7dDxvLmxlbmd0aDt0Kz0xKXIucHV0KG9bdF0sOCl9LGF9LGw9ZnVuY3Rpb24oKXt2YXIgcj1uZXcgQXJyYXksdD17fTtyZXR1cm4gdC53cml0ZUJ5dGU9ZnVuY3Rpb24odCl7ci5wdXNoKDI1NSZ0KX0sdC53cml0ZVNob3J0PWZ1bmN0aW9uKHIpe3Qud3JpdGVCeXRlKHIpLHQud3JpdGVCeXRlKHI+Pj44KX0sdC53cml0ZUJ5dGVzPWZ1bmN0aW9uKHIsZSxuKXtlPWV8fDAsbj1ufHxyLmxlbmd0aDtmb3IodmFyIG89MDtuPm87bys9MSl0LndyaXRlQnl0ZShyW28rZV0pfSx0LndyaXRlU3RyaW5nPWZ1bmN0aW9uKHIpe2Zvcih2YXIgZT0wO2U8ci5sZW5ndGg7ZSs9MSl0LndyaXRlQnl0ZShyLmNoYXJDb2RlQXQoZSkpfSx0LnRvQnl0ZUFycmF5PWZ1bmN0aW9uKCl7cmV0dXJuIHJ9LHQudG9TdHJpbmc9ZnVuY3Rpb24oKXt2YXIgdD0iIjt0Kz0iWyI7Zm9yKHZhciBlPTA7ZTxyLmxlbmd0aDtlKz0xKWU+MCYmKHQrPSIsIiksdCs9cltlXTtyZXR1cm4gdCs9Il0ifSx0fSxnPWZ1bmN0aW9uKCl7dmFyIHI9MCx0PTAsZT0wLG49IiIsbz17fSxhPWZ1bmN0aW9uKHIpe24rPVN0cmluZy5mcm9tQ2hhckNvZGUoaSg2MyZyKSl9LGk9ZnVuY3Rpb24ocil7aWYoMD5yKTtlbHNle2lmKDI2PnIpcmV0dXJuIDY1K3I7aWYoNTI+cilyZXR1cm4gOTcrKHItMjYpO2lmKDYyPnIpcmV0dXJuIDQ4KyhyLTUyKTtpZig2Mj09cilyZXR1cm4gNDM7aWYoNjM9PXIpcmV0dXJuIDQ3fXRocm93IG5ldyBFcnJvcigibjoiK3IpfTtyZXR1cm4gby53cml0ZUJ5dGU9ZnVuY3Rpb24obil7Zm9yKHI9cjw8OHwyNTUmbix0Kz04LGUrPTE7dD49NjspYShyPj4+dC02KSx0LT02fSxvLmZsdXNoPWZ1bmN0aW9uKCl7aWYodD4wJiYoYShyPDw2LXQpLHI9MCx0PTApLGUlMyE9MClmb3IodmFyIG89My1lJTMsaT0wO28+aTtpKz0xKW4rPSI9In0sby50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiBufSxvfSxzPWZ1bmN0aW9uKHIpe3ZhciB0PXIsZT0wLG49MCxvPTAsYT17fTthLnJlYWQ9ZnVuY3Rpb24oKXtmb3IoOzg+bzspe2lmKGU+PXQubGVuZ3RoKXtpZigwPT1vKXJldHVybi0xO3Rocm93IG5ldyBFcnJvcigidW5leHBlY3RlZCBlbmQgb2YgZmlsZS4vIitvKX12YXIgcj10LmNoYXJBdChlKTtpZihlKz0xLCI9Ij09cilyZXR1cm4gbz0wLC0xO3IubWF0Y2goL15ccyQvKXx8KG49bjw8NnxpKHIuY2hhckNvZGVBdCgwKSksbys9Nil9dmFyIGE9bj4+Pm8tOCYyNTU7cmV0dXJuIG8tPTgsYX07dmFyIGk9ZnVuY3Rpb24ocil7aWYocj49NjUmJjkwPj1yKXJldHVybiByLTY1O2lmKHI+PTk3JiYxMjI+PXIpcmV0dXJuIHItOTcrMjY7aWYocj49NDgmJjU3Pj1yKXJldHVybiByLTQ4KzUyO2lmKDQzPT1yKXJldHVybiA2MjtpZig0Nz09cilyZXR1cm4gNjM7dGhyb3cgbmV3IEVycm9yKCJjOiIrcil9O3JldHVybiBhfSx2PWZ1bmN0aW9uKHIsdCl7dmFyIGU9cixuPXQsbz1uZXcgQXJyYXkocip0KSxhPXt9O2Euc2V0UGl4ZWw9ZnVuY3Rpb24ocix0LG4pe29bdCplK3JdPW59LGEud3JpdGU9ZnVuY3Rpb24ocil7ci53cml0ZVN0cmluZygiR0lGODdhIiksci53cml0ZVNob3J0KGUpLHIud3JpdGVTaG9ydChuKSxyLndyaXRlQnl0ZSgxMjgpLHIud3JpdGVCeXRlKDApLHIud3JpdGVCeXRlKDApLHIud3JpdGVCeXRlKDApLHIud3JpdGVCeXRlKDApLHIud3JpdGVCeXRlKDApLHIud3JpdGVCeXRlKDI1NSksci53cml0ZUJ5dGUoMjU1KSxyLndyaXRlQnl0ZSgyNTUpLHIud3JpdGVTdHJpbmcoIiwiKSxyLndyaXRlU2hvcnQoMCksci53cml0ZVNob3J0KDApLHIud3JpdGVTaG9ydChlKSxyLndyaXRlU2hvcnQobiksci53cml0ZUJ5dGUoMCk7dmFyIHQ9MixvPXUodCk7ci53cml0ZUJ5dGUodCk7Zm9yKHZhciBhPTA7by5sZW5ndGgtYT4yNTU7KXIud3JpdGVCeXRlKDI1NSksci53cml0ZUJ5dGVzKG8sYSwyNTUpLGErPTI1NTtyLndyaXRlQnl0ZShvLmxlbmd0aC1hKSxyLndyaXRlQnl0ZXMobyxhLG8ubGVuZ3RoLWEpLHIud3JpdGVCeXRlKDApLHIud3JpdGVTdHJpbmcoIjsiKX07dmFyIGk9ZnVuY3Rpb24ocil7dmFyIHQ9cixlPTAsbj0wLG89e307cmV0dXJuIG8ud3JpdGU9ZnVuY3Rpb24ocixvKXtpZihyPj4+byE9MCl0aHJvdyBuZXcgRXJyb3IoImxlbmd0aCBvdmVyIik7Zm9yKDtlK28+PTg7KXQud3JpdGVCeXRlKDI1NSYocjw8ZXxuKSksby09OC1lLHI+Pj49OC1lLG49MCxlPTA7bj1yPDxlfG4sZSs9b30sby5mbHVzaD1mdW5jdGlvbigpe2U+MCYmdC53cml0ZUJ5dGUobil9LG99LHU9ZnVuY3Rpb24ocil7Zm9yKHZhciB0PTE8PHIsZT0oMTw8cikrMSxuPXIrMSxhPWYoKSx1PTA7dD51O3UrPTEpYS5hZGQoU3RyaW5nLmZyb21DaGFyQ29kZSh1KSk7YS5hZGQoU3RyaW5nLmZyb21DaGFyQ29kZSh0KSksYS5hZGQoU3RyaW5nLmZyb21DaGFyQ29kZShlKSk7dmFyIGM9bCgpLGc9aShjKTtnLndyaXRlKHQsbik7dmFyIHM9MCx2PVN0cmluZy5mcm9tQ2hhckNvZGUob1tzXSk7Zm9yKHMrPTE7czxvLmxlbmd0aDspe3ZhciBoPVN0cmluZy5mcm9tQ2hhckNvZGUob1tzXSk7cys9MSxhLmNvbnRhaW5zKHYraCk/dis9aDooZy53cml0ZShhLmluZGV4T2YodiksbiksYS5zaXplKCk8NDA5NSYmKGEuc2l6ZSgpPT0xPDxuJiYobis9MSksYS5hZGQoditoKSksdj1oKX1yZXR1cm4gZy53cml0ZShhLmluZGV4T2YodiksbiksZy53cml0ZShlLG4pLGcuZmx1c2goKSxjLnRvQnl0ZUFycmF5KCl9LGY9ZnVuY3Rpb24oKXt2YXIgcj17fSx0PTAsZT17fTtyZXR1cm4gZS5hZGQ9ZnVuY3Rpb24obil7aWYoZS5jb250YWlucyhuKSl0aHJvdyBuZXcgRXJyb3IoImR1cCBrZXk6IituKTtyW25dPXQsdCs9MX0sZS5zaXplPWZ1bmN0aW9uKCl7cmV0dXJuIHR9LGUuaW5kZXhPZj1mdW5jdGlvbih0KXtyZXR1cm4gclt0XX0sZS5jb250YWlucz1mdW5jdGlvbih0KXtyZXR1cm4idW5kZWZpbmVkIiE9dHlwZW9mIHJbdF19LGV9O3JldHVybiBhfSxoPWZ1bmN0aW9uKHIsdCxlLG4pe2Zvcih2YXIgbz12KHIsdCksYT0wO3Q+YTthKz0xKWZvcih2YXIgaT0wO3I+aTtpKz0xKW8uc2V0UGl4ZWwoaSxhLGUoaSxhKSk7dmFyIHU9bCgpO28ud3JpdGUodSk7Zm9yKHZhciBmPWcoKSxjPXUudG9CeXRlQXJyYXkoKSxzPTA7czxjLmxlbmd0aDtzKz0xKWYud3JpdGVCeXRlKGNbc10pO2YuZmx1c2goKTt2YXIgaD0iIjtyZXR1cm4gaCs9IjxpbWciLGgrPScgc3JjPSInLGgrPSJkYXRhOmltYWdlL2dpZjtiYXNlNjQsIixoKz1mLGgrPSciJyxoKz0nIHdpZHRoPSInLGgrPXIsaCs9JyInLGgrPScgaGVpZ2h0PSInLGgrPXQsaCs9JyInLG4mJihoKz0nIGFsdD0iJyxoKz1uLGgrPSciJyksaCs9Ii8+In07cmV0dXJuIHR9KCk7cmV0dXJuIGZ1bmN0aW9uKHIpeyJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtdLHIpOiJvYmplY3QiPT10eXBlb2YgZXhwb3J0cyYmKG1vZHVsZS5leHBvcnRzPXIoKSl9KGZ1bmN0aW9uKCl7cmV0dXJuIHJ9KSwhZnVuY3Rpb24ocil7ci5zdHJpbmdUb0J5dGVzPWZ1bmN0aW9uKHIpe2Z1bmN0aW9uIHQocil7Zm9yKHZhciB0PVtdLGU9MDtlPHIubGVuZ3RoO2UrKyl7dmFyIG49ci5jaGFyQ29kZUF0KGUpOzEyOD5uP3QucHVzaChuKToyMDQ4Pm4/dC5wdXNoKDE5MnxuPj42LDEyOHw2MyZuKTo1NTI5Nj5ufHxuPj01NzM0ND90LnB1c2goMjI0fG4+PjEyLDEyOHxuPj42JjYzLDEyOHw2MyZuKTooZSsrLG49NjU1MzYrKCgxMDIzJm4pPDwxMHwxMDIzJnIuY2hhckNvZGVBdChlKSksdC5wdXNoKDI0MHxuPj4xOCwxMjh8bj4+MTImNjMsMTI4fG4+PjYmNjMsMTI4fDYzJm4pKX1yZXR1cm4gdH1yZXR1cm4gdChyKX19KHIpLHJ9KCkpOw=="
	StaticResource["js/jq/jquery-slide.js"] = "Ow0KKGZ1bmN0aW9uKCkgew0KDQoJdmFyIHBsdWdpbiA9ICdzbGlkZSc7DQoNCgkkLmZuW3BsdWdpbl0gPSBmdW5jdGlvbihwYXJhbSwgZXh0MSwgZXh0Mikgew0KCQlpZiAodHlwZW9mIHBhcmFtID09ICdzdHJpbmcnKSB7DQoJCQl2YXIgcmV0dXJuVmFsdWU7DQoJCQl0aGlzLmVhY2goZnVuY3Rpb24oKSB7DQoJCQkJdmFyIGRhdGEgPSAkKHRoaXMpLmRhdGEocGx1Z2luKTsNCgkJCQlpZiAoZGF0YSAmJiBkYXRhW3BhcmFtXSAmJiAocmV0dXJuVmFsdWUgPSBkYXRhW3BhcmFtXShleHQxLCBleHQyKSkgIT09IHVuZGVmaW5lZCkgew0KCQkJCQlyZXR1cm4gZmFsc2U7DQoJCQkJfQ0KCQkJfSk7DQoJCQlyZXR1cm4gcmV0dXJuVmFsdWUgPT09IHVuZGVmaW5lZCA/IHRoaXMgOiByZXR1cm5WYWx1ZTsNCgkJfSBlbHNlIHsNCgkJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7DQoJCQkJJCh0aGlzKS5kYXRhKHBsdWdpbiwgbmV3IFNsaWRlKHRoaXMsIHBhcmFtKSk7DQoJCQl9KTsNCgkJfQ0KCX0NCg0KCXZhciBkZWZhdWx0UGFyYW0gPSB7DQoJCWRhdGEgOiBbXQ0KCX0NCg0KCWZ1bmN0aW9uIFNsaWRlKGRvbSwgcGFyYW0pIHsNCgkJJC5leHRlbmQodGhpcywgZGVmYXVsdFBhcmFtLCBwYXJhbSk7DQoJCXZhciBfdGhpcyA9IHRoaXM7DQoJCV90aGlzLiRkb20gPSAkKGRvbSkuY3NzKHsNCgkJCSdwb3NpdGlvbicgOiAncmVsYXRpdmUnLA0KCQkJJ292ZXJmbG93JyA6ICdoaWRkZW4nLA0KCQkJJ3dpZHRoJyA6ICcxMDAlJw0KCQl9KTsNCg0KCQl2YXIgc3RycyA9IFtdOw0KCQlzdHJzLnB1c2goJzx1bCBzdHlsZT0id2lkdGg6JyArIF90aGlzLmRhdGEubGVuZ3RoICsgJzAwJSI+Jyk7DQoJCXN0cnMucHVzaCgoJzxsaSBzdHlsZT0iZmxvYXQ6bGVmdDt3aWR0aDonICsgKDEwMCAvIF90aGlzLmRhdGEubGVuZ3RoKSArICclOyI+PGltZyBzcmM9Iip7aW1nfSIgc3R5bGU9ImRpc3BsYXk6YmxvY2s7aGVpZ2h0OjEwcmVtO21hcmdpbjowIGF1dG87IiAvPjwvbGk+JykuZnJvbShfdGhpcy5kYXRhKSkNCgkJc3Rycy5wdXNoKCc8L3VsPicpOw0KCQlzdHJzLnB1c2goJzxkaXYgc3R5bGU9ImNsZWFyOmJvdGg7Ij48L2Rpdj4nKTsNCgkJc3Rycy5wdXNoKCc8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7d2lkdGg6IDEwMCU7dGV4dC1hbGlnbjpjZW50ZXI7Ym90dG9tOiAwcmVtOyI+Jyk7DQoJCXN0cnMucHVzaCgnPHNwYW4gc3R5bGU9ImRpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOiAwLjJyZW07aGVpZ2h0OiAwLjJyZW07Ym9yZGVyOiAwLjA1cmVtIHNvbGlkIHdoaXRlO21hcmdpbjogMC4wNXJlbTtib3JkZXItcmFkaXVzOiAxMDByZW07Ij48L3NwYW4+Jy5mcm9tKF90aGlzLmRhdGEpKTsNCgkJc3Rycy5wdXNoKCc8L2Rpdj4nKQ0KCQlfdGhpcy4kZG9tLmh0bWwoc3Rycy5qb2luKCcnKSk7DQoNCgkJX3RoaXMubW92ZSgpOw0KCQlfdGhpcy4kZG9tLmRlbGVnYXRlKCdpbWcnLCAnY2xpY2snLCBmdW5jdGlvbigpIHsNCgkJCXZhciBkID0gX3RoaXMuZGF0YVskKHRoaXMpLmluZGV4KCldOw0KCQkJaWYgKGQudXJsKSB7DQoJCQkJd2luZG93LmxvY2F0aW9uID0gZC51cmw7DQoJCQl9DQoJCX0pOw0KCX0NCg0KCSQuZXh0ZW5kKFNsaWRlLnByb3RvdHlwZSwgew0KCQltb3ZlVG8gOiBmdW5jdGlvbihpbmRleCkgew0KCQkJdGhpcy5pbmRleCA9IGluZGV4Ow0KCQkJdGhpcy4kZG9tLmZpbmQoJ3NwYW46ZXEoJyArIGluZGV4ICsgJyknKS5jc3MoJ2JhY2tncm91bmQnLCAnI0ZGMDAwMCcpLnNpYmxpbmdzKCkuY3NzKCdiYWNrZ3JvdW5kJywgJyM5RTg3ODAnKTsNCgkJCXRoaXMuJGRvbS5maW5kKCd1bCcpLnN0b3AoKS5hbmltYXRlKHsNCgkJCQltYXJnaW5MZWZ0IDogJy0nICsgKDEwMCAqIGluZGV4KSArICclJw0KCQkJfSwgMTAwMCk7DQoJCX0sDQoJCW1vdmVUb05leHQgOiBmdW5jdGlvbigpIHsNCgkJCXRoaXMubW92ZVRvKHRoaXMuaW5kZXggKyAxIDwgdGhpcy5kYXRhLmxlbmd0aCA/IHRoaXMuaW5kZXggKyAxIDogMCk7DQoJCX0sDQoJCW1vdmUgOiBmdW5jdGlvbigpIHsNCgkJCXZhciBfdGhpcyA9IHRoaXM7DQoJCQlfdGhpcy5tb3ZlVG8oMCk7DQoJCQl2YXIgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHsNCgkJCQlfdGhpcy5tb3ZlVG9OZXh0KCk7DQoJCQl9LCAzMDAwKTsNCgkJfQ0KCX0pOw0KDQp9KSh3aW5kb3cualF1ZXJ5IHx8IHdpbmRvdy5aZXB0byk7"
	StaticResource["js/jq/jquery.cookie.js"] = "LyohDQogKiBqUXVlcnkgQ29va2llIFBsdWdpbiB2MS40LjENCiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9jYXJoYXJ0bC9qcXVlcnktY29va2llDQogKg0KICogQ29weXJpZ2h0IDIwMTMgS2xhdXMgSGFydGwNCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZQ0KICovDQooZnVuY3Rpb24gKGZhY3RvcnkpIHsNCglpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7DQoJCS8vIEFNRA0KCQlkZWZpbmUoWydqcXVlcnknXSwgZmFjdG9yeSk7DQoJfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHsNCgkJLy8gQ29tbW9uSlMNCgkJZmFjdG9yeShyZXF1aXJlKCdqcXVlcnknKSk7DQoJfSBlbHNlIHsNCgkJLy8gQnJvd3NlciBnbG9iYWxzDQoJCWZhY3RvcnkoalF1ZXJ5KTsNCgl9DQp9KGZ1bmN0aW9uICgkKSB7DQoNCgl2YXIgcGx1c2VzID0gL1wrL2c7DQoNCglmdW5jdGlvbiBlbmNvZGUocykgew0KCQlyZXR1cm4gY29uZmlnLnJhdyA/IHMgOiBlbmNvZGVVUklDb21wb25lbnQocyk7DQoJfQ0KDQoJZnVuY3Rpb24gZGVjb2RlKHMpIHsNCgkJcmV0dXJuIGNvbmZpZy5yYXcgPyBzIDogZGVjb2RlVVJJQ29tcG9uZW50KHMpOw0KCX0NCg0KCWZ1bmN0aW9uIHN0cmluZ2lmeUNvb2tpZVZhbHVlKHZhbHVlKSB7DQoJCXJldHVybiBlbmNvZGUoY29uZmlnLmpzb24gPyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgOiBTdHJpbmcodmFsdWUpKTsNCgl9DQoNCglmdW5jdGlvbiBwYXJzZUNvb2tpZVZhbHVlKHMpIHsNCgkJaWYgKHMuaW5kZXhPZignIicpID09PSAwKSB7DQoJCQkvLyBUaGlzIGlzIGEgcXVvdGVkIGNvb2tpZSBhcyBhY2NvcmRpbmcgdG8gUkZDMjA2OCwgdW5lc2NhcGUuLi4NCgkJCXMgPSBzLnNsaWNlKDEsIC0xKS5yZXBsYWNlKC9cXCIvZywgJyInKS5yZXBsYWNlKC9cXFxcL2csICdcXCcpOw0KCQl9DQoNCgkJdHJ5IHsNCgkJCS8vIFJlcGxhY2Ugc2VydmVyLXNpZGUgd3JpdHRlbiBwbHVzZXMgd2l0aCBzcGFjZXMuDQoJCQkvLyBJZiB3ZSBjYW4ndCBkZWNvZGUgdGhlIGNvb2tpZSwgaWdub3JlIGl0LCBpdCdzIHVudXNhYmxlLg0KCQkJLy8gSWYgd2UgY2FuJ3QgcGFyc2UgdGhlIGNvb2tpZSwgaWdub3JlIGl0LCBpdCdzIHVudXNhYmxlLg0KCQkJcyA9IGRlY29kZVVSSUNvbXBvbmVudChzLnJlcGxhY2UocGx1c2VzLCAnICcpKTsNCgkJCXJldHVybiBjb25maWcuanNvbiA/IEpTT04ucGFyc2UocykgOiBzOw0KCQl9IGNhdGNoKGUpIHt9DQoJfQ0KDQoJZnVuY3Rpb24gcmVhZChzLCBjb252ZXJ0ZXIpIHsNCgkJdmFyIHZhbHVlID0gY29uZmlnLnJhdyA/IHMgOiBwYXJzZUNvb2tpZVZhbHVlKHMpOw0KCQlyZXR1cm4gJC5pc0Z1bmN0aW9uKGNvbnZlcnRlcikgPyBjb252ZXJ0ZXIodmFsdWUpIDogdmFsdWU7DQoJfQ0KDQoJdmFyIGNvbmZpZyA9ICQuY29va2llID0gZnVuY3Rpb24gKGtleSwgdmFsdWUsIG9wdGlvbnMpIHsNCg0KCQkvLyBXcml0ZQ0KDQoJCWlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkICYmICEkLmlzRnVuY3Rpb24odmFsdWUpKSB7DQoJCQlvcHRpb25zID0gJC5leHRlbmQoe30sIGNvbmZpZy5kZWZhdWx0cywgb3B0aW9ucyk7DQoNCgkJCWlmICh0eXBlb2Ygb3B0aW9ucy5leHBpcmVzID09PSAnbnVtYmVyJykgew0KCQkJCXZhciBkYXlzID0gb3B0aW9ucy5leHBpcmVzLCB0ID0gb3B0aW9ucy5leHBpcmVzID0gbmV3IERhdGUoKTsNCgkJCQl0LnNldFRpbWUoK3QgKyBkYXlzICogODY0ZSs1KTsNCgkJCX0NCg0KCQkJcmV0dXJuIChkb2N1bWVudC5jb29raWUgPSBbDQoJCQkJZW5jb2RlKGtleSksICc9Jywgc3RyaW5naWZ5Q29va2llVmFsdWUodmFsdWUpLA0KCQkJCW9wdGlvbnMuZXhwaXJlcyA/ICc7IGV4cGlyZXM9JyArIG9wdGlvbnMuZXhwaXJlcy50b1VUQ1N0cmluZygpIDogJycsIC8vIHVzZSBleHBpcmVzIGF0dHJpYnV0ZSwgbWF4LWFnZSBpcyBub3Qgc3VwcG9ydGVkIGJ5IElFDQoJCQkJb3B0aW9ucy5wYXRoICAgID8gJzsgcGF0aD0nICsgb3B0aW9ucy5wYXRoIDogJycsDQoJCQkJb3B0aW9ucy5kb21haW4gID8gJzsgZG9tYWluPScgKyBvcHRpb25zLmRvbWFpbiA6ICcnLA0KCQkJCW9wdGlvbnMuc2VjdXJlICA/ICc7IHNlY3VyZScgOiAnJw0KCQkJXS5qb2luKCcnKSk7DQoJCX0NCg0KCQkvLyBSZWFkDQoNCgkJdmFyIHJlc3VsdCA9IGtleSA/IHVuZGVmaW5lZCA6IHt9Ow0KDQoJCS8vIFRvIHByZXZlbnQgdGhlIGZvciBsb29wIGluIHRoZSBmaXJzdCBwbGFjZSBhc3NpZ24gYW4gZW1wdHkgYXJyYXkNCgkJLy8gaW4gY2FzZSB0aGVyZSBhcmUgbm8gY29va2llcyBhdCBhbGwuIEFsc28gcHJldmVudHMgb2RkIHJlc3VsdCB3aGVuDQoJCS8vIGNhbGxpbmcgJC5jb29raWUoKS4NCgkJdmFyIGNvb2tpZXMgPSBkb2N1bWVudC5jb29raWUgPyBkb2N1bWVudC5jb29raWUuc3BsaXQoJzsgJykgOiBbXTsNCg0KCQlmb3IgKHZhciBpID0gMCwgbCA9IGNvb2tpZXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7DQoJCQl2YXIgcGFydHMgPSBjb29raWVzW2ldLnNwbGl0KCc9Jyk7DQoJCQl2YXIgbmFtZSA9IGRlY29kZShwYXJ0cy5zaGlmdCgpKTsNCgkJCXZhciBjb29raWUgPSBwYXJ0cy5qb2luKCc9Jyk7DQoNCgkJCWlmIChrZXkgJiYga2V5ID09PSBuYW1lKSB7DQoJCQkJLy8gSWYgc2Vjb25kIGFyZ3VtZW50ICh2YWx1ZSkgaXMgYSBmdW5jdGlvbiBpdCdzIGEgY29udmVydGVyLi4uDQoJCQkJcmVzdWx0ID0gcmVhZChjb29raWUsIHZhbHVlKTsNCgkJCQlicmVhazsNCgkJCX0NCg0KCQkJLy8gUHJldmVudCBzdG9yaW5nIGEgY29va2llIHRoYXQgd2UgY291bGRuJ3QgZGVjb2RlLg0KCQkJaWYgKCFrZXkgJiYgKGNvb2tpZSA9IHJlYWQoY29va2llKSkgIT09IHVuZGVmaW5lZCkgew0KCQkJCXJlc3VsdFtuYW1lXSA9IGNvb2tpZTsNCgkJCX0NCgkJfQ0KDQoJCXJldHVybiByZXN1bHQ7DQoJfTsNCg0KCWNvbmZpZy5kZWZhdWx0cyA9IHt9Ow0KDQoJJC5yZW1vdmVDb29raWUgPSBmdW5jdGlvbiAoa2V5LCBvcHRpb25zKSB7DQoJCWlmICgkLmNvb2tpZShrZXkpID09PSB1bmRlZmluZWQpIHsNCgkJCXJldHVybiBmYWxzZTsNCgkJfQ0KDQoJCS8vIE11c3Qgbm90IGFsdGVyIG9wdGlvbnMsIHRodXMgZXh0ZW5kaW5nIGEgZnJlc2ggb2JqZWN0Li4uDQoJCSQuY29va2llKGtleSwgJycsICQuZXh0ZW5kKHt9LCBvcHRpb25zLCB7IGV4cGlyZXM6IC0xIH0pKTsNCgkJcmV0dXJuICEkLmNvb2tpZShrZXkpOw0KCX07DQoNCn0pKTs="
	StaticResource["js/plus/plus.extend.js"] = "KGZ1bmN0aW9uIChQKSB7CgogICAgY29uc29sZS5pbmZvKFApOwoKfSkod2luZG93LlApOw=="
	StaticResource["js/project.js"] = "OyhmdW5jdGlvbiAoKSB7CgogICAgUC5jKCdqcy9lbmNyeXB0L2FsbC5qcyxqcy9lbmNyeXB0L2xvZ2luLmpzJywgdHJ1ZSk7Cgp9KSgpOw=="
	StaticResource["js/qrcode.min.js"] = ""
	StaticResource["js/zepto/index.js"] = "KGZ1bmN0aW9uKCQpIHsNCg0KCS8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCgkvLyAkKCcucGFnZS1jdXJyZW50JykucmVtb3ZlQ2xhc3MoJ3BhZ2UtY3VycmVudCcpLmFkZENsYXNzKCdoaWRlJyk7DQoJLy8gJCgnLnBhZ2UtNy0xJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKS5hZGRDbGFzcygncGFnZS1jdXJyZW50Jyk7DQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KDQoJdmFyICRjdXJQYWdlLCBub3c7DQoJdmFyIHRvd2FyZHMgPSB7DQoJCXVwIDogMSwNCgkJcmlnaHQgOiAyLA0KCQlkb3duIDogMywNCgkJbGVmdCA6IDQNCgl9Ow0KCXZhciBub1N3aXBlID0gZmFsc2U7DQoJdmFyIG9ubHlMUlN3aXBlID0gZmFsc2U7DQoJdmFyIGlzQW5pbWF0aW5nID0gZmFsc2U7DQoNCgkkKGZ1bmN0aW9uKCkgew0KDQoJCSRjdXJQYWdlID0gJCgnLnBhZ2UtY3VycmVudCcpOw0KCQlpZiAoJGN1clBhZ2VbMF0pIHsNCgkJCXZhciBjdXJQYWdlcyA9IC9wYWdlLShcZCspLShcZCspLy5leGVjKCRjdXJQYWdlWzBdLmNsYXNzTmFtZSk7DQoJCQlub3cgPSB7DQoJCQkJcm93IDogcGFyc2VJbnQoY3VyUGFnZXNbMV0pLA0KCQkJCWNvbCA6IHBhcnNlSW50KGN1clBhZ2VzWzJdKQ0KCQkJfTsNCgkJfSBlbHNlIHsNCgkJCW5vdyA9IHsNCgkJCQlyb3cgOiAxLA0KCQkJCWNvbCA6IDENCgkJCX07DQoJCX0NCg0KCQl2YXIgd2FpdGluZ0hlaWdodCA9ICQoIi53YWl0aW5nIikuaGVpZ2h0KCk7DQoJCXZhciB3YWl0aW5nV2lkdGggPSAkKCIud2FpdGluZyIpLndpZHRoKCk7DQoJCXdpbmRvdy5yZXBhaXJUcmFucyA9IGZ1bmN0aW9uKCkgew0KCQkJdmFyIGhlaWdodCA9ICQod2luZG93KS5oZWlnaHQoKSA+IDIgKiB3YWl0aW5nSGVpZ2h0ID8gd2FpdGluZ0hlaWdodCA6ICQod2luZG93KS5oZWlnaHQoKTsNCgkJCXZhciBzID0gaGVpZ2h0IC8gcGFyc2VJbnQoJCgnLndyYXAnKS5jc3MoJ2hlaWdodCcpKTsNCgkJCQ0KCQkJdmFyIHdpZHRoID0gJCh3aW5kb3cpLmhlaWdodCgpID4gMiAqIHdhaXRpbmdIZWlnaHQgPyB3YWl0aW5nV2lkdGggOiAkKHdpbmRvdykud2lkdGgoKTsNCgkJCXZhciB3cyA9IHdpZHRoIC8gcGFyc2VJbnQoJCgnLndyYXAnKS5jc3MoJ3dpZHRoJykpOw0KCQkJaWYod3MgPiBzICogMS41KSB7DQoJCQkJd3MgPSBzOw0KCQkJfQ0KCQkJdmFyIHRyYW5zZm9ybSA9ICdzY2FsZSgnICsgd3MgKyAnLCcgKyBzICsgJyknOw0KCQkJJCgnLndyYXAnKS5jc3Moew0KCQkJCSctd2Via2l0LXRyYW5zZm9ybScgOiB0cmFuc2Zvcm0sDQoJCQkJJy1tb3otdHJhbnNmb3JtJyA6IHRyYW5zZm9ybSwNCgkJCQknLW8tdHJhbnNmb3JtJyA6IHRyYW5zZm9ybQ0KCQkJfSk7DQoJCX0NCg0KCQl2YXIgJGltZ3MgPSAkKCJpbWciKTsNCgkJdmFyIGxvYWRlZEludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7DQoJCQl2YXIgYWxsQ29tcGxldGUgPSBmYWxzZTsNCgkJCSRpbWdzLmVhY2goZnVuY3Rpb24oKSB7DQoJCQkJcmV0dXJuIGFsbENvbXBsZXRlID0gdGhpcy5jb21wbGV0ZTsNCgkJCX0pOw0KCQkJYWxsQ29tcGxldGUgPSB3aW5kb3cubG9hZENvbXBsZXRlID8gd2luZG93LmxvYWRDb21wbGV0ZSgpIDogdHJ1ZTsNCgkJCWlmICgkaW1ncy5sZW5ndGggPT0gMCB8fCBhbGxDb21wbGV0ZSkgew0KCQkJCSQod2luZG93KS5yZXNpemUocmVwYWlyVHJhbnMpOw0KCQkJCXJlcGFpclRyYW5zKCk7DQoJCQkJJCgnLnN3aXBlci13cmFwcGVyLC5wYWdlLWN1cnJlbnQnKS5yZW1vdmVDbGFzcygnaGlkZScpOw0KCQkJCSQoIi53YWl0aW5nIikucmVtb3ZlKCk7DQoJCQkJY2xlYXJJbnRlcnZhbChsb2FkZWRJbnRlcnZhbCk7DQoJCQkJaWYgKHR5cGVvZiAkcmVhZHkgPT0gJ2Z1bmN0aW9uJykgew0KCQkJCQkkcmVhZHkoKTsNCgkJCQl9DQoJCQl9DQoJCX0sIDEwMCk7DQoJfSk7DQoNCgl2YXIgb2xkVG91Y2g7DQoNCglmdW5jdGlvbiBnZXRUb3VjaChlKSB7DQoJCWZ1bmN0aW9uIGlzUHJpbWFyeVRvdWNoKGV2ZW50KSB7DQoJCQlyZXR1cm4gKGV2ZW50LnBvaW50ZXJUeXBlID09ICd0b3VjaCcgfHwgZXZlbnQucG9pbnRlclR5cGUgPT0gZXZlbnQuTVNQT0lOVEVSX1RZUEVfVE9VQ0gpICYmIGV2ZW50LmlzUHJpbWFyeTsNCgkJfQ0KCQlmdW5jdGlvbiBpc1BvaW50ZXJFdmVudFR5cGUoZSwgdHlwZSkgew0KCQkJcmV0dXJuIChlLnR5cGUgPT0gJ3BvaW50ZXInICsgdHlwZSB8fCBlLnR5cGUudG9Mb3dlckNhc2UoKSA9PSAnbXNwb2ludGVyJyArIHR5cGUpOw0KCQl9DQoJCWlmICgoX2lzUG9pbnRlclR5cGUgPSBpc1BvaW50ZXJFdmVudFR5cGUoZSwgJ21vdmUnKSkgJiYgIWlzUHJpbWFyeVRvdWNoKGUpKSB7DQoJCQlyZXR1cm47DQoJCX0NCgkJcmV0dXJuIF9pc1BvaW50ZXJUeXBlID8gZSA6IGUudG91Y2hlc1swXTsNCgl9DQoNCglkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgZnVuY3Rpb24oZSkgew0KCQlvbGRUb3VjaCA9IGdldFRvdWNoKGUpOw0KCX0pOw0KDQoJZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgZnVuY3Rpb24oZSkgew0KCQlpZiAobm9Td2lwZSkgew0KCQkJcmV0dXJuOw0KCQl9DQoJCWlmIChvbmx5TFJTd2lwZSkgew0KCQkJaWYgKE1hdGguYWJzKG9sZFRvdWNoLnBhZ2VYIC0gZ2V0VG91Y2goZSkucGFnZVgpID4gNSkgew0KCQkJCWUucHJldmVudERlZmF1bHQoKTsNCgkJCX0NCgkJCXJldHVybjsNCgkJfQ0KCQllLnByZXZlbnREZWZhdWx0KCk7DQoJfSwgZmFsc2UpOw0KDQoJYmluZE1vdmUoInN3aXBlVXAiLCAiaWNvbi11cCIsIGZ1bmN0aW9uKCkgew0KCQlpZiAoaXNBbmltYXRpbmcpDQoJCQlyZXR1cm47DQoJCXBhZ2VNb3ZlKHRvd2FyZHMudXAsIDEsIDApOw0KCX0pOw0KCWJpbmRNb3ZlKCJzd2lwZURvd24iLCAiaWNvbi1kb3duIiwgZnVuY3Rpb24oKSB7DQoJCWlmIChpc0FuaW1hdGluZykNCgkJCXJldHVybjsNCgkJcGFnZU1vdmUodG93YXJkcy5kb3duLCAtMSwgMCk7DQoJfSk7DQoJYmluZE1vdmUoInN3aXBlTGVmdCIsICJpY29uLWxlZnQsLmJhY2stbGVmdCIsIGZ1bmN0aW9uKCkgew0KCQlpZiAoaXNBbmltYXRpbmcpDQoJCQlyZXR1cm47DQoJCXBhZ2VNb3ZlKHRvd2FyZHMubGVmdCwgMCwgMSk7DQoJfSk7DQoJYmluZE1vdmUoInN3aXBlUmlnaHQiLCAiaWNvbi1yaWdodCwuYmFjay1yaWdodCIsIGZ1bmN0aW9uKCkgew0KCQlpZiAoaXNBbmltYXRpbmcpDQoJCQlyZXR1cm47DQoJCXBhZ2VNb3ZlKHRvd2FyZHMucmlnaHQsIDAsIC0xKTsNCgl9KTsNCg0KCWZ1bmN0aW9uIGJpbmRNb3ZlKGFjdGlvbiwgaWNvbiwgY2FsbGJhY2spIHsNCgkJJChkb2N1bWVudClbYWN0aW9uXShmdW5jdGlvbigpIHsNCgkJCWlmIChub1N3aXBlKSB7DQoJCQkJcmV0dXJuOw0KCQkJfQ0KCQkJaWYgKG9ubHlMUlN3aXBlICYmIC9zd2lwZShVcCl8KERvd24pLy50ZXN0KGFjdGlvbikpIHsNCgkJCQlyZXR1cm47DQoJCQl9DQoJCQljYWxsYmFjaygpOw0KCQl9KTsNCgkJJChkb2N1bWVudCkuZGVsZWdhdGUoJy4nICsgaWNvbiwgJ3RhcCcsIGNhbGxiYWNrKTsNCgkJLy8gJCgnLicgKyBpY29uKS5vbigndGFwJywgY2FsbGJhY2spOw0KCX0NCg0KCWZ1bmN0aW9uIHBhZ2VNb3ZlKHR3LCByb3dTdGVwLCBjb2xTdGVwKSB7DQoJCXZhciBsYXN0UGFnZSA9ICIucGFnZS0iICsgbm93LnJvdyArICItIiArIG5vdy5jb2w7DQoJCXZhciByb3cgPSBub3cucm93LCBjb2wgPSBub3cuY29sOw0KCQl2YXIgbm93UGFnZTsNCgkJdmFyIGZpbmROb3dQYWdlID0gZmFsc2U7DQoJCWZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykgew0KCQkJaWYgKHJvd1N0ZXAgIT0gMCkgeyAvLyDlpoLmnpxyb3fmnInlj5jljJbvvIzliJnlvLrliLblsIZjb2zliJflj5jkuLox44CCDQoJCQkJY29sU3RlcCA9IDEgLSBub3cuY29sOw0KCQkJCW5vd1BhZ2UgPSAiLnBhZ2UtIiArIChyb3cgKz0gcm93U3RlcCkgKyAiLTEiOw0KCQkJfSBlbHNlIHsNCgkJCQlub3dQYWdlID0gIi5wYWdlLSIgKyAocm93ICs9IHJvd1N0ZXApICsgIi0iICsgKGNvbCArPSBjb2xTdGVwKTsNCgkJCX0NCgkJCXdpbmRvdy5vblBhZ2VNb3ZlICYmIHdpbmRvdy5vblBhZ2VNb3ZlKHR3LCByb3dTdGVwLCBjb2xTdGVwLCBub3dQYWdlKTsNCgkJCWlmICgkKG5vd1BhZ2UpWzBdKSB7DQoJCQkJZmluZE5vd1BhZ2UgPSB0cnVlOw0KCQkJCWJyZWFrOw0KCQkJfQ0KCQl9DQoJCWlmICghZmluZE5vd1BhZ2UpIHsNCgkJCXJldHVybjsNCgkJfQ0KCQlub3cucm93ID0gcm93Ow0KCQlub3cuY29sID0gY29sOw0KDQoJCS8vIG5vdy5yb3cgKz0gcm93U3RlcDsNCgkJLy8gbm93LmNvbCArPSBjb2xTdGVwOw0KCQkvLyBpZiAobm93LnJvdyA9PSA3ICYmIChub3cuY29sID09IDIgfHwgbm93LmNvbCA9PSAzKSkgew0KCQkvLyBub1N3aXBlID0gdHJ1ZTsNCgkJLy8gfSBlbHNlIHsNCgkJLy8gJCh3aW5kb3cpLnNjcm9sbFRvcCgwKTsNCgkJLy8gbm9Td2lwZSA9IGZhbHNlOw0KCQkvLyB9DQoNCgkJc3dpdGNoICh0dykgew0KCQljYXNlIHRvd2FyZHMudXA6DQoJCQlvdXRDbGFzcyA9ICdwdC1wYWdlLW1vdmVUb1RvcCc7DQoJCQlpbkNsYXNzID0gJ3B0LXBhZ2UtbW92ZUZyb21Cb3R0b20nOw0KCQkJYnJlYWs7DQoJCWNhc2UgdG93YXJkcy5yaWdodDoNCgkJCW91dENsYXNzID0gJ3B0LXBhZ2UtbW92ZVRvUmlnaHQnOw0KCQkJaW5DbGFzcyA9ICdwdC1wYWdlLW1vdmVGcm9tTGVmdCc7DQoJCQlicmVhazsNCgkJY2FzZSB0b3dhcmRzLmRvd246DQoJCQlvdXRDbGFzcyA9ICdwdC1wYWdlLW1vdmVUb0JvdHRvbSc7DQoJCQlpbkNsYXNzID0gJ3B0LXBhZ2UtbW92ZUZyb21Ub3AnOw0KCQkJYnJlYWs7DQoJCWNhc2UgdG93YXJkcy5sZWZ0Og0KCQkJb3V0Q2xhc3MgPSAncHQtcGFnZS1tb3ZlVG9MZWZ0JzsNCgkJCWluQ2xhc3MgPSAncHQtcGFnZS1tb3ZlRnJvbVJpZ2h0JzsNCgkJCWJyZWFrOw0KCQl9DQoJCWlzQW5pbWF0aW5nID0gdHJ1ZTsNCgkJJChub3dQYWdlKS5yZW1vdmVDbGFzcygiaGlkZSIpOw0KDQoJCSQobGFzdFBhZ2UpLmFkZENsYXNzKG91dENsYXNzKTsNCgkJJChub3dQYWdlKS5hZGRDbGFzcyhpbkNsYXNzKTsNCg0KCQlzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgew0KDQoJCQkkKGxhc3RQYWdlKS5yZW1vdmVDbGFzcygncGFnZS1jdXJyZW50JykucmVtb3ZlQ2xhc3Mob3V0Q2xhc3MpLmFkZENsYXNzKCJoaWRlIikuZmluZCgiaW1nIikuYWRkQ2xhc3MoImhpZGUiKTsNCgkJCSQobm93UGFnZSkuYWRkQ2xhc3MoJ3BhZ2UtY3VycmVudCcpLnJlbW92ZUNsYXNzKGluQ2xhc3MpLmZpbmQoImltZyIpLnJlbW92ZUNsYXNzKCJoaWRlIik7DQoNCgkJCXNldFRpbWVvdXQoZnVuY3Rpb24oKSB7DQoJCQkJaXNBbmltYXRpbmcgPSBmYWxzZTsNCgkJCX0sIDEwMCk7DQoJCX0sIDQwMCk7DQoJfQ0KDQp9KSh3aW5kb3cuWmVwdG8pOw=="
	StaticResource["js/zepto/touch.js"] = "Ly8gICAgIFplcHRvLmpzCi8vICAgICAoYykgMjAxMC0yMDE0IFRob21hcyBGdWNocwovLyAgICAgWmVwdG8uanMgbWF5IGJlIGZyZWVseSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCgo7KGZ1bmN0aW9uKCQpewogIHZhciB0b3VjaCA9IHt9LAogICAgdG91Y2hUaW1lb3V0LCB0YXBUaW1lb3V0LCBzd2lwZVRpbWVvdXQsIGxvbmdUYXBUaW1lb3V0LAogICAgbG9uZ1RhcERlbGF5ID0gNzUwLAogICAgZ2VzdHVyZQoKICBmdW5jdGlvbiBzd2lwZURpcmVjdGlvbih4MSwgeDIsIHkxLCB5MikgewogICAgcmV0dXJuIE1hdGguYWJzKHgxIC0geDIpID49CiAgICAgIE1hdGguYWJzKHkxIC0geTIpID8gKHgxIC0geDIgPiAwID8gJ0xlZnQnIDogJ1JpZ2h0JykgOiAoeTEgLSB5MiA+IDAgPyAnVXAnIDogJ0Rvd24nKQogIH0KCiAgZnVuY3Rpb24gbG9uZ1RhcCgpIHsKICAgIGxvbmdUYXBUaW1lb3V0ID0gbnVsbAogICAgaWYgKHRvdWNoLmxhc3QpIHsKICAgICAgdG91Y2guZWwudHJpZ2dlcignbG9uZ1RhcCcpCiAgICAgIHRvdWNoID0ge30KICAgIH0KICB9CgogIGZ1bmN0aW9uIGNhbmNlbExvbmdUYXAoKSB7CiAgICBpZiAobG9uZ1RhcFRpbWVvdXQpIGNsZWFyVGltZW91dChsb25nVGFwVGltZW91dCkKICAgIGxvbmdUYXBUaW1lb3V0ID0gbnVsbAogIH0KCiAgZnVuY3Rpb24gY2FuY2VsQWxsKCkgewogICAgaWYgKHRvdWNoVGltZW91dCkgY2xlYXJUaW1lb3V0KHRvdWNoVGltZW91dCkKICAgIGlmICh0YXBUaW1lb3V0KSBjbGVhclRpbWVvdXQodGFwVGltZW91dCkKICAgIGlmIChzd2lwZVRpbWVvdXQpIGNsZWFyVGltZW91dChzd2lwZVRpbWVvdXQpCiAgICBpZiAobG9uZ1RhcFRpbWVvdXQpIGNsZWFyVGltZW91dChsb25nVGFwVGltZW91dCkKICAgIHRvdWNoVGltZW91dCA9IHRhcFRpbWVvdXQgPSBzd2lwZVRpbWVvdXQgPSBsb25nVGFwVGltZW91dCA9IG51bGwKICAgIHRvdWNoID0ge30KICB9CgogIGZ1bmN0aW9uIGlzUHJpbWFyeVRvdWNoKGV2ZW50KXsKICAgIHJldHVybiAoZXZlbnQucG9pbnRlclR5cGUgPT0gJ3RvdWNoJyB8fAogICAgICBldmVudC5wb2ludGVyVHlwZSA9PSBldmVudC5NU1BPSU5URVJfVFlQRV9UT1VDSCkKICAgICAgJiYgZXZlbnQuaXNQcmltYXJ5CiAgfQoKICBmdW5jdGlvbiBpc1BvaW50ZXJFdmVudFR5cGUoZSwgdHlwZSl7CiAgICByZXR1cm4gKGUudHlwZSA9PSAncG9pbnRlcicrdHlwZSB8fAogICAgICBlLnR5cGUudG9Mb3dlckNhc2UoKSA9PSAnbXNwb2ludGVyJyt0eXBlKQogIH0KCiAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXsKICAgIHZhciBub3csIGRlbHRhLCBkZWx0YVggPSAwLCBkZWx0YVkgPSAwLCBmaXJzdFRvdWNoLCBfaXNQb2ludGVyVHlwZQoKICAgIGlmICgnTVNHZXN0dXJlJyBpbiB3aW5kb3cpIHsKICAgICAgZ2VzdHVyZSA9IG5ldyBNU0dlc3R1cmUoKQogICAgICBnZXN0dXJlLnRhcmdldCA9IGRvY3VtZW50LmJvZHkKICAgIH0KCiAgICAkKGRvY3VtZW50KQogICAgICAuYmluZCgnTVNHZXN0dXJlRW5kJywgZnVuY3Rpb24oZSl7CiAgICAgICAgdmFyIHN3aXBlRGlyZWN0aW9uRnJvbVZlbG9jaXR5ID0KICAgICAgICAgIGUudmVsb2NpdHlYID4gMSA/ICdSaWdodCcgOiBlLnZlbG9jaXR5WCA8IC0xID8gJ0xlZnQnIDogZS52ZWxvY2l0eVkgPiAxID8gJ0Rvd24nIDogZS52ZWxvY2l0eVkgPCAtMSA/ICdVcCcgOiBudWxsOwogICAgICAgIGlmIChzd2lwZURpcmVjdGlvbkZyb21WZWxvY2l0eSkgewogICAgICAgICAgdG91Y2guZWwudHJpZ2dlcignc3dpcGUnKQogICAgICAgICAgdG91Y2guZWwudHJpZ2dlcignc3dpcGUnKyBzd2lwZURpcmVjdGlvbkZyb21WZWxvY2l0eSkKICAgICAgICB9CiAgICAgIH0pCiAgICAgIC5vbigndG91Y2hzdGFydCBNU1BvaW50ZXJEb3duIHBvaW50ZXJkb3duJywgZnVuY3Rpb24oZSl7CiAgICAgICAgaWYoKF9pc1BvaW50ZXJUeXBlID0gaXNQb2ludGVyRXZlbnRUeXBlKGUsICdkb3duJykpICYmCiAgICAgICAgICAhaXNQcmltYXJ5VG91Y2goZSkpIHJldHVybgogICAgICAgIGZpcnN0VG91Y2ggPSBfaXNQb2ludGVyVHlwZSA/IGUgOiBlLnRvdWNoZXNbMF0KICAgICAgICBpZiAoZS50b3VjaGVzICYmIGUudG91Y2hlcy5sZW5ndGggPT09IDEgJiYgdG91Y2gueDIpIHsKICAgICAgICAgIC8vIENsZWFyIG91dCB0b3VjaCBtb3ZlbWVudCBkYXRhIGlmIHdlIGhhdmUgaXQgc3RpY2tpbmcgYXJvdW5kCiAgICAgICAgICAvLyBUaGlzIGNhbiBvY2N1ciBpZiB0b3VjaGNhbmNlbCBkb2Vzbid0IGZpcmUgZHVlIHRvIHByZXZlbnREZWZhdWx0LCBldGMuCiAgICAgICAgICB0b3VjaC54MiA9IHVuZGVmaW5lZAogICAgICAgICAgdG91Y2gueTIgPSB1bmRlZmluZWQKICAgICAgICB9CiAgICAgICAgbm93ID0gRGF0ZS5ub3coKQogICAgICAgIGRlbHRhID0gbm93IC0gKHRvdWNoLmxhc3QgfHwgbm93KQogICAgICAgIHRvdWNoLmVsID0gJCgndGFnTmFtZScgaW4gZmlyc3RUb3VjaC50YXJnZXQgPwogICAgICAgICAgZmlyc3RUb3VjaC50YXJnZXQgOiBmaXJzdFRvdWNoLnRhcmdldC5wYXJlbnROb2RlKQogICAgICAgIHRvdWNoVGltZW91dCAmJiBjbGVhclRpbWVvdXQodG91Y2hUaW1lb3V0KQogICAgICAgIHRvdWNoLngxID0gZmlyc3RUb3VjaC5wYWdlWAogICAgICAgIHRvdWNoLnkxID0gZmlyc3RUb3VjaC5wYWdlWQogICAgICAgIGlmIChkZWx0YSA+IDAgJiYgZGVsdGEgPD0gMjUwKSB0b3VjaC5pc0RvdWJsZVRhcCA9IHRydWUKICAgICAgICB0b3VjaC5sYXN0ID0gbm93CiAgICAgICAgbG9uZ1RhcFRpbWVvdXQgPSBzZXRUaW1lb3V0KGxvbmdUYXAsIGxvbmdUYXBEZWxheSkKICAgICAgICAvLyBhZGRzIHRoZSBjdXJyZW50IHRvdWNoIGNvbnRhY3QgZm9yIElFIGdlc3R1cmUgcmVjb2duaXRpb24KICAgICAgICBpZiAoZ2VzdHVyZSAmJiBfaXNQb2ludGVyVHlwZSkgZ2VzdHVyZS5hZGRQb2ludGVyKGUucG9pbnRlcklkKTsKICAgICAgfSkKICAgICAgLm9uKCd0b3VjaG1vdmUgTVNQb2ludGVyTW92ZSBwb2ludGVybW92ZScsIGZ1bmN0aW9uKGUpewogICAgICAgIGlmKChfaXNQb2ludGVyVHlwZSA9IGlzUG9pbnRlckV2ZW50VHlwZShlLCAnbW92ZScpKSAmJgogICAgICAgICAgIWlzUHJpbWFyeVRvdWNoKGUpKSByZXR1cm4KICAgICAgICBmaXJzdFRvdWNoID0gX2lzUG9pbnRlclR5cGUgPyBlIDogZS50b3VjaGVzWzBdCiAgICAgICAgY2FuY2VsTG9uZ1RhcCgpCiAgICAgICAgdG91Y2gueDIgPSBmaXJzdFRvdWNoLnBhZ2VYCiAgICAgICAgdG91Y2gueTIgPSBmaXJzdFRvdWNoLnBhZ2VZCgogICAgICAgIGRlbHRhWCArPSBNYXRoLmFicyh0b3VjaC54MSAtIHRvdWNoLngyKQogICAgICAgIGRlbHRhWSArPSBNYXRoLmFicyh0b3VjaC55MSAtIHRvdWNoLnkyKQogICAgICB9KQogICAgICAub24oJ3RvdWNoZW5kIE1TUG9pbnRlclVwIHBvaW50ZXJ1cCcsIGZ1bmN0aW9uKGUpewogICAgICAgIGlmKChfaXNQb2ludGVyVHlwZSA9IGlzUG9pbnRlckV2ZW50VHlwZShlLCAndXAnKSkgJiYKICAgICAgICAgICFpc1ByaW1hcnlUb3VjaChlKSkgcmV0dXJuCiAgICAgICAgY2FuY2VsTG9uZ1RhcCgpCgogICAgICAgIC8vIHN3aXBlCiAgICAgICAgaWYgKCh0b3VjaC54MiAmJiBNYXRoLmFicyh0b3VjaC54MSAtIHRvdWNoLngyKSA+IDMwKSB8fAogICAgICAgICAgICAodG91Y2gueTIgJiYgTWF0aC5hYnModG91Y2gueTEgLSB0b3VjaC55MikgPiAzMCkpCgogICAgICAgICAgc3dpcGVUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgICAgdG91Y2guZWwudHJpZ2dlcignc3dpcGUnKQogICAgICAgICAgICB0b3VjaC5lbC50cmlnZ2VyKCdzd2lwZScgKyAoc3dpcGVEaXJlY3Rpb24odG91Y2gueDEsIHRvdWNoLngyLCB0b3VjaC55MSwgdG91Y2gueTIpKSkKICAgICAgICAgICAgdG91Y2ggPSB7fQogICAgICAgICAgfSwgMCkKCiAgICAgICAgLy8gbm9ybWFsIHRhcAogICAgICAgIGVsc2UgaWYgKCdsYXN0JyBpbiB0b3VjaCkKICAgICAgICAgIC8vIGRvbid0IGZpcmUgdGFwIHdoZW4gZGVsdGEgcG9zaXRpb24gY2hhbmdlZCBieSBtb3JlIHRoYW4gMzAgcGl4ZWxzLAogICAgICAgICAgLy8gZm9yIGluc3RhbmNlIHdoZW4gbW92aW5nIHRvIGEgcG9pbnQgYW5kIGJhY2sgdG8gb3JpZ2luCiAgICAgICAgICBpZiAoZGVsdGFYIDwgMzAgJiYgZGVsdGFZIDwgMzApIHsKICAgICAgICAgICAgLy8gZGVsYXkgYnkgb25lIHRpY2sgc28gd2UgY2FuIGNhbmNlbCB0aGUgJ3RhcCcgZXZlbnQgaWYgJ3Njcm9sbCcgZmlyZXMKICAgICAgICAgICAgLy8gKCd0YXAnIGZpcmVzIGJlZm9yZSAnc2Nyb2xsJykKICAgICAgICAgICAgdGFwVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CgogICAgICAgICAgICAgIC8vIHRyaWdnZXIgdW5pdmVyc2FsICd0YXAnIHdpdGggdGhlIG9wdGlvbiB0byBjYW5jZWxUb3VjaCgpCiAgICAgICAgICAgICAgLy8gKGNhbmNlbFRvdWNoIGNhbmNlbHMgcHJvY2Vzc2luZyBvZiBzaW5nbGUgdnMgZG91YmxlIHRhcHMgZm9yIGZhc3RlciAndGFwJyByZXNwb25zZSkKICAgICAgICAgICAgICB2YXIgZXZlbnQgPSAkLkV2ZW50KCd0YXAnKQogICAgICAgICAgICAgIGV2ZW50LmNhbmNlbFRvdWNoID0gY2FuY2VsQWxsCiAgICAgICAgICAgICAgdG91Y2guZWwudHJpZ2dlcihldmVudCkKCiAgICAgICAgICAgICAgLy8gdHJpZ2dlciBkb3VibGUgdGFwIGltbWVkaWF0ZWx5CiAgICAgICAgICAgICAgaWYgKHRvdWNoLmlzRG91YmxlVGFwKSB7CiAgICAgICAgICAgICAgICBpZiAodG91Y2guZWwpIHRvdWNoLmVsLnRyaWdnZXIoJ2RvdWJsZVRhcCcpCiAgICAgICAgICAgICAgICB0b3VjaCA9IHt9CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAvLyB0cmlnZ2VyIHNpbmdsZSB0YXAgYWZ0ZXIgMjUwbXMgb2YgaW5hY3Rpdml0eQogICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgdG91Y2hUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbigpewogICAgICAgICAgICAgICAgICB0b3VjaFRpbWVvdXQgPSBudWxsCiAgICAgICAgICAgICAgICAgIGlmICh0b3VjaC5lbCkgdG91Y2guZWwudHJpZ2dlcignc2luZ2xlVGFwJykKICAgICAgICAgICAgICAgICAgdG91Y2ggPSB7fQogICAgICAgICAgICAgICAgfSwgMjUwKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwgMCkKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRvdWNoID0ge30KICAgICAgICAgIH0KICAgICAgICAgIGRlbHRhWCA9IGRlbHRhWSA9IDAKCiAgICAgIH0pCiAgICAgIC8vIHdoZW4gdGhlIGJyb3dzZXIgd2luZG93IGxvc2VzIGZvY3VzLAogICAgICAvLyBmb3IgZXhhbXBsZSB3aGVuIGEgbW9kYWwgZGlhbG9nIGlzIHNob3duLAogICAgICAvLyBjYW5jZWwgYWxsIG9uZ29pbmcgZXZlbnRzCiAgICAgIC5vbigndG91Y2hjYW5jZWwgTVNQb2ludGVyQ2FuY2VsIHBvaW50ZXJjYW5jZWwnLCBjYW5jZWxBbGwpCgogICAgLy8gc2Nyb2xsaW5nIHRoZSB3aW5kb3cgaW5kaWNhdGVzIGludGVudGlvbiBvZiB0aGUgdXNlcgogICAgLy8gdG8gc2Nyb2xsLCBub3QgdGFwIG9yIHN3aXBlLCBzbyBjYW5jZWwgYWxsIG9uZ29pbmcgZXZlbnRzCiAgICAkKHdpbmRvdykub24oJ3Njcm9sbCcsIGNhbmNlbEFsbCkKICB9KQoKICA7Wydzd2lwZScsICdzd2lwZUxlZnQnLCAnc3dpcGVSaWdodCcsICdzd2lwZVVwJywgJ3N3aXBlRG93bicsCiAgICAnZG91YmxlVGFwJywgJ3RhcCcsICdzaW5nbGVUYXAnLCAnbG9uZ1RhcCddLmZvckVhY2goZnVuY3Rpb24oZXZlbnROYW1lKXsKICAgICQuZm5bZXZlbnROYW1lXSA9IGZ1bmN0aW9uKGNhbGxiYWNrKXsgcmV0dXJuIHRoaXMub24oZXZlbnROYW1lLCBjYWxsYmFjaykgfQogIH0pCn0pKHdpbmRvdy5aZXB0bykK"
	StaticResource["js/zepto/zepto.min.js"] = "LyogWmVwdG8gdjEuMS40IC0gemVwdG8gZXZlbnQgYWpheCBmb3JtIGllIC0gemVwdG9qcy5jb20vbGljZW5zZSAqLwp2YXIgWmVwdG89ZnVuY3Rpb24oKXtmdW5jdGlvbiBMKHQpe3JldHVybiBudWxsPT10P1N0cmluZyh0KTpqW1MuY2FsbCh0KV18fCJvYmplY3QifWZ1bmN0aW9uIFoodCl7cmV0dXJuImZ1bmN0aW9uIj09TCh0KX1mdW5jdGlvbiAkKHQpe3JldHVybiBudWxsIT10JiZ0PT10LndpbmRvd31mdW5jdGlvbiBfKHQpe3JldHVybiBudWxsIT10JiZ0Lm5vZGVUeXBlPT10LkRPQ1VNRU5UX05PREV9ZnVuY3Rpb24gRCh0KXtyZXR1cm4ib2JqZWN0Ij09TCh0KX1mdW5jdGlvbiBSKHQpe3JldHVybiBEKHQpJiYhJCh0KSYmT2JqZWN0LmdldFByb3RvdHlwZU9mKHQpPT1PYmplY3QucHJvdG90eXBlfWZ1bmN0aW9uIE0odCl7cmV0dXJuIm51bWJlciI9PXR5cGVvZiB0Lmxlbmd0aH1mdW5jdGlvbiBrKHQpe3JldHVybiBzLmNhbGwodCxmdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9dH0pfWZ1bmN0aW9uIHoodCl7cmV0dXJuIHQubGVuZ3RoPjA/bi5mbi5jb25jYXQuYXBwbHkoW10sdCk6dH1mdW5jdGlvbiBGKHQpe3JldHVybiB0LnJlcGxhY2UoLzo6L2csIi8iKS5yZXBsYWNlKC8oW0EtWl0rKShbQS1aXVthLXpdKS9nLCIkMV8kMiIpLnJlcGxhY2UoLyhbYS16XGRdKShbQS1aXSkvZywiJDFfJDIiKS5yZXBsYWNlKC9fL2csIi0iKS50b0xvd2VyQ2FzZSgpfWZ1bmN0aW9uIHEodCl7cmV0dXJuIHQgaW4gZj9mW3RdOmZbdF09bmV3IFJlZ0V4cCgiKF58XFxzKSIrdCsiKFxcc3wkKSIpfWZ1bmN0aW9uIEgodCxlKXtyZXR1cm4ibnVtYmVyIiE9dHlwZW9mIGV8fGNbRih0KV0/ZTplKyJweCJ9ZnVuY3Rpb24gSSh0KXt2YXIgZSxuO3JldHVybiB1W3RdfHwoZT1hLmNyZWF0ZUVsZW1lbnQodCksYS5ib2R5LmFwcGVuZENoaWxkKGUpLG49Z2V0Q29tcHV0ZWRTdHlsZShlLCIiKS5nZXRQcm9wZXJ0eVZhbHVlKCJkaXNwbGF5IiksZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpLCJub25lIj09biYmKG49ImJsb2NrIiksdVt0XT1uKSx1W3RdfWZ1bmN0aW9uIFYodCl7cmV0dXJuImNoaWxkcmVuImluIHQ/by5jYWxsKHQuY2hpbGRyZW4pOm4ubWFwKHQuY2hpbGROb2RlcyxmdW5jdGlvbih0KXtyZXR1cm4gMT09dC5ub2RlVHlwZT90OnZvaWQgMH0pfWZ1bmN0aW9uIEIobixpLHIpe2ZvcihlIGluIGkpciYmKFIoaVtlXSl8fEEoaVtlXSkpPyhSKGlbZV0pJiYhUihuW2VdKSYmKG5bZV09e30pLEEoaVtlXSkmJiFBKG5bZV0pJiYobltlXT1bXSksQihuW2VdLGlbZV0scikpOmlbZV0hPT10JiYobltlXT1pW2VdKX1mdW5jdGlvbiBVKHQsZSl7cmV0dXJuIG51bGw9PWU/bih0KTpuKHQpLmZpbHRlcihlKX1mdW5jdGlvbiBKKHQsZSxuLGkpe3JldHVybiBaKGUpP2UuY2FsbCh0LG4saSk6ZX1mdW5jdGlvbiBYKHQsZSxuKXtudWxsPT1uP3QucmVtb3ZlQXR0cmlidXRlKGUpOnQuc2V0QXR0cmlidXRlKGUsbil9ZnVuY3Rpb24gVyhlLG4pe3ZhciBpPWUuY2xhc3NOYW1lLHI9aSYmaS5iYXNlVmFsIT09dDtyZXR1cm4gbj09PXQ/cj9pLmJhc2VWYWw6aTp2b2lkKHI/aS5iYXNlVmFsPW46ZS5jbGFzc05hbWU9bil9ZnVuY3Rpb24gWSh0KXt2YXIgZTt0cnl7cmV0dXJuIHQ/InRydWUiPT10fHwoImZhbHNlIj09dD8hMToibnVsbCI9PXQ/bnVsbDovXjAvLnRlc3QodCl8fGlzTmFOKGU9TnVtYmVyKHQpKT8vXltcW1x7XS8udGVzdCh0KT9uLnBhcnNlSlNPTih0KTp0OmUpOnR9Y2F0Y2goaSl7cmV0dXJuIHR9fWZ1bmN0aW9uIEcodCxlKXtlKHQpO2Zvcih2YXIgbj0wLGk9dC5jaGlsZE5vZGVzLmxlbmd0aDtpPm47bisrKUcodC5jaGlsZE5vZGVzW25dLGUpfXZhciB0LGUsbixpLEMsTixyPVtdLG89ci5zbGljZSxzPXIuZmlsdGVyLGE9d2luZG93LmRvY3VtZW50LHU9e30sZj17fSxjPXsiY29sdW1uLWNvdW50IjoxLGNvbHVtbnM6MSwiZm9udC13ZWlnaHQiOjEsImxpbmUtaGVpZ2h0IjoxLG9wYWNpdHk6MSwiei1pbmRleCI6MSx6b29tOjF9LGw9L15ccyo8KFx3K3whKVtePl0qPi8saD0vXjwoXHcrKVxzKlwvPz4oPzo8XC9cMT58KSQvLHA9LzwoPyFhcmVhfGJyfGNvbHxlbWJlZHxocnxpbWd8aW5wdXR8bGlua3xtZXRhfHBhcmFtKSgoW1x3Ol0rKVtePl0qKVwvPi9naSxkPS9eKD86Ym9keXxodG1sKSQvaSxtPS8oW0EtWl0pL2csZz1bInZhbCIsImNzcyIsImh0bWwiLCJ0ZXh0IiwiZGF0YSIsIndpZHRoIiwiaGVpZ2h0Iiwib2Zmc2V0Il0sdj1bImFmdGVyIiwicHJlcGVuZCIsImJlZm9yZSIsImFwcGVuZCJdLHk9YS5jcmVhdGVFbGVtZW50KCJ0YWJsZSIpLHg9YS5jcmVhdGVFbGVtZW50KCJ0ciIpLGI9e3RyOmEuY3JlYXRlRWxlbWVudCgidGJvZHkiKSx0Ym9keTp5LHRoZWFkOnksdGZvb3Q6eSx0ZDp4LHRoOngsIioiOmEuY3JlYXRlRWxlbWVudCgiZGl2Iil9LHc9L2NvbXBsZXRlfGxvYWRlZHxpbnRlcmFjdGl2ZS8sRT0vXltcdy1dKiQvLGo9e30sUz1qLnRvU3RyaW5nLFQ9e30sTz1hLmNyZWF0ZUVsZW1lbnQoImRpdiIpLFA9e3RhYmluZGV4OiJ0YWJJbmRleCIscmVhZG9ubHk6InJlYWRPbmx5IiwiZm9yIjoiaHRtbEZvciIsImNsYXNzIjoiY2xhc3NOYW1lIixtYXhsZW5ndGg6Im1heExlbmd0aCIsY2VsbHNwYWNpbmc6ImNlbGxTcGFjaW5nIixjZWxscGFkZGluZzoiY2VsbFBhZGRpbmciLHJvd3NwYW46InJvd1NwYW4iLGNvbHNwYW46ImNvbFNwYW4iLHVzZW1hcDoidXNlTWFwIixmcmFtZWJvcmRlcjoiZnJhbWVCb3JkZXIiLGNvbnRlbnRlZGl0YWJsZToiY29udGVudEVkaXRhYmxlIn0sQT1BcnJheS5pc0FycmF5fHxmdW5jdGlvbih0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIEFycmF5fTtyZXR1cm4gVC5tYXRjaGVzPWZ1bmN0aW9uKHQsZSl7aWYoIWV8fCF0fHwxIT09dC5ub2RlVHlwZSlyZXR1cm4hMTt2YXIgbj10LndlYmtpdE1hdGNoZXNTZWxlY3Rvcnx8dC5tb3pNYXRjaGVzU2VsZWN0b3J8fHQub01hdGNoZXNTZWxlY3Rvcnx8dC5tYXRjaGVzU2VsZWN0b3I7aWYobilyZXR1cm4gbi5jYWxsKHQsZSk7dmFyIGkscj10LnBhcmVudE5vZGUsbz0hcjtyZXR1cm4gbyYmKHI9TykuYXBwZW5kQ2hpbGQodCksaT1+VC5xc2EocixlKS5pbmRleE9mKHQpLG8mJk8ucmVtb3ZlQ2hpbGQodCksaX0sQz1mdW5jdGlvbih0KXtyZXR1cm4gdC5yZXBsYWNlKC8tKyguKT8vZyxmdW5jdGlvbih0LGUpe3JldHVybiBlP2UudG9VcHBlckNhc2UoKToiIn0pfSxOPWZ1bmN0aW9uKHQpe3JldHVybiBzLmNhbGwodCxmdW5jdGlvbihlLG4pe3JldHVybiB0LmluZGV4T2YoZSk9PW59KX0sVC5mcmFnbWVudD1mdW5jdGlvbihlLGkscil7dmFyIHMsdSxmO3JldHVybiBoLnRlc3QoZSkmJihzPW4oYS5jcmVhdGVFbGVtZW50KFJlZ0V4cC4kMSkpKSxzfHwoZS5yZXBsYWNlJiYoZT1lLnJlcGxhY2UocCwiPCQxPjwvJDI+IikpLGk9PT10JiYoaT1sLnRlc3QoZSkmJlJlZ0V4cC4kMSksaSBpbiBifHwoaT0iKiIpLGY9YltpXSxmLmlubmVySFRNTD0iIitlLHM9bi5lYWNoKG8uY2FsbChmLmNoaWxkTm9kZXMpLGZ1bmN0aW9uKCl7Zi5yZW1vdmVDaGlsZCh0aGlzKX0pKSxSKHIpJiYodT1uKHMpLG4uZWFjaChyLGZ1bmN0aW9uKHQsZSl7Zy5pbmRleE9mKHQpPi0xP3VbdF0oZSk6dS5hdHRyKHQsZSl9KSksc30sVC5aPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ9dHx8W10sdC5fX3Byb3RvX189bi5mbix0LnNlbGVjdG9yPWV8fCIiLHR9LFQuaXNaPWZ1bmN0aW9uKHQpe3JldHVybiB0IGluc3RhbmNlb2YgVC5afSxULmluaXQ9ZnVuY3Rpb24oZSxpKXt2YXIgcjtpZighZSlyZXR1cm4gVC5aKCk7aWYoInN0cmluZyI9PXR5cGVvZiBlKWlmKGU9ZS50cmltKCksIjwiPT1lWzBdJiZsLnRlc3QoZSkpcj1ULmZyYWdtZW50KGUsUmVnRXhwLiQxLGkpLGU9bnVsbDtlbHNle2lmKGkhPT10KXJldHVybiBuKGkpLmZpbmQoZSk7cj1ULnFzYShhLGUpfWVsc2V7aWYoWihlKSlyZXR1cm4gbihhKS5yZWFkeShlKTtpZihULmlzWihlKSlyZXR1cm4gZTtpZihBKGUpKXI9ayhlKTtlbHNlIGlmKEQoZSkpcj1bZV0sZT1udWxsO2Vsc2UgaWYobC50ZXN0KGUpKXI9VC5mcmFnbWVudChlLnRyaW0oKSxSZWdFeHAuJDEsaSksZT1udWxsO2Vsc2V7aWYoaSE9PXQpcmV0dXJuIG4oaSkuZmluZChlKTtyPVQucXNhKGEsZSl9fXJldHVybiBULloocixlKX0sbj1mdW5jdGlvbih0LGUpe3JldHVybiBULmluaXQodCxlKX0sbi5leHRlbmQ9ZnVuY3Rpb24odCl7dmFyIGUsbj1vLmNhbGwoYXJndW1lbnRzLDEpO3JldHVybiJib29sZWFuIj09dHlwZW9mIHQmJihlPXQsdD1uLnNoaWZ0KCkpLG4uZm9yRWFjaChmdW5jdGlvbihuKXtCKHQsbixlKX0pLHR9LFQucXNhPWZ1bmN0aW9uKHQsZSl7dmFyIG4saT0iIyI9PWVbMF0scj0haSYmIi4iPT1lWzBdLHM9aXx8cj9lLnNsaWNlKDEpOmUsYT1FLnRlc3Qocyk7cmV0dXJuIF8odCkmJmEmJmk/KG49dC5nZXRFbGVtZW50QnlJZChzKSk/W25dOltdOjEhPT10Lm5vZGVUeXBlJiY5IT09dC5ub2RlVHlwZT9bXTpvLmNhbGwoYSYmIWk/cj90LmdldEVsZW1lbnRzQnlDbGFzc05hbWUocyk6dC5nZXRFbGVtZW50c0J5VGFnTmFtZShlKTp0LnF1ZXJ5U2VsZWN0b3JBbGwoZSkpfSxuLmNvbnRhaW5zPWEuZG9jdW1lbnRFbGVtZW50LmNvbnRhaW5zP2Z1bmN0aW9uKHQsZSl7cmV0dXJuIHQhPT1lJiZ0LmNvbnRhaW5zKGUpfTpmdW5jdGlvbih0LGUpe2Zvcig7ZSYmKGU9ZS5wYXJlbnROb2RlKTspaWYoZT09PXQpcmV0dXJuITA7cmV0dXJuITF9LG4udHlwZT1MLG4uaXNGdW5jdGlvbj1aLG4uaXNXaW5kb3c9JCxuLmlzQXJyYXk9QSxuLmlzUGxhaW5PYmplY3Q9UixuLmlzRW1wdHlPYmplY3Q9ZnVuY3Rpb24odCl7dmFyIGU7Zm9yKGUgaW4gdClyZXR1cm4hMTtyZXR1cm4hMH0sbi5pbkFycmF5PWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gci5pbmRleE9mLmNhbGwoZSx0LG4pfSxuLmNhbWVsQ2FzZT1DLG4udHJpbT1mdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09dD8iIjpTdHJpbmcucHJvdG90eXBlLnRyaW0uY2FsbCh0KX0sbi51dWlkPTAsbi5zdXBwb3J0PXt9LG4uZXhwcj17fSxuLm1hcD1mdW5jdGlvbih0LGUpe3ZhciBuLHIsbyxpPVtdO2lmKE0odCkpZm9yKHI9MDtyPHQubGVuZ3RoO3IrKyluPWUodFtyXSxyKSxudWxsIT1uJiZpLnB1c2gobik7ZWxzZSBmb3IobyBpbiB0KW49ZSh0W29dLG8pLG51bGwhPW4mJmkucHVzaChuKTtyZXR1cm4geihpKX0sbi5lYWNoPWZ1bmN0aW9uKHQsZSl7dmFyIG4saTtpZihNKHQpKXtmb3Iobj0wO248dC5sZW5ndGg7bisrKWlmKGUuY2FsbCh0W25dLG4sdFtuXSk9PT0hMSlyZXR1cm4gdH1lbHNlIGZvcihpIGluIHQpaWYoZS5jYWxsKHRbaV0saSx0W2ldKT09PSExKXJldHVybiB0O3JldHVybiB0fSxuLmdyZXA9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcy5jYWxsKHQsZSl9LHdpbmRvdy5KU09OJiYobi5wYXJzZUpTT049SlNPTi5wYXJzZSksbi5lYWNoKCJCb29sZWFuIE51bWJlciBTdHJpbmcgRnVuY3Rpb24gQXJyYXkgRGF0ZSBSZWdFeHAgT2JqZWN0IEVycm9yIi5zcGxpdCgiICIpLGZ1bmN0aW9uKHQsZSl7alsiW29iamVjdCAiK2UrIl0iXT1lLnRvTG93ZXJDYXNlKCl9KSxuLmZuPXtmb3JFYWNoOnIuZm9yRWFjaCxyZWR1Y2U6ci5yZWR1Y2UscHVzaDpyLnB1c2gsc29ydDpyLnNvcnQsaW5kZXhPZjpyLmluZGV4T2YsY29uY2F0OnIuY29uY2F0LG1hcDpmdW5jdGlvbih0KXtyZXR1cm4gbihuLm1hcCh0aGlzLGZ1bmN0aW9uKGUsbil7cmV0dXJuIHQuY2FsbChlLG4sZSl9KSl9LHNsaWNlOmZ1bmN0aW9uKCl7cmV0dXJuIG4oby5hcHBseSh0aGlzLGFyZ3VtZW50cykpfSxyZWFkeTpmdW5jdGlvbih0KXtyZXR1cm4gdy50ZXN0KGEucmVhZHlTdGF0ZSkmJmEuYm9keT90KG4pOmEuYWRkRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsZnVuY3Rpb24oKXt0KG4pfSwhMSksdGhpc30sZ2V0OmZ1bmN0aW9uKGUpe3JldHVybiBlPT09dD9vLmNhbGwodGhpcyk6dGhpc1tlPj0wP2U6ZSt0aGlzLmxlbmd0aF19LHRvQXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXQoKX0sc2l6ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmxlbmd0aH0scmVtb3ZlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe251bGwhPXRoaXMucGFyZW50Tm9kZSYmdGhpcy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMpfSl9LGVhY2g6ZnVuY3Rpb24odCl7cmV0dXJuIHIuZXZlcnkuY2FsbCh0aGlzLGZ1bmN0aW9uKGUsbil7cmV0dXJuIHQuY2FsbChlLG4sZSkhPT0hMX0pLHRoaXN9LGZpbHRlcjpmdW5jdGlvbih0KXtyZXR1cm4gWih0KT90aGlzLm5vdCh0aGlzLm5vdCh0KSk6bihzLmNhbGwodGhpcyxmdW5jdGlvbihlKXtyZXR1cm4gVC5tYXRjaGVzKGUsdCl9KSl9LGFkZDpmdW5jdGlvbih0LGUpe3JldHVybiBuKE4odGhpcy5jb25jYXQobih0LGUpKSkpfSxpczpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5sZW5ndGg+MCYmVC5tYXRjaGVzKHRoaXNbMF0sdCl9LG5vdDpmdW5jdGlvbihlKXt2YXIgaT1bXTtpZihaKGUpJiZlLmNhbGwhPT10KXRoaXMuZWFjaChmdW5jdGlvbih0KXtlLmNhbGwodGhpcyx0KXx8aS5wdXNoKHRoaXMpfSk7ZWxzZXt2YXIgcj0ic3RyaW5nIj09dHlwZW9mIGU/dGhpcy5maWx0ZXIoZSk6TShlKSYmWihlLml0ZW0pP28uY2FsbChlKTpuKGUpO3RoaXMuZm9yRWFjaChmdW5jdGlvbih0KXtyLmluZGV4T2YodCk8MCYmaS5wdXNoKHQpfSl9cmV0dXJuIG4oaSl9LGhhczpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4gRCh0KT9uLmNvbnRhaW5zKHRoaXMsdCk6bih0aGlzKS5maW5kKHQpLnNpemUoKX0pfSxlcTpmdW5jdGlvbih0KXtyZXR1cm4tMT09PXQ/dGhpcy5zbGljZSh0KTp0aGlzLnNsaWNlKHQsK3QrMSl9LGZpcnN0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpc1swXTtyZXR1cm4gdCYmIUQodCk/dDpuKHQpfSxsYXN0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpc1t0aGlzLmxlbmd0aC0xXTtyZXR1cm4gdCYmIUQodCk/dDpuKHQpfSxmaW5kOmZ1bmN0aW9uKHQpe3ZhciBlLGk9dGhpcztyZXR1cm4gZT10PyJvYmplY3QiPT10eXBlb2YgdD9uKHQpLmZpbHRlcihmdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIHIuc29tZS5jYWxsKGksZnVuY3Rpb24oZSl7cmV0dXJuIG4uY29udGFpbnMoZSx0KX0pfSk6MT09dGhpcy5sZW5ndGg/bihULnFzYSh0aGlzWzBdLHQpKTp0aGlzLm1hcChmdW5jdGlvbigpe3JldHVybiBULnFzYSh0aGlzLHQpfSk6W119LGNsb3Nlc3Q6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzWzBdLHI9ITE7Zm9yKCJvYmplY3QiPT10eXBlb2YgdCYmKHI9bih0KSk7aSYmIShyP3IuaW5kZXhPZihpKT49MDpULm1hdGNoZXMoaSx0KSk7KWk9aSE9PWUmJiFfKGkpJiZpLnBhcmVudE5vZGU7cmV0dXJuIG4oaSl9LHBhcmVudHM6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLGk9dGhpcztpLmxlbmd0aD4wOylpPW4ubWFwKGksZnVuY3Rpb24odCl7cmV0dXJuKHQ9dC5wYXJlbnROb2RlKSYmIV8odCkmJmUuaW5kZXhPZih0KTwwPyhlLnB1c2godCksdCk6dm9pZCAwfSk7cmV0dXJuIFUoZSx0KX0scGFyZW50OmZ1bmN0aW9uKHQpe3JldHVybiBVKE4odGhpcy5wbHVjaygicGFyZW50Tm9kZSIpKSx0KX0sY2hpbGRyZW46ZnVuY3Rpb24odCl7cmV0dXJuIFUodGhpcy5tYXAoZnVuY3Rpb24oKXtyZXR1cm4gVih0aGlzKX0pLHQpfSxjb250ZW50czpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1hcChmdW5jdGlvbigpe3JldHVybiBvLmNhbGwodGhpcy5jaGlsZE5vZGVzKX0pfSxzaWJsaW5nczpmdW5jdGlvbih0KXtyZXR1cm4gVSh0aGlzLm1hcChmdW5jdGlvbih0LGUpe3JldHVybiBzLmNhbGwoVihlLnBhcmVudE5vZGUpLGZ1bmN0aW9uKHQpe3JldHVybiB0IT09ZX0pfSksdCl9LGVtcHR5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3RoaXMuaW5uZXJIVE1MPSIifSl9LHBsdWNrOmZ1bmN0aW9uKHQpe3JldHVybiBuLm1hcCh0aGlzLGZ1bmN0aW9uKGUpe3JldHVybiBlW3RdfSl9LHNob3c6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7Im5vbmUiPT10aGlzLnN0eWxlLmRpc3BsYXkmJih0aGlzLnN0eWxlLmRpc3BsYXk9IiIpLCJub25lIj09Z2V0Q29tcHV0ZWRTdHlsZSh0aGlzLCIiKS5nZXRQcm9wZXJ0eVZhbHVlKCJkaXNwbGF5IikmJih0aGlzLnN0eWxlLmRpc3BsYXk9SSh0aGlzLm5vZGVOYW1lKSl9KX0scmVwbGFjZVdpdGg6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuYmVmb3JlKHQpLnJlbW92ZSgpfSx3cmFwOmZ1bmN0aW9uKHQpe3ZhciBlPVoodCk7aWYodGhpc1swXSYmIWUpdmFyIGk9bih0KS5nZXQoMCkscj1pLnBhcmVudE5vZGV8fHRoaXMubGVuZ3RoPjE7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihvKXtuKHRoaXMpLndyYXBBbGwoZT90LmNhbGwodGhpcyxvKTpyP2kuY2xvbmVOb2RlKCEwKTppKX0pfSx3cmFwQWxsOmZ1bmN0aW9uKHQpe2lmKHRoaXNbMF0pe24odGhpc1swXSkuYmVmb3JlKHQ9bih0KSk7Zm9yKHZhciBlOyhlPXQuY2hpbGRyZW4oKSkubGVuZ3RoOyl0PWUuZmlyc3QoKTtuKHQpLmFwcGVuZCh0aGlzKX1yZXR1cm4gdGhpc30sd3JhcElubmVyOmZ1bmN0aW9uKHQpe3ZhciBlPVoodCk7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihpKXt2YXIgcj1uKHRoaXMpLG89ci5jb250ZW50cygpLHM9ZT90LmNhbGwodGhpcyxpKTp0O28ubGVuZ3RoP28ud3JhcEFsbChzKTpyLmFwcGVuZChzKX0pfSx1bndyYXA6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wYXJlbnQoKS5lYWNoKGZ1bmN0aW9uKCl7bih0aGlzKS5yZXBsYWNlV2l0aChuKHRoaXMpLmNoaWxkcmVuKCkpfSksdGhpc30sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jbG9uZU5vZGUoITApfSl9LGhpZGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jc3MoImRpc3BsYXkiLCJub25lIil9LHRvZ2dsZTpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGk9bih0aGlzKTsoZT09PXQ/Im5vbmUiPT1pLmNzcygiZGlzcGxheSIpOmUpP2kuc2hvdygpOmkuaGlkZSgpfSl9LHByZXY6ZnVuY3Rpb24odCl7cmV0dXJuIG4odGhpcy5wbHVjaygicHJldmlvdXNFbGVtZW50U2libGluZyIpKS5maWx0ZXIodHx8IioiKX0sbmV4dDpmdW5jdGlvbih0KXtyZXR1cm4gbih0aGlzLnBsdWNrKCJuZXh0RWxlbWVudFNpYmxpbmciKSkuZmlsdGVyKHR8fCIqIil9LGh0bWw6ZnVuY3Rpb24odCl7cmV0dXJuIDAgaW4gYXJndW1lbnRzP3RoaXMuZWFjaChmdW5jdGlvbihlKXt2YXIgaT10aGlzLmlubmVySFRNTDtuKHRoaXMpLmVtcHR5KCkuYXBwZW5kKEoodGhpcyx0LGUsaSkpfSk6MCBpbiB0aGlzP3RoaXNbMF0uaW5uZXJIVE1MOm51bGx9LHRleHQ6ZnVuY3Rpb24odCl7cmV0dXJuIDAgaW4gYXJndW1lbnRzP3RoaXMuZWFjaChmdW5jdGlvbihlKXt2YXIgbj1KKHRoaXMsdCxlLHRoaXMudGV4dENvbnRlbnQpO3RoaXMudGV4dENvbnRlbnQ9bnVsbD09bj8iIjoiIitufSk6MCBpbiB0aGlzP3RoaXNbMF0udGV4dENvbnRlbnQ6bnVsbH0sYXR0cjpmdW5jdGlvbihuLGkpe3ZhciByO3JldHVybiJzdHJpbmciIT10eXBlb2Ygbnx8MSBpbiBhcmd1bWVudHM/dGhpcy5lYWNoKGZ1bmN0aW9uKHQpe2lmKDE9PT10aGlzLm5vZGVUeXBlKWlmKEQobikpZm9yKGUgaW4gbilYKHRoaXMsZSxuW2VdKTtlbHNlIFgodGhpcyxuLEoodGhpcyxpLHQsdGhpcy5nZXRBdHRyaWJ1dGUobikpKX0pOnRoaXMubGVuZ3RoJiYxPT09dGhpc1swXS5ub2RlVHlwZT8hKHI9dGhpc1swXS5nZXRBdHRyaWJ1dGUobikpJiZuIGluIHRoaXNbMF0/dGhpc1swXVtuXTpyOnR9LHJlbW92ZUF0dHI6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpezE9PT10aGlzLm5vZGVUeXBlJiZYKHRoaXMsdCl9KX0scHJvcDpmdW5jdGlvbih0LGUpe3JldHVybiB0PVBbdF18fHQsMSBpbiBhcmd1bWVudHM/dGhpcy5lYWNoKGZ1bmN0aW9uKG4pe3RoaXNbdF09Sih0aGlzLGUsbix0aGlzW3RdKX0pOnRoaXNbMF0mJnRoaXNbMF1bdF19LGRhdGE6ZnVuY3Rpb24oZSxuKXt2YXIgaT0iZGF0YS0iK2UucmVwbGFjZShtLCItJDEiKS50b0xvd2VyQ2FzZSgpLHI9MSBpbiBhcmd1bWVudHM/dGhpcy5hdHRyKGksbik6dGhpcy5hdHRyKGkpO3JldHVybiBudWxsIT09cj9ZKHIpOnR9LHZhbDpmdW5jdGlvbih0KXtyZXR1cm4gMCBpbiBhcmd1bWVudHM/dGhpcy5lYWNoKGZ1bmN0aW9uKGUpe3RoaXMudmFsdWU9Sih0aGlzLHQsZSx0aGlzLnZhbHVlKX0pOnRoaXNbMF0mJih0aGlzWzBdLm11bHRpcGxlP24odGhpc1swXSkuZmluZCgib3B0aW9uIikuZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2VsZWN0ZWR9KS5wbHVjaygidmFsdWUiKTp0aGlzWzBdLnZhbHVlKX0sb2Zmc2V0OmZ1bmN0aW9uKHQpe2lmKHQpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihlKXt2YXIgaT1uKHRoaXMpLHI9Sih0aGlzLHQsZSxpLm9mZnNldCgpKSxvPWkub2Zmc2V0UGFyZW50KCkub2Zmc2V0KCkscz17dG9wOnIudG9wLW8udG9wLGxlZnQ6ci5sZWZ0LW8ubGVmdH07InN0YXRpYyI9PWkuY3NzKCJwb3NpdGlvbiIpJiYocy5wb3NpdGlvbj0icmVsYXRpdmUiKSxpLmNzcyhzKX0pO2lmKCF0aGlzLmxlbmd0aClyZXR1cm4gbnVsbDt2YXIgZT10aGlzWzBdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO3JldHVybntsZWZ0OmUubGVmdCt3aW5kb3cucGFnZVhPZmZzZXQsdG9wOmUudG9wK3dpbmRvdy5wYWdlWU9mZnNldCx3aWR0aDpNYXRoLnJvdW5kKGUud2lkdGgpLGhlaWdodDpNYXRoLnJvdW5kKGUuaGVpZ2h0KX19LGNzczpmdW5jdGlvbih0LGkpe2lmKGFyZ3VtZW50cy5sZW5ndGg8Mil7dmFyIHI9dGhpc1swXSxvPWdldENvbXB1dGVkU3R5bGUociwiIik7aWYoIXIpcmV0dXJuO2lmKCJzdHJpbmciPT10eXBlb2YgdClyZXR1cm4gci5zdHlsZVtDKHQpXXx8by5nZXRQcm9wZXJ0eVZhbHVlKHQpO2lmKEEodCkpe3ZhciBzPXt9O3JldHVybiBuLmVhY2goQSh0KT90Olt0XSxmdW5jdGlvbih0LGUpe3NbZV09ci5zdHlsZVtDKGUpXXx8by5nZXRQcm9wZXJ0eVZhbHVlKGUpfSksc319dmFyIGE9IiI7aWYoInN0cmluZyI9PUwodCkpaXx8MD09PWk/YT1GKHQpKyI6IitIKHQsaSk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShGKHQpKX0pO2Vsc2UgZm9yKGUgaW4gdCl0W2VdfHwwPT09dFtlXT9hKz1GKGUpKyI6IitIKGUsdFtlXSkrIjsiOnRoaXMuZWFjaChmdW5jdGlvbigpe3RoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkoRihlKSl9KTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dGhpcy5zdHlsZS5jc3NUZXh0Kz0iOyIrYX0pfSxpbmRleDpmdW5jdGlvbih0KXtyZXR1cm4gdD90aGlzLmluZGV4T2Yobih0KVswXSk6dGhpcy5wYXJlbnQoKS5jaGlsZHJlbigpLmluZGV4T2YodGhpc1swXSl9LGhhc0NsYXNzOmZ1bmN0aW9uKHQpe3JldHVybiB0P3Iuc29tZS5jYWxsKHRoaXMsZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGVzdChXKHQpKX0scSh0KSk6ITF9LGFkZENsYXNzOmZ1bmN0aW9uKHQpe3JldHVybiB0P3RoaXMuZWFjaChmdW5jdGlvbihlKXtpPVtdO3ZhciByPVcodGhpcyksbz1KKHRoaXMsdCxlLHIpO28uc3BsaXQoL1xzKy9nKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe24odGhpcykuaGFzQ2xhc3ModCl8fGkucHVzaCh0KX0sdGhpcyksaS5sZW5ndGgmJlcodGhpcyxyKyhyPyIgIjoiIikraS5qb2luKCIgIikpfSk6dGhpc30scmVtb3ZlQ2xhc3M6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihuKXtyZXR1cm4gZT09PXQ/Vyh0aGlzLCIiKTooaT1XKHRoaXMpLEoodGhpcyxlLG4saSkuc3BsaXQoL1xzKy9nKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2k9aS5yZXBsYWNlKHEodCksIiAiKX0pLHZvaWQgVyh0aGlzLGkudHJpbSgpKSl9KX0sdG9nZ2xlQ2xhc3M6ZnVuY3Rpb24oZSxpKXtyZXR1cm4gZT90aGlzLmVhY2goZnVuY3Rpb24ocil7dmFyIG89bih0aGlzKSxzPUoodGhpcyxlLHIsVyh0aGlzKSk7cy5zcGxpdCgvXHMrL2cpLmZvckVhY2goZnVuY3Rpb24oZSl7KGk9PT10PyFvLmhhc0NsYXNzKGUpOmkpP28uYWRkQ2xhc3MoZSk6by5yZW1vdmVDbGFzcyhlKX0pfSk6dGhpc30sc2Nyb2xsVG9wOmZ1bmN0aW9uKGUpe2lmKHRoaXMubGVuZ3RoKXt2YXIgbj0ic2Nyb2xsVG9wImluIHRoaXNbMF07cmV0dXJuIGU9PT10P24/dGhpc1swXS5zY3JvbGxUb3A6dGhpc1swXS5wYWdlWU9mZnNldDp0aGlzLmVhY2gobj9mdW5jdGlvbigpe3RoaXMuc2Nyb2xsVG9wPWV9OmZ1bmN0aW9uKCl7dGhpcy5zY3JvbGxUbyh0aGlzLnNjcm9sbFgsZSl9KX19LHNjcm9sbExlZnQ6ZnVuY3Rpb24oZSl7aWYodGhpcy5sZW5ndGgpe3ZhciBuPSJzY3JvbGxMZWZ0ImluIHRoaXNbMF07cmV0dXJuIGU9PT10P24/dGhpc1swXS5zY3JvbGxMZWZ0OnRoaXNbMF0ucGFnZVhPZmZzZXQ6dGhpcy5lYWNoKG4/ZnVuY3Rpb24oKXt0aGlzLnNjcm9sbExlZnQ9ZX06ZnVuY3Rpb24oKXt0aGlzLnNjcm9sbFRvKGUsdGhpcy5zY3JvbGxZKX0pfX0scG9zaXRpb246ZnVuY3Rpb24oKXtpZih0aGlzLmxlbmd0aCl7dmFyIHQ9dGhpc1swXSxlPXRoaXMub2Zmc2V0UGFyZW50KCksaT10aGlzLm9mZnNldCgpLHI9ZC50ZXN0KGVbMF0ubm9kZU5hbWUpP3t0b3A6MCxsZWZ0OjB9OmUub2Zmc2V0KCk7cmV0dXJuIGkudG9wLT1wYXJzZUZsb2F0KG4odCkuY3NzKCJtYXJnaW4tdG9wIikpfHwwLGkubGVmdC09cGFyc2VGbG9hdChuKHQpLmNzcygibWFyZ2luLWxlZnQiKSl8fDAsci50b3ArPXBhcnNlRmxvYXQobihlWzBdKS5jc3MoImJvcmRlci10b3Atd2lkdGgiKSl8fDAsci5sZWZ0Kz1wYXJzZUZsb2F0KG4oZVswXSkuY3NzKCJib3JkZXItbGVmdC13aWR0aCIpKXx8MCx7dG9wOmkudG9wLXIudG9wLGxlZnQ6aS5sZWZ0LXIubGVmdH19fSxvZmZzZXRQYXJlbnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy5vZmZzZXRQYXJlbnR8fGEuYm9keTt0JiYhZC50ZXN0KHQubm9kZU5hbWUpJiYic3RhdGljIj09bih0KS5jc3MoInBvc2l0aW9uIik7KXQ9dC5vZmZzZXRQYXJlbnQ7cmV0dXJuIHR9KX19LG4uZm4uZGV0YWNoPW4uZm4ucmVtb3ZlLFsid2lkdGgiLCJoZWlnaHQiXS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciBpPWUucmVwbGFjZSgvLi8sZnVuY3Rpb24odCl7cmV0dXJuIHRbMF0udG9VcHBlckNhc2UoKX0pO24uZm5bZV09ZnVuY3Rpb24ocil7dmFyIG8scz10aGlzWzBdO3JldHVybiByPT09dD8kKHMpP3NbImlubmVyIitpXTpfKHMpP3MuZG9jdW1lbnRFbGVtZW50WyJzY3JvbGwiK2ldOihvPXRoaXMub2Zmc2V0KCkpJiZvW2VdOnRoaXMuZWFjaChmdW5jdGlvbih0KXtzPW4odGhpcykscy5jc3MoZSxKKHRoaXMscix0LHNbZV0oKSkpfSl9fSksdi5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7dmFyIGk9ZSUyO24uZm5bdF09ZnVuY3Rpb24oKXt2YXIgdCxvLHI9bi5tYXAoYXJndW1lbnRzLGZ1bmN0aW9uKGUpe3JldHVybiB0PUwoZSksIm9iamVjdCI9PXR8fCJhcnJheSI9PXR8fG51bGw9PWU/ZTpULmZyYWdtZW50KGUpfSkscz10aGlzLmxlbmd0aD4xO3JldHVybiByLmxlbmd0aDwxP3RoaXM6dGhpcy5lYWNoKGZ1bmN0aW9uKHQsdSl7bz1pP3U6dS5wYXJlbnROb2RlLHU9MD09ZT91Lm5leHRTaWJsaW5nOjE9PWU/dS5maXJzdENoaWxkOjI9PWU/dTpudWxsO3ZhciBmPW4uY29udGFpbnMoYS5kb2N1bWVudEVsZW1lbnQsbyk7ci5mb3JFYWNoKGZ1bmN0aW9uKHQpe2lmKHMpdD10LmNsb25lTm9kZSghMCk7ZWxzZSBpZighbylyZXR1cm4gbih0KS5yZW1vdmUoKTtvLmluc2VydEJlZm9yZSh0LHUpLGYmJkcodCxmdW5jdGlvbih0KXtudWxsPT10Lm5vZGVOYW1lfHwiU0NSSVBUIiE9PXQubm9kZU5hbWUudG9VcHBlckNhc2UoKXx8dC50eXBlJiYidGV4dC9qYXZhc2NyaXB0IiE9PXQudHlwZXx8dC5zcmN8fHdpbmRvdy5ldmFsLmNhbGwod2luZG93LHQuaW5uZXJIVE1MKX0pfSl9KX0sbi5mbltpP3QrIlRvIjoiaW5zZXJ0IisoZT8iQmVmb3JlIjoiQWZ0ZXIiKV09ZnVuY3Rpb24oZSl7cmV0dXJuIG4oZSlbdF0odGhpcyksdGhpc319KSxULloucHJvdG90eXBlPW4uZm4sVC51bmlxPU4sVC5kZXNlcmlhbGl6ZVZhbHVlPVksbi56ZXB0bz1ULG59KCk7d2luZG93LlplcHRvPVplcHRvLHZvaWQgMD09PXdpbmRvdy4kJiYod2luZG93LiQ9WmVwdG8pLGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGwodCl7cmV0dXJuIHQuX3ppZHx8KHQuX3ppZD1lKyspfWZ1bmN0aW9uIGgodCxlLG4saSl7aWYoZT1wKGUpLGUubnMpdmFyIHI9ZChlLm5zKTtyZXR1cm4oc1tsKHQpXXx8W10pLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4hKCF0fHxlLmUmJnQuZSE9ZS5lfHxlLm5zJiYhci50ZXN0KHQubnMpfHxuJiZsKHQuZm4pIT09bChuKXx8aSYmdC5zZWwhPWkpfSl9ZnVuY3Rpb24gcCh0KXt2YXIgZT0oIiIrdCkuc3BsaXQoIi4iKTtyZXR1cm57ZTplWzBdLG5zOmUuc2xpY2UoMSkuc29ydCgpLmpvaW4oIiAiKX19ZnVuY3Rpb24gZCh0KXtyZXR1cm4gbmV3IFJlZ0V4cCgiKD86XnwgKSIrdC5yZXBsYWNlKCIgIiwiIC4qID8iKSsiKD86IHwkKSIpfWZ1bmN0aW9uIG0odCxlKXtyZXR1cm4gdC5kZWwmJiF1JiZ0LmUgaW4gZnx8ISFlfWZ1bmN0aW9uIGcodCl7cmV0dXJuIGNbdF18fHUmJmZbdF18fHR9ZnVuY3Rpb24gdihlLGkscixvLGEsdSxmKXt2YXIgaD1sKGUpLGQ9c1toXXx8KHNbaF09W10pO2kuc3BsaXQoL1xzLykuZm9yRWFjaChmdW5jdGlvbihpKXtpZigicmVhZHkiPT1pKXJldHVybiB0KGRvY3VtZW50KS5yZWFkeShyKTt2YXIgcz1wKGkpO3MuZm49cixzLnNlbD1hLHMuZSBpbiBjJiYocj1mdW5jdGlvbihlKXt2YXIgbj1lLnJlbGF0ZWRUYXJnZXQ7cmV0dXJuIW58fG4hPT10aGlzJiYhdC5jb250YWlucyh0aGlzLG4pP3MuZm4uYXBwbHkodGhpcyxhcmd1bWVudHMpOnZvaWQgMH0pLHMuZGVsPXU7dmFyIGw9dXx8cjtzLnByb3h5PWZ1bmN0aW9uKHQpe2lmKHQ9aih0KSwhdC5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpKXt0LmRhdGE9bzt2YXIgaT1sLmFwcGx5KGUsdC5fYXJncz09bj9bdF06W3RdLmNvbmNhdCh0Ll9hcmdzKSk7cmV0dXJuIGk9PT0hMSYmKHQucHJldmVudERlZmF1bHQoKSx0LnN0b3BQcm9wYWdhdGlvbigpKSxpfX0scy5pPWQubGVuZ3RoLGQucHVzaChzKSwiYWRkRXZlbnRMaXN0ZW5lciJpbiBlJiZlLmFkZEV2ZW50TGlzdGVuZXIoZyhzLmUpLHMucHJveHksbShzLGYpKX0pfWZ1bmN0aW9uIHkodCxlLG4saSxyKXt2YXIgbz1sKHQpOyhlfHwiIikuc3BsaXQoL1xzLykuZm9yRWFjaChmdW5jdGlvbihlKXtoKHQsZSxuLGkpLmZvckVhY2goZnVuY3Rpb24oZSl7ZGVsZXRlIHNbb11bZS5pXSwicmVtb3ZlRXZlbnRMaXN0ZW5lciJpbiB0JiZ0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZyhlLmUpLGUucHJveHksbShlLHIpKX0pfSl9ZnVuY3Rpb24gaihlLGkpe3JldHVybihpfHwhZS5pc0RlZmF1bHRQcmV2ZW50ZWQpJiYoaXx8KGk9ZSksdC5lYWNoKEUsZnVuY3Rpb24odCxuKXt2YXIgcj1pW3RdO2VbdF09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tuXT14LHImJnIuYXBwbHkoaSxhcmd1bWVudHMpfSxlW25dPWJ9KSwoaS5kZWZhdWx0UHJldmVudGVkIT09bj9pLmRlZmF1bHRQcmV2ZW50ZWQ6InJldHVyblZhbHVlImluIGk/aS5yZXR1cm5WYWx1ZT09PSExOmkuZ2V0UHJldmVudERlZmF1bHQmJmkuZ2V0UHJldmVudERlZmF1bHQoKSkmJihlLmlzRGVmYXVsdFByZXZlbnRlZD14KSksZX1mdW5jdGlvbiBTKHQpe3ZhciBlLGk9e29yaWdpbmFsRXZlbnQ6dH07Zm9yKGUgaW4gdCl3LnRlc3QoZSl8fHRbZV09PT1ufHwoaVtlXT10W2VdKTtyZXR1cm4gaihpLHQpfXZhciBuLGU9MSxpPUFycmF5LnByb3RvdHlwZS5zbGljZSxyPXQuaXNGdW5jdGlvbixvPWZ1bmN0aW9uKHQpe3JldHVybiJzdHJpbmciPT10eXBlb2YgdH0scz17fSxhPXt9LHU9Im9uZm9jdXNpbiJpbiB3aW5kb3csZj17Zm9jdXM6ImZvY3VzaW4iLGJsdXI6ImZvY3Vzb3V0In0sYz17bW91c2VlbnRlcjoibW91c2VvdmVyIixtb3VzZWxlYXZlOiJtb3VzZW91dCJ9O2EuY2xpY2s9YS5tb3VzZWRvd249YS5tb3VzZXVwPWEubW91c2Vtb3ZlPSJNb3VzZUV2ZW50cyIsdC5ldmVudD17YWRkOnYscmVtb3ZlOnl9LHQucHJveHk9ZnVuY3Rpb24oZSxuKXt2YXIgcz0yIGluIGFyZ3VtZW50cyYmaS5jYWxsKGFyZ3VtZW50cywyKTtpZihyKGUpKXt2YXIgYT1mdW5jdGlvbigpe3JldHVybiBlLmFwcGx5KG4scz9zLmNvbmNhdChpLmNhbGwoYXJndW1lbnRzKSk6YXJndW1lbnRzKX07cmV0dXJuIGEuX3ppZD1sKGUpLGF9aWYobyhuKSlyZXR1cm4gcz8ocy51bnNoaWZ0KGVbbl0sZSksdC5wcm94eS5hcHBseShudWxsLHMpKTp0LnByb3h5KGVbbl0sZSk7dGhyb3cgbmV3IFR5cGVFcnJvcigiZXhwZWN0ZWQgZnVuY3Rpb24iKX0sdC5mbi5iaW5kPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdGhpcy5vbih0LGUsbil9LHQuZm4udW5iaW5kPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMub2ZmKHQsZSl9LHQuZm4ub25lPWZ1bmN0aW9uKHQsZSxuLGkpe3JldHVybiB0aGlzLm9uKHQsZSxuLGksMSl9O3ZhciB4PWZ1bmN0aW9uKCl7cmV0dXJuITB9LGI9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sdz0vXihbQS1aXXxyZXR1cm5WYWx1ZSR8bGF5ZXJbWFldJCkvLEU9e3ByZXZlbnREZWZhdWx0OiJpc0RlZmF1bHRQcmV2ZW50ZWQiLHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbjoiaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQiLHN0b3BQcm9wYWdhdGlvbjoiaXNQcm9wYWdhdGlvblN0b3BwZWQifTt0LmZuLmRlbGVnYXRlPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdGhpcy5vbihlLHQsbil9LHQuZm4udW5kZWxlZ2F0ZT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHRoaXMub2ZmKGUsdCxuKX0sdC5mbi5saXZlPWZ1bmN0aW9uKGUsbil7cmV0dXJuIHQoZG9jdW1lbnQuYm9keSkuZGVsZWdhdGUodGhpcy5zZWxlY3RvcixlLG4pLHRoaXN9LHQuZm4uZGllPWZ1bmN0aW9uKGUsbil7cmV0dXJuIHQoZG9jdW1lbnQuYm9keSkudW5kZWxlZ2F0ZSh0aGlzLnNlbGVjdG9yLGUsbiksdGhpc30sdC5mbi5vbj1mdW5jdGlvbihlLHMsYSx1LGYpe3ZhciBjLGwsaD10aGlzO3JldHVybiBlJiYhbyhlKT8odC5lYWNoKGUsZnVuY3Rpb24odCxlKXtoLm9uKHQscyxhLGUsZil9KSxoKToobyhzKXx8cih1KXx8dT09PSExfHwodT1hLGE9cyxzPW4pLChyKGEpfHxhPT09ITEpJiYodT1hLGE9biksdT09PSExJiYodT1iKSxoLmVhY2goZnVuY3Rpb24obixyKXtmJiYoYz1mdW5jdGlvbih0KXtyZXR1cm4geShyLHQudHlwZSx1KSx1LmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pLHMmJihsPWZ1bmN0aW9uKGUpe3ZhciBuLG89dChlLnRhcmdldCkuY2xvc2VzdChzLHIpLmdldCgwKTtyZXR1cm4gbyYmbyE9PXI/KG49dC5leHRlbmQoUyhlKSx7Y3VycmVudFRhcmdldDpvLGxpdmVGaXJlZDpyfSksKGN8fHUpLmFwcGx5KG8sW25dLmNvbmNhdChpLmNhbGwoYXJndW1lbnRzLDEpKSkpOnZvaWQgMH0pLHYocixlLHUsYSxzLGx8fGMpfSkpfSx0LmZuLm9mZj1mdW5jdGlvbihlLGkscyl7dmFyIGE9dGhpcztyZXR1cm4gZSYmIW8oZSk/KHQuZWFjaChlLGZ1bmN0aW9uKHQsZSl7YS5vZmYodCxpLGUpfSksYSk6KG8oaSl8fHIocyl8fHM9PT0hMXx8KHM9aSxpPW4pLHM9PT0hMSYmKHM9YiksYS5lYWNoKGZ1bmN0aW9uKCl7eSh0aGlzLGUscyxpKX0pKX0sdC5mbi50cmlnZ2VyPWZ1bmN0aW9uKGUsbil7cmV0dXJuIGU9byhlKXx8dC5pc1BsYWluT2JqZWN0KGUpP3QuRXZlbnQoZSk6aihlKSxlLl9hcmdzPW4sdGhpcy5lYWNoKGZ1bmN0aW9uKCl7ImRpc3BhdGNoRXZlbnQiaW4gdGhpcz90aGlzLmRpc3BhdGNoRXZlbnQoZSk6dCh0aGlzKS50cmlnZ2VySGFuZGxlcihlLG4pfSl9LHQuZm4udHJpZ2dlckhhbmRsZXI9ZnVuY3Rpb24oZSxuKXt2YXIgaSxyO3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24ocyxhKXtpPVMobyhlKT90LkV2ZW50KGUpOmUpLGkuX2FyZ3M9bixpLnRhcmdldD1hLHQuZWFjaChoKGEsZS50eXBlfHxlKSxmdW5jdGlvbih0LGUpe3JldHVybiByPWUucHJveHkoaSksaS5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpPyExOnZvaWQgMH0pfSkscn0sImZvY3VzaW4gZm9jdXNvdXQgbG9hZCByZXNpemUgc2Nyb2xsIHVubG9hZCBjbGljayBkYmxjbGljayBtb3VzZWRvd24gbW91c2V1cCBtb3VzZW1vdmUgbW91c2VvdmVyIG1vdXNlb3V0IG1vdXNlZW50ZXIgbW91c2VsZWF2ZSBjaGFuZ2Ugc2VsZWN0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgZXJyb3IiLnNwbGl0KCIgIikuZm9yRWFjaChmdW5jdGlvbihlKXt0LmZuW2VdPWZ1bmN0aW9uKHQpe3JldHVybiB0P3RoaXMuYmluZChlLHQpOnRoaXMudHJpZ2dlcihlKX19KSxbImZvY3VzIiwiYmx1ciJdLmZvckVhY2goZnVuY3Rpb24oZSl7dC5mbltlXT1mdW5jdGlvbih0KXtyZXR1cm4gdD90aGlzLmJpbmQoZSx0KTp0aGlzLmVhY2goZnVuY3Rpb24oKXt0cnl7dGhpc1tlXSgpfWNhdGNoKHQpe319KSx0aGlzfX0pLHQuRXZlbnQ9ZnVuY3Rpb24odCxlKXtvKHQpfHwoZT10LHQ9ZS50eXBlKTt2YXIgbj1kb2N1bWVudC5jcmVhdGVFdmVudChhW3RdfHwiRXZlbnRzIiksaT0hMDtpZihlKWZvcih2YXIgciBpbiBlKSJidWJibGVzIj09cj9pPSEhZVtyXTpuW3JdPWVbcl07cmV0dXJuIG4uaW5pdEV2ZW50KHQsaSwhMCksaihuKX19KFplcHRvKSxmdW5jdGlvbih0KXtmdW5jdGlvbiBsKGUsbixpKXt2YXIgcj10LkV2ZW50KG4pO3JldHVybiB0KGUpLnRyaWdnZXIocixpKSwhci5pc0RlZmF1bHRQcmV2ZW50ZWQoKX1mdW5jdGlvbiBoKHQsZSxpLHIpe3JldHVybiB0Lmdsb2JhbD9sKGV8fG4saSxyKTp2b2lkIDB9ZnVuY3Rpb24gcChlKXtlLmdsb2JhbCYmMD09PXQuYWN0aXZlKysmJmgoZSxudWxsLCJhamF4U3RhcnQiKX1mdW5jdGlvbiBkKGUpe2UuZ2xvYmFsJiYhLS10LmFjdGl2ZSYmaChlLG51bGwsImFqYXhTdG9wIil9ZnVuY3Rpb24gbSh0LGUpe3ZhciBuPWUuY29udGV4dDtyZXR1cm4gZS5iZWZvcmVTZW5kLmNhbGwobix0LGUpPT09ITF8fGgoZSxuLCJhamF4QmVmb3JlU2VuZCIsW3QsZV0pPT09ITE/ITE6dm9pZCBoKGUsbiwiYWpheFNlbmQiLFt0LGVdKX1mdW5jdGlvbiBnKHQsZSxuLGkpe3ZhciByPW4uY29udGV4dCxvPSJzdWNjZXNzIjtuLnN1Y2Nlc3MuY2FsbChyLHQsbyxlKSxpJiZpLnJlc29sdmVXaXRoKHIsW3QsbyxlXSksaChuLHIsImFqYXhTdWNjZXNzIixbZSxuLHRdKSx5KG8sZSxuKX1mdW5jdGlvbiB2KHQsZSxuLGkscil7dmFyIG89aS5jb250ZXh0O2kuZXJyb3IuY2FsbChvLG4sZSx0KSxyJiZyLnJlamVjdFdpdGgobyxbbixlLHRdKSxoKGksbywiYWpheEVycm9yIixbbixpLHR8fGVdKSx5KGUsbixpKX1mdW5jdGlvbiB5KHQsZSxuKXt2YXIgaT1uLmNvbnRleHQ7bi5jb21wbGV0ZS5jYWxsKGksZSx0KSxoKG4saSwiYWpheENvbXBsZXRlIixbZSxuXSksZChuKX1mdW5jdGlvbiB4KCl7fWZ1bmN0aW9uIGIodCl7cmV0dXJuIHQmJih0PXQuc3BsaXQoIjsiLDIpWzBdKSx0JiYodD09Zj8iaHRtbCI6dD09dT8ianNvbiI6cy50ZXN0KHQpPyJzY3JpcHQiOmEudGVzdCh0KSYmInhtbCIpfHwidGV4dCJ9ZnVuY3Rpb24gdyh0LGUpe3JldHVybiIiPT1lP3Q6KHQrIiYiK2UpLnJlcGxhY2UoL1smP117MSwyfS8sIj8iKX1mdW5jdGlvbiBFKGUpe2UucHJvY2Vzc0RhdGEmJmUuZGF0YSYmInN0cmluZyIhPXQudHlwZShlLmRhdGEpJiYoZS5kYXRhPXQucGFyYW0oZS5kYXRhLGUudHJhZGl0aW9uYWwpKSwhZS5kYXRhfHxlLnR5cGUmJiJHRVQiIT1lLnR5cGUudG9VcHBlckNhc2UoKXx8KGUudXJsPXcoZS51cmwsZS5kYXRhKSxlLmRhdGE9dm9pZCAwKX1mdW5jdGlvbiBqKGUsbixpLHIpe3JldHVybiB0LmlzRnVuY3Rpb24obikmJihyPWksaT1uLG49dm9pZCAwKSx0LmlzRnVuY3Rpb24oaSl8fChyPWksaT12b2lkIDApLHt1cmw6ZSxkYXRhOm4sc3VjY2VzczppLGRhdGFUeXBlOnJ9fWZ1bmN0aW9uIFQoZSxuLGkscil7dmFyIG8scz10LmlzQXJyYXkobiksYT10LmlzUGxhaW5PYmplY3Qobik7dC5lYWNoKG4sZnVuY3Rpb24obix1KXtvPXQudHlwZSh1KSxyJiYobj1pP3I6cisiWyIrKGF8fCJvYmplY3QiPT1vfHwiYXJyYXkiPT1vP246IiIpKyJdIiksIXImJnM/ZS5hZGQodS5uYW1lLHUudmFsdWUpOiJhcnJheSI9PW98fCFpJiYib2JqZWN0Ij09bz9UKGUsdSxpLG4pOmUuYWRkKG4sdSl9KX12YXIgaSxyLGU9MCxuPXdpbmRvdy5kb2N1bWVudCxvPS88c2NyaXB0XGJbXjxdKig/Oig/ITxcL3NjcmlwdD4pPFtePF0qKSo8XC9zY3JpcHQ+L2dpLHM9L14oPzp0ZXh0fGFwcGxpY2F0aW9uKVwvamF2YXNjcmlwdC9pLGE9L14oPzp0ZXh0fGFwcGxpY2F0aW9uKVwveG1sL2ksdT0iYXBwbGljYXRpb24vanNvbiIsZj0idGV4dC9odG1sIixjPS9eXHMqJC87dC5hY3RpdmU9MCx0LmFqYXhKU09OUD1mdW5jdGlvbihpLHIpe2lmKCEoInR5cGUiaW4gaSkpcmV0dXJuIHQuYWpheChpKTt2YXIgZixoLG89aS5qc29ucENhbGxiYWNrLHM9KHQuaXNGdW5jdGlvbihvKT9vKCk6byl8fCJqc29ucCIrICsrZSxhPW4uY3JlYXRlRWxlbWVudCgic2NyaXB0IiksdT13aW5kb3dbc10sYz1mdW5jdGlvbihlKXt0KGEpLnRyaWdnZXJIYW5kbGVyKCJlcnJvciIsZXx8ImFib3J0Iil9LGw9e2Fib3J0OmN9O3JldHVybiByJiZyLnByb21pc2UobCksdChhKS5vbigibG9hZCBlcnJvciIsZnVuY3Rpb24oZSxuKXtjbGVhclRpbWVvdXQoaCksdChhKS5vZmYoKS5yZW1vdmUoKSwiZXJyb3IiIT1lLnR5cGUmJmY/ZyhmWzBdLGwsaSxyKTp2KG51bGwsbnx8ImVycm9yIixsLGksciksd2luZG93W3NdPXUsZiYmdC5pc0Z1bmN0aW9uKHUpJiZ1KGZbMF0pLHU9Zj12b2lkIDB9KSxtKGwsaSk9PT0hMT8oYygiYWJvcnQiKSxsKTood2luZG93W3NdPWZ1bmN0aW9uKCl7Zj1hcmd1bWVudHN9LGEuc3JjPWkudXJsLnJlcGxhY2UoL1w/KC4rKT1cPy8sIj8kMT0iK3MpLG4uaGVhZC5hcHBlbmRDaGlsZChhKSxpLnRpbWVvdXQ+MCYmKGg9c2V0VGltZW91dChmdW5jdGlvbigpe2MoInRpbWVvdXQiKX0saS50aW1lb3V0KSksbCl9LHQuYWpheFNldHRpbmdzPXt0eXBlOiJHRVQiLGJlZm9yZVNlbmQ6eCxzdWNjZXNzOngsZXJyb3I6eCxjb21wbGV0ZTp4LGNvbnRleHQ6bnVsbCxnbG9iYWw6ITAseGhyOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyB3aW5kb3cuWE1MSHR0cFJlcXVlc3R9LGFjY2VwdHM6e3NjcmlwdDoidGV4dC9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQiLGpzb246dSx4bWw6ImFwcGxpY2F0aW9uL3htbCwgdGV4dC94bWwiLGh0bWw6Zix0ZXh0OiJ0ZXh0L3BsYWluIn0sY3Jvc3NEb21haW46ITEsdGltZW91dDowLHByb2Nlc3NEYXRhOiEwLGNhY2hlOiEwfSx0LmFqYXg9ZnVuY3Rpb24oZSl7dmFyIG49dC5leHRlbmQoe30sZXx8e30pLG89dC5EZWZlcnJlZCYmdC5EZWZlcnJlZCgpO2ZvcihpIGluIHQuYWpheFNldHRpbmdzKXZvaWQgMD09PW5baV0mJihuW2ldPXQuYWpheFNldHRpbmdzW2ldKTtwKG4pLG4uY3Jvc3NEb21haW58fChuLmNyb3NzRG9tYWluPS9eKFtcdy1dKzopP1wvXC8oW15cL10rKS8udGVzdChuLnVybCkmJlJlZ0V4cC4kMiE9d2luZG93LmxvY2F0aW9uLmhvc3QpLG4udXJsfHwobi51cmw9d2luZG93LmxvY2F0aW9uLnRvU3RyaW5nKCkpLEUobik7dmFyIHM9bi5kYXRhVHlwZSxhPS9cPy4rPVw/Ly50ZXN0KG4udXJsKTtpZihhJiYocz0ianNvbnAiKSxuLmNhY2hlIT09ITEmJihlJiZlLmNhY2hlPT09ITB8fCJzY3JpcHQiIT1zJiYianNvbnAiIT1zKXx8KG4udXJsPXcobi51cmwsIl89IitEYXRlLm5vdygpKSksImpzb25wIj09cylyZXR1cm4gYXx8KG4udXJsPXcobi51cmwsbi5qc29ucD9uLmpzb25wKyI9PyI6bi5qc29ucD09PSExPyIiOiJjYWxsYmFjaz0/IikpLHQuYWpheEpTT05QKG4sbyk7dmFyIGosdT1uLmFjY2VwdHNbc10sZj17fSxsPWZ1bmN0aW9uKHQsZSl7Zlt0LnRvTG93ZXJDYXNlKCldPVt0LGVdfSxoPS9eKFtcdy1dKzopXC9cLy8udGVzdChuLnVybCk/UmVnRXhwLiQxOndpbmRvdy5sb2NhdGlvbi5wcm90b2NvbCxkPW4ueGhyKCkseT1kLnNldFJlcXVlc3RIZWFkZXI7aWYobyYmby5wcm9taXNlKGQpLG4uY3Jvc3NEb21haW58fGwoIlgtUmVxdWVzdGVkLVdpdGgiLCJYTUxIdHRwUmVxdWVzdCIpLGwoIkFjY2VwdCIsdXx8IiovKiIpLCh1PW4ubWltZVR5cGV8fHUpJiYodS5pbmRleE9mKCIsIik+LTEmJih1PXUuc3BsaXQoIiwiLDIpWzBdKSxkLm92ZXJyaWRlTWltZVR5cGUmJmQub3ZlcnJpZGVNaW1lVHlwZSh1KSksKG4uY29udGVudFR5cGV8fG4uY29udGVudFR5cGUhPT0hMSYmbi5kYXRhJiYiR0VUIiE9bi50eXBlLnRvVXBwZXJDYXNlKCkpJiZsKCJDb250ZW50LVR5cGUiLG4uY29udGVudFR5cGV8fCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiKSxuLmhlYWRlcnMpZm9yKHIgaW4gbi5oZWFkZXJzKWwocixuLmhlYWRlcnNbcl0pO2lmKGQuc2V0UmVxdWVzdEhlYWRlcj1sLGQub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7aWYoND09ZC5yZWFkeVN0YXRlKXtkLm9ucmVhZHlzdGF0ZWNoYW5nZT14LGNsZWFyVGltZW91dChqKTt2YXIgZSxpPSExO2lmKGQuc3RhdHVzPj0yMDAmJmQuc3RhdHVzPDMwMHx8MzA0PT1kLnN0YXR1c3x8MD09ZC5zdGF0dXMmJiJmaWxlOiI9PWgpe3M9c3x8YihuLm1pbWVUeXBlfHxkLmdldFJlc3BvbnNlSGVhZGVyKCJjb250ZW50LXR5cGUiKSksZT1kLnJlc3BvbnNlVGV4dDt0cnl7InNjcmlwdCI9PXM/KDEsZXZhbCkoZSk6InhtbCI9PXM/ZT1kLnJlc3BvbnNlWE1MOiJqc29uIj09cyYmKGU9Yy50ZXN0KGUpP251bGw6dC5wYXJzZUpTT04oZSkpfWNhdGNoKHIpe2k9cn1pP3YoaSwicGFyc2VyZXJyb3IiLGQsbixvKTpnKGUsZCxuLG8pfWVsc2UgdihkLnN0YXR1c1RleHR8fG51bGwsZC5zdGF0dXM/ImVycm9yIjoiYWJvcnQiLGQsbixvKX19LG0oZCxuKT09PSExKXJldHVybiBkLmFib3J0KCksdihudWxsLCJhYm9ydCIsZCxuLG8pLGQ7aWYobi54aHJGaWVsZHMpZm9yKHIgaW4gbi54aHJGaWVsZHMpZFtyXT1uLnhockZpZWxkc1tyXTt2YXIgUz0iYXN5bmMiaW4gbj9uLmFzeW5jOiEwO2Qub3BlbihuLnR5cGUsbi51cmwsUyxuLnVzZXJuYW1lLG4ucGFzc3dvcmQpO2ZvcihyIGluIGYpeS5hcHBseShkLGZbcl0pO3JldHVybiBuLnRpbWVvdXQ+MCYmKGo9c2V0VGltZW91dChmdW5jdGlvbigpe2Qub25yZWFkeXN0YXRlY2hhbmdlPXgsZC5hYm9ydCgpLHYobnVsbCwidGltZW91dCIsZCxuLG8pfSxuLnRpbWVvdXQpKSxkLnNlbmQobi5kYXRhP24uZGF0YTpudWxsKSxkfSx0LmdldD1mdW5jdGlvbigpe3JldHVybiB0LmFqYXgoai5hcHBseShudWxsLGFyZ3VtZW50cykpfSx0LnBvc3Q9ZnVuY3Rpb24oKXt2YXIgZT1qLmFwcGx5KG51bGwsYXJndW1lbnRzKTtyZXR1cm4gZS50eXBlPSJQT1NUIix0LmFqYXgoZSl9LHQuZ2V0SlNPTj1mdW5jdGlvbigpe3ZhciBlPWouYXBwbHkobnVsbCxhcmd1bWVudHMpO3JldHVybiBlLmRhdGFUeXBlPSJqc29uIix0LmFqYXgoZSl9LHQuZm4ubG9hZD1mdW5jdGlvbihlLG4saSl7aWYoIXRoaXMubGVuZ3RoKXJldHVybiB0aGlzO3ZhciBhLHI9dGhpcyxzPWUuc3BsaXQoL1xzLyksdT1qKGUsbixpKSxmPXUuc3VjY2VzcztyZXR1cm4gcy5sZW5ndGg+MSYmKHUudXJsPXNbMF0sYT1zWzFdKSx1LnN1Y2Nlc3M9ZnVuY3Rpb24oZSl7ci5odG1sKGE/dCgiPGRpdj4iKS5odG1sKGUucmVwbGFjZShvLCIiKSkuZmluZChhKTplKSxmJiZmLmFwcGx5KHIsYXJndW1lbnRzKX0sdC5hamF4KHUpLHRoaXN9O3ZhciBTPWVuY29kZVVSSUNvbXBvbmVudDt0LnBhcmFtPWZ1bmN0aW9uKHQsZSl7dmFyIG49W107cmV0dXJuIG4uYWRkPWZ1bmN0aW9uKHQsZSl7dGhpcy5wdXNoKFModCkrIj0iK1MoZSkpfSxUKG4sdCxlKSxuLmpvaW4oIiYiKS5yZXBsYWNlKC8lMjAvZywiKyIpfX0oWmVwdG8pLGZ1bmN0aW9uKHQpe3QuZm4uc2VyaWFsaXplQXJyYXk9ZnVuY3Rpb24oKXt2YXIgbixlPVtdO3JldHVybiB0KFtdLnNsaWNlLmNhbGwodGhpcy5nZXQoMCkuZWxlbWVudHMpKS5lYWNoKGZ1bmN0aW9uKCl7bj10KHRoaXMpO3ZhciBpPW4uYXR0cigidHlwZSIpOyJmaWVsZHNldCIhPXRoaXMubm9kZU5hbWUudG9Mb3dlckNhc2UoKSYmIXRoaXMuZGlzYWJsZWQmJiJzdWJtaXQiIT1pJiYicmVzZXQiIT1pJiYiYnV0dG9uIiE9aSYmKCJyYWRpbyIhPWkmJiJjaGVja2JveCIhPWl8fHRoaXMuY2hlY2tlZCkmJmUucHVzaCh7bmFtZTpuLmF0dHIoIm5hbWUiKSx2YWx1ZTpuLnZhbCgpfSl9KSxlfSx0LmZuLnNlcmlhbGl6ZT1mdW5jdGlvbigpe3ZhciB0PVtdO3JldHVybiB0aGlzLnNlcmlhbGl6ZUFycmF5KCkuZm9yRWFjaChmdW5jdGlvbihlKXt0LnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KGUubmFtZSkrIj0iK2VuY29kZVVSSUNvbXBvbmVudChlLnZhbHVlKSl9KSx0LmpvaW4oIiYiKX0sdC5mbi5zdWJtaXQ9ZnVuY3Rpb24oZSl7aWYoZSl0aGlzLmJpbmQoInN1Ym1pdCIsZSk7ZWxzZSBpZih0aGlzLmxlbmd0aCl7dmFyIG49dC5FdmVudCgic3VibWl0Iik7dGhpcy5lcSgwKS50cmlnZ2VyKG4pLG4uaXNEZWZhdWx0UHJldmVudGVkKCl8fHRoaXMuZ2V0KDApLnN1Ym1pdCgpfXJldHVybiB0aGlzfX0oWmVwdG8pLGZ1bmN0aW9uKHQpeyJfX3Byb3RvX18iaW57fXx8dC5leHRlbmQodC56ZXB0byx7WjpmdW5jdGlvbihlLG4pe3JldHVybiBlPWV8fFtdLHQuZXh0ZW5kKGUsdC5mbiksZS5zZWxlY3Rvcj1ufHwiIixlLl9fWj0hMCxlfSxpc1o6ZnVuY3Rpb24oZSl7cmV0dXJuImFycmF5Ij09PXQudHlwZShlKSYmIl9fWiJpbiBlfX0pO3RyeXtnZXRDb21wdXRlZFN0eWxlKHZvaWQgMCl9Y2F0Y2goZSl7dmFyIG49Z2V0Q29tcHV0ZWRTdHlsZTt3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZT1mdW5jdGlvbih0KXt0cnl7cmV0dXJuIG4odCl9Y2F0Y2goZSl7cmV0dXJuIG51bGx9fX19KFplcHRvKTsK"
	StaticResource["sp/model.html"] = "PCFET0NUWVBFIGh0bWw+DQo8aHRtbD4NCjxoZWFkPg0KICAgIDxtZXRhIGh0dHAtZXF1aXY9IkNhY2hlLUNvbnRyb2wiIGNvbnRlbnQ9Im5vLWNhY2hlLCBuby1zdG9yZSwgbXVzdC1yZXZhbGlkYXRlIi8+DQogICAgPG1ldGEgaHR0cC1lcXVpdj0iUHJhZ21hIiBjb250ZW50PSJuby1jYWNoZSIvPg0KICAgIDxtZXRhIGh0dHAtZXF1aXY9IkV4cGlyZXMiIGNvbnRlbnQ9IjAiLz4NCiAgICA8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD11dGYtOCIvPg0KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJpbml0aWFsLXNjYWxlPTEuMCx3aWR0aD1kZXZpY2Utd2lkdGgsdXNlci1zY2FsYWJsZT0wLG1heGltdW0tc2NhbGU9MS4wIi8+DQogICAgPG1ldGEgY29udGVudD0ieWVzIiBuYW1lPSJhcHBsZS1tb2JpbGUtd2ViLWFwcC1jYXBhYmxlIj4NCiAgICA8bWV0YSBjb250ZW50PSJibGFjayIgbmFtZT0iYXBwbGUtbW9iaWxlLXdlYi1hcHAtc3RhdHVzLWJhci1zdHlsZSI+DQogICAgPG1ldGEgY29udGVudD0idGVsZXBob25lPW5vIiBuYW1lPSJmb3JtYXQtZGV0ZWN0aW9uIj4NCiAgICA8bGluayByZWw9InNob3J0Y3V0IGljb24iIGhyZWY9ImZhdmljb24uaWNvIi8+DQogICAgPHRpdGxlPiR7dGl0bGV9PC90aXRsZT4NCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+DQogICAgICAgIChmdW5jdGlvbiAobCwgbiwgcykgew0KICAgICAgICAgICAgUkVTID0gJyR7cmVzfSc7DQogICAgICAgICAgICBWRVJTSU9OID0gcywgZXZhbChsICYmIHMgPT0gbC5nZXRJdGVtKG4gKyAnX3YnKSAmJiBsLmdldEl0ZW0obikpIHx8ICgoTkVXX1ZFUlNJT04gPSBzKSAmIGRvY3VtZW50LndyaXRlKCc8c2NyaXB0IHNyYz0iJyArIG4gKyAnP3M9JyArIHMgKyAnIj48XC9zY3JpcHQ+JykpDQogICAgICAgIH0pKHdpbmRvdy5sb2NhbFN0b3JhZ2UsICdqcy9nb3RyaXguY2FjaGUuanMnLCAnZ290cml4LmNhY2hlLmpzX3N0YW1wJyk7DQogICAgPC9zY3JpcHQ+DQogICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4NCiAgICAgICAgJHtzdHlsZX0NCiAgICA8L3N0eWxlPg0KPC9oZWFkPg0KPGJvZHk+DQoke2JvZHl9DQo8L2JvZHk+DQo8L2h0bWw+"
	StaticResource["sp/model_static.html"] = "PCFET0NUWVBFIGh0bWw+DQo8aHRtbD4NCjxoZWFkPg0KICAgIDxtZXRhIGh0dHAtZXF1aXY9IkNhY2hlLUNvbnRyb2wiIGNvbnRlbnQ9Im5vLWNhY2hlLCBuby1zdG9yZSwgbXVzdC1yZXZhbGlkYXRlIi8+DQogICAgPG1ldGEgaHR0cC1lcXVpdj0iUHJhZ21hIiBjb250ZW50PSJuby1jYWNoZSIvPg0KICAgIDxtZXRhIGh0dHAtZXF1aXY9IkV4cGlyZXMiIGNvbnRlbnQ9IjAiLz4NCiAgICA8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD11dGYtOCIvPg0KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJpbml0aWFsLXNjYWxlPTEuMCx3aWR0aD1kZXZpY2Utd2lkdGgsdXNlci1zY2FsYWJsZT0wLG1heGltdW0tc2NhbGU9MS4wIi8+DQogICAgPG1ldGEgY29udGVudD0ieWVzIiBuYW1lPSJhcHBsZS1tb2JpbGUtd2ViLWFwcC1jYXBhYmxlIj4NCiAgICA8bWV0YSBjb250ZW50PSJibGFjayIgbmFtZT0iYXBwbGUtbW9iaWxlLXdlYi1hcHAtc3RhdHVzLWJhci1zdHlsZSI+DQogICAgPG1ldGEgY29udGVudD0idGVsZXBob25lPW5vIiBuYW1lPSJmb3JtYXQtZGV0ZWN0aW9uIj4NCiAgICA8bGluayByZWw9InNob3J0Y3V0IGljb24iIGhyZWY9ImZhdmljb24uaWNvIi8+DQogICAgPHRpdGxlPiR7dGl0bGV9PC90aXRsZT4NCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+DQogICAgICAgIHZhciBSRVMgPSAnJHtyZXN9JzsNCiAgICAgICAgZnVuY3Rpb24gSU1HKGRvbSkgew0KICAgICAgICAgICAgd2luZG93LlAgPyBQLmltZyhkb20pIDogKElNRy5pbWdzID8gSU1HLmltZ3MucHVzaChkb20pIDogKElNRy5pbWdzID0gW2RvbV0pKTsNCiAgICAgICAgfTwvc2NyaXB0Pg0KICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+DQogICAgICAgICR7c3R5bGV9DQogICAgPC9zdHlsZT4NCjwvaGVhZD4NCjxib2R5Pg0KJHtib2R5fQ0KPC9ib2R5Pg0KPC9odG1sPg=="
	StaticResource["test.html"] = "PGh0bWwgbW9kZWw9InNwL21vZGVsLmh0bWwiPg0KPGhlYWQ+DQogICAgPHRpdGxlPkdvdHJpeC1BUEnmlofmoaM8L3RpdGxlPg0KICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+DQoNCiAgICA8L3N0eWxlPg0KPC9oZWFkPg0KPGJvZHk+DQoNCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4NCg0KICAgIHRlc3RVc2VyTmFtZVBhc3N3b3JkTG9naW4oKTsNCg0KICAgIC8vIOa1i+ivleS9v+eUqOi0puWPt+WvhueggeeZu+mZhg0KICAgIGZ1bmN0aW9uIHRlc3RVc2VyTmFtZVBhc3N3b3JkTG9naW4oKSB7DQogICAgICAgIFAubG9naW5JbignZ290cml4JywgJ2dvdHJpeCcsIGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgIFAucmVxKHsNCiAgICAgICAgICAgICAgICBmdW5jOiAxMg0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0pOw0KICAgIH0NCjwvc2NyaXB0Pg0KPC9ib2R5Pg0KPC9odG1sPg=="
}
